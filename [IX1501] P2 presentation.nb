(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    479061,       9815]
NotebookOptionsPosition[    460390,       9366]
NotebookOutlinePosition[    462277,       9423]
CellTagsIndexPosition[    462197,       9418]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.7144696399446397`*^9},
 TextAlignment->Center,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4425094d-7b29-433d-9d0a-614c12853665"],

Cell["\<\
 
Projekt 2 - F\[ODoubleDot]rdelningar\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.7144578163072357`*^9, 3.71445784732813*^9}, {
   3.714457883688421*^9, 3.7144578871349936`*^9}, {3.716111786392432*^9, 
   3.7161117864641123`*^9}, 3.7161118235042095`*^9, {3.7167341709844995`*^9, 
   3.71673419336699*^9}, {3.719749780925936*^9, 3.7197497811340623`*^9}, {
   3.7197498203127575`*^9, 3.7197498539048834`*^9}, {3.7209768626109047`*^9, 
   3.72097686638857*^9}, {3.7209771583911304`*^9, 
   3.720977158533222*^9}},ExpressionUUID->"600913ca-f541-4bcb-8a95-\
c2f52f943a1a"],

Cell["IX1501", "Subtitle",
 CellChangeTimes->{{3.714457839297628*^9, 3.7144578437854986`*^9}, {
  3.7145454631804943`*^9, 3.71454547947865*^9}, {3.7197498262912617`*^9, 
  3.719749827573329*^9}},ExpressionUUID->"0b11dabb-8e4d-40c5-b0b3-\
906a46e13c27"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"754c8493-2d4f-453c-bd2b-7d77f29cee29"],

Cell[CellGroupData[{

Cell["Uppgift 1: Distribution Parameters", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
   3.7144595946902475`*^9, 3.714459597220524*^9}, {3.7144746923255525`*^9, 
   3.7144747037432365`*^9}, {3.71454544081025*^9, 3.7145454415309687`*^9}, {
   3.716111871401803*^9, 3.7161119039182987`*^9}, {3.716734196423425*^9, 
   3.7167342056222997`*^9}, {3.719749860780049*^9, 3.719749867660782*^9}, {
   3.7197507524703493`*^9, 3.719750758102913*^9}, {3.7209769016933928`*^9, 
   3.7209769302775693`*^9}, 3.720976963748131*^9, 
   3.7209771864219365`*^9},ExpressionUUID->"c91365e2-a29f-4aba-86aa-\
7fe4f888e4e0"],

Cell["Uppgift 1 best\[ARing]r av tre deluppgifter:", "Text",
 CellChangeTimes->{{3.7208600801227264`*^9, 
  3.7208601383600903`*^9}},ExpressionUUID->"8e596331-9871-43fc-b9fa-\
3ff532ebf231"],

Cell[CellGroupData[{

Cell["Estimera \[Mu] och \[Sigma] fr\[ARing]n delvis slumpad data.", "Item",
 CellChangeTimes->{{3.7208601582829876`*^9, 3.7208601810185304`*^9}, 
   3.720860495159649*^9, {3.720871720801921*^9, 3.7208717264686995`*^9}, {
   3.72087188373605*^9, 
   3.7208719064872155`*^9}},ExpressionUUID->"9b2be48d-d34f-4175-b809-\
4d73bf2fab1f"],

Cell["\<\
Testa de tre f\[ODoubleDot]ljande modellerna till den slumpade datan, och v\
\[ADoubleDot]lj ut den som b\[ADoubleDot]st representerar den slumpade datan.\
\>", "Item",
 CellChangeTimes->{
  3.7208601505950933`*^9, {3.7208601875969934`*^9, 3.720860224755149*^9}, {
   3.720860380388136*^9, 
   3.7208604172650256`*^9}},ExpressionUUID->"50a85870-47c0-4711-9500-\
acc3b81ab2ea"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "a"}], " ", "x"}]]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered",
 CellChangeTimes->{
  3.7208602392558913`*^9},ExpressionUUID->"067b053b-bc35-49db-a329-\
596e54a04cc5"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered",\
ExpressionUUID->"e9d267b7-4ff2-4886-a919-a6c6738085d5"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "b"}], ")"}], 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered",\
ExpressionUUID->"17f3a855-386e-428b-a88b-61cead0a5db3"],

Cell["\<\
Ber\[ADoubleDot]kna ett \[OpenCurlyDoubleQuote]Confidence Interval\
\[CloseCurlyDoubleQuote] p\[ARing] 95% f\[ODoubleDot]r de valda konstanterna \
i den valda modellen. Intervallet f\[ARing]r inte avvika mer \[ADoubleDot]n \
10% fr\[ARing]n mellanv\[ADoubleDot]rdet, e.g. \[Mu] (1\[PlusMinus]0.05).\
\>", "Item",
 CellChangeTimes->{{3.720860280383002*^9, 3.720860377528613*^9}, {
  3.7208604429382205`*^9, 
  3.7208604932376757`*^9}},ExpressionUUID->"b773e07c-0834-4619-9987-\
f736973a2a55"]
}, Open  ]],

Cell["\<\
Den slumpade datan genereras fr\[ARing]n en f\[ODoubleDot]rdefinierad fil vid \
namn \[OpenCurlyDoubleQuote]Projekt2.m\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.720871915222041*^9, 
  3.7208719363012476`*^9}},ExpressionUUID->"ed40e394-ebfc-4a28-b9b5-\
300825351091"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1ce6c40d-87c0-422a-8afa-68561851e103"],

Cell[CellGroupData[{

Cell["Estimera \[Mu] och \[Sigma]", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
   3.7144595946902475`*^9, 3.714459597220524*^9}, {3.7144746923255525`*^9, 
   3.7144747037432365`*^9}, {3.71454544081025*^9, 3.7145454415309687`*^9}, {
   3.716111871401803*^9, 3.7161119039182987`*^9}, {3.716734196423425*^9, 
   3.7167342056222997`*^9}, {3.719749860780049*^9, 3.719749867660782*^9}, {
   3.7197507524703493`*^9, 3.719750758102913*^9}, {3.7209769016933928`*^9, 
   3.7209769302775693`*^9}, 
   3.720976963748131*^9},ExpressionUUID->"68e94d45-71f6-45f8-8194-\
ae573dceb130"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckX]", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"0", ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "\[DoubleStruckX]", "]"}]}], "Input",ExpressionUUID->\
"d950f116-04e9-45a5-8364-d17cc62bd706"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"1.9160623305694284`", ",", "12.823360672881417`", ",", 
    RowBox[{"\[LeftSkeleton]", "997", "\[RightSkeleton]"}], ",", 
    "10.306804834240268`"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.7208689198667135`*^9, 3.7208694699384704`*^9, 
  3.720869594366302*^9, 3.7208696532952704`*^9, 3.720869997729192*^9, 
  3.720870794195438*^9, 3.7208737777565427`*^9, 3.7208740819836574`*^9, 
  3.720876157567456*^9, 3.7208789601764565`*^9, 
  3.7208790812748404`*^9},ExpressionUUID->"58623c18-9ee1-4e9f-973f-\
b535eba6464d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Mu]", "=", 
  RowBox[{"Mean", "[", "\[DoubleStruckX]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]", "=", 
  RowBox[{"StandardDeviation", "[", "\[DoubleStruckX]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7208595583546596`*^9, 3.7208595681051593`*^9}, {
  3.720859620935994*^9, 
  3.7208596380149965`*^9}},ExpressionUUID->"d7927e38-b978-4f90-9775-\
fea83404f62c"],

Cell[BoxData["5.369062106884144`"], "Output",
 CellChangeTimes->{3.7208596384212685`*^9, 3.7208689198979673`*^9, 
  3.720869469956483*^9, 3.7208695943893204`*^9, 3.7208696533202877`*^9, 
  3.7208699977482057`*^9, 3.7208707942194543`*^9, 3.7208737777565427`*^9, 
  3.7208740819836574`*^9, 3.720876157583083*^9, 3.7208789601920834`*^9, 
  3.7208790812748404`*^9},ExpressionUUID->"8eeae897-a26b-47b8-a4cd-\
5ba546db8e43"],

Cell[BoxData["3.3997796412338968`"], "Output",
 CellChangeTimes->{3.7208596384212685`*^9, 3.7208689198979673`*^9, 
  3.720869469956483*^9, 3.7208695943893204`*^9, 3.7208696533202877`*^9, 
  3.7208699977482057`*^9, 3.7208707942194543`*^9, 3.7208737777565427`*^9, 
  3.7208740819836574`*^9, 3.720876157583083*^9, 3.7208789601920834`*^9, 
  3.7208790812904663`*^9},ExpressionUUID->"af2231c0-3690-430b-8eef-\
a9e43f18a8e2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"309ce197-1c42-420f-a5b9-ded1be2c7327"],

Cell[CellGroupData[{

Cell["Testa de tre modellerna", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
   3.7144595946902475`*^9, 3.714459597220524*^9}, {3.7144746923255525`*^9, 
   3.7144747037432365`*^9}, {3.71454544081025*^9, 3.7145454415309687`*^9}, {
   3.7145455795252266`*^9, 3.7145456017171803`*^9}, {3.7161137066068077`*^9, 
   3.716113710968085*^9}, {3.7167345141652637`*^9, 3.716734523783023*^9}, 
   3.719749966198701*^9, {3.720976959952504*^9, 
   3.7209769663303843`*^9}},ExpressionUUID->"d4367d32-7e47-4370-91c7-\
8b7ef74db615"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[DoubleStruckX]", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"0", ",", "n"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208686946103854`*^9, 3.7208687160870323`*^9}, {
  3.7209770501307836`*^9, 
  3.7209770503789587`*^9}},ExpressionUUID->"1ab57105-61e8-4efc-a426-\
2fa8929a4085"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], ":=", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "a"}], "*", "x"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "*", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f3", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{"x", "+", "b"}], ")"}], "*", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}]]}]}], ";"}]}], "Input",ExpressionUUID->\
"bf0f670f-f8c5-4714-94f5-79f526c4c7ae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i1", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f1", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"a", ">", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i2", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f2", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"a", ">", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i3", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f3", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ">", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ">", "0"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"ddaa40c4-ae9e-4c99-b0a1-029b41af4953"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c1", "=", 
   FractionBox["1", "i1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   FractionBox["1", "i2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c3", "=", 
   FractionBox["1", "i3"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.720868745338532*^9, 
  3.7208687768946857`*^9}},ExpressionUUID->"8a80954a-1d77-4947-8345-\
551e3cc4028f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pdf1", "[", "x_", "]"}], ":=", 
  RowBox[{"c1", "*", 
   RowBox[{"f1", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdf2", "[", "x_", "]"}], ":=", 
  RowBox[{"c2", "*", 
   RowBox[{"f2", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdf3", "[", "x_", "]"}], ":=", 
  RowBox[{"c3", "*", 
   RowBox[{"f3", "[", "x", "]"}]}]}]}], "Input",ExpressionUUID->"522d3953-\
60be-4f57-91f9-7f3566660aa5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]1", "[", "a_", "]"}], ":=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"pdf1", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"a", ">", "0"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]2", "[", "a_", "]"}], ":=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"pdf2", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"a", ">", "0"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]3", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"pdf3", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ">", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ">", "0"}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.720876081200591*^9, 
  3.7208760826042347`*^9}},ExpressionUUID->"c132084d-5fe9-4c00-85a5-\
d280b8bdd551"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myDist1", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"\[DoubleStruckX]", ",", 
     RowBox[{"\[ScriptCapitalD]1", "[", "a", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDist2", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"\[DoubleStruckX]", ",", 
     RowBox[{"\[ScriptCapitalD]2", "[", "a", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDist3", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"\[DoubleStruckX]", ",", 
     RowBox[{"\[ScriptCapitalD]3", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208689659298983`*^9, 3.720868966726815*^9}, {
  3.7208761071909313`*^9, 
  3.7208761092379103`*^9}},ExpressionUUID->"326a1709-6074-48dd-a45d-\
d15a36da3ebe"],

Cell[CellGroupData[{

Cell[BoxData[{"myDist1", "\[IndentingNewLine]", 
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"\[DoubleStruckX]", ",", "myDist1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.720868974164695*^9, 
  3.72086897850867*^9}},ExpressionUUID->"3e2e4060-4c52-43c4-9057-\
137b25ba18d1"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.1906217123229153`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.1906217123229153`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", "True", "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7208689388200755`*^9, 3.720869015325017*^9, 
  3.7208694755999126`*^9, 3.7208696000142937`*^9, 3.720869658906253*^9, 
  3.720870003309136*^9, 3.72087079974536*^9, 3.7208737838818574`*^9, 
  3.7208741061723995`*^9, 3.7208761647865763`*^9, 3.720878968880031*^9, 
  3.7208790935098443`*^9},ExpressionUUID->"97225eb6-7d88-4da6-ad87-\
3792f8c7e177"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
cjwlPJehuDq1pL6rnPqpMqzN9NxV2lOOuYTnMrz7M+IOb7Cc+qvMvhzS9eHs
cXLUEJ7LID38on9vyKnfKsPRp8L26Q5yPCE8Z86B9/7942fLqf8qh+79nT/X
t8gxh/Bcjt7JGzLqt8qpHyvHhXMTrjptk0NPeC7HO6edMxftklN/Vg6v0gZN
0gE5/AnP5bBYs/NcznE59Wvl4G/2iHrgKcdswnPmOWur+QdOyql/K0eDIezE
ZabWEp7LURJl1c3hqpz6uXLUPay90eO6HA8Jz+WQDjjwK+GenPq7cuRvMSve
FCCHA+G5HBPvWq8LC5VTv1eOYT/9QwreyKEmPJejaGbjjC0Rcur/yhEoKn20
KUYOX8JzOboVf/LzS5ZTP1gOdunU8nVpcvp9VDkWtFzqEFQop/6wHNtcPPXf
DHIoCc/lqJ8U41/TIKd+sRyeSbk33poocJ/wXI4h59cIuK0V1D9mfj/oorKL
mQLTCc/lmPpS1jS3vYL6yczzNM1UyzsoICc8lyNgyYhbxzoqqL8sx2o+63B6
VwXuEp7LgQN+rHqmbvabmZ+P+tV6hYUCUwnPFZjVi5N7s7uC+s8KpDfd+73T
SgEp4bkCYeMShPJeCupHK7B3nuLB/n4K3CY8VyBJ9d6/ivm72Z9mrpds9ab/
AAUmE54rMKmvvJN8qIL61Qq4/cr8dWyBAmLCcwXGbJl+avZSBfWvFWic1G57
l9UK3CQ8V+C/+4+zZjkrqJ+twLkZ/3VcsFUBe8JzBV7GWT0YdFxB/W0FnqgO
JpUxtZDwXAGvOfGB/qcV1O9mPm/MfL+5ZxW4TniuwPB5Fd/enVdQ/1uBFVfn
C90uKDCB8FyB/23atm36VQX1wxVwOZZpduKOgn7/WIE/+0ov7fNXUH9cge6N
v/cVBypwlfCcub9ZZR4tgxTUL1dgXcq7lWDq8YTnCkz8W9ah5LWC+ucK3NjG
GWkWqQCX8JxZxxY2A4piFdRPV6D9BPsrxWkKXCaPq8CLt482HMhVUH9dAevn
r75szFdgLOE5c9/+jy4sZ67T7LcrcbDhy5nNVQpUEZ4rsb3ryY2WfAX135UQ
Vg+YMpipLxGeK3GvnWbId7WC+vFKuHfMCLqmV2A04bkS67gH/vZnPrfZn1fC
wc86czpTVxKeK3Htyh6HyfUK6tcrEZDpvv94kwIXCc+VCE/+F37gr4L690pk
vU5LHN9CiZGE50oMkenGfGmtpH6+Eir9/e1fOytRTniuhMn7eLuh3ZTU31di
g4//oUlMfYHwXAn1xfJLa6yV1O9XIj3V/0ZX5jmGE54r8SdiyZ5Pg5TU/1fC
Uxo2auB4JdiE50rMuhy718VOSfMAJURFn21fMnXz982ViO07TnbSXknzASUm
P106uXS5EkMJz5VwOe2wnLVGSfMCJb44xgf22aoEi/BcCa+he7IKtitpfsDc
j++iZboTSpwhPGc+36TuwkVPJc0TlLDYbPuIwzzXYMJz43UXjatn6uZ8QYmV
DrX/9BeVKCY8VyIx0/vqGR8lzRtUcKi6IAy9o8QpwnMVro4577fbV0nzBxVs
/vua1ue5EgMJz1Xo/frbTcs3SppHqND4OWNm1lslCgnPVfiZEBPb5bOS5hMq
JDmcsvudyLxHwnMVTk2d0pSXrKR5hQqrG6dfyU5RwpbwXIVHR99LMlKVNL9Q
Qf0x5Me3MiXyCc9VmN91yZMFlUqaZ6jwovivVUuFEscJz1Xw/xm92pp5D835
hgq2kzs8qdIr0Y/wXIXCLjMetqhR0rxDhXOup08V1imRS3iuQsv4qYvSG5Q0
/1Ahfr+Kk9NChaOE5ypmva8HtGmronmICgGJnmGv26vovy9QYfumxz/TO6lo
PqLCTnvn3/VdVMgmPFdhncV+u8yuKpqXqOD19vc2CysVPAjPmf/+a0/BsWEq
mp+o4GpbOW/iKOa9E56rMGv+Gx+HsSqap6igiig80G+8CpmE5ypI531dN3ey
iuYrKgysu2i+dZEK7oTnapj+Zbl/YurmvEWNc+bLeu1cqoI14bkafFnZyjfO
Kpq/qBEd6X8ue7MK6YTnarD4lSY9mHVozmPUOOzSGHT3uAoHCc/VOLbwWd8h
J1U0n1Gj0y23lwFnVLAiPFcjJd2/y9XzKprXqBFW+cJsqbcKqYTnaizocaMy
8YqK5jdqDD7l6xp9R4X9hOdqqB6b2iU8VNE8Rw3uLYv1boEq9CQ8V6POsOh5
l1AVzXfUEDnWF51k6mTCczWODA9ZsCNGRfMeNbIdTrYWJqjgRniuhqDPszfZ
iSqa/6ghHxuT5pSsQnfCczX+7U2ecjZdRfMgNYawjt13KlDRf0+iRu3YmBMF
TN2cD6mxYsq/SDFT7yE8V+OLi+LqEbaK5kVq9G+wKQqvUMGC8FyNtUdH2HaW
qWh+xHxe20OvX8hVSCDbWY122F5yQqWieZIaeSnz+tjXq7CL8FyNjYbhAyJN
1TRf0uC9U8Siu2ZqdCE810Bs98R5Rgc1zZs0mPP22r/uXdWIIzzXYJB9wvIq
GzXNnzSwfTrORW+rxg7Ccw3K3d95tWbWvTmP0mB6WacNHceq0ZnwXIMXCcvb
PB+vpvmUBhuEWadcmH0RQ3iuwedaideryWqaV2lgE81WqqepsY3wXIOkwGEh
jrPUNL/S4GxHJ5fseWp0JDzXgGf3bflrdzXNszTwc3W60oZZ16+E5xocm358
8lWmbs63NPjk9c5WfkONLYTnGvSba8r+46umeRdzPxeGrlnjr0Z7wnMNbsys
aUpm6ub8S4M/iftunP7CrBvhOXM/rW/fX/JVTfMwDSzLUzlTo9X03w9p4D/0
6dN9TN2cj2mgkMm7uaQw60Z4rsG/U45tUnPUNC/TYG/YxQO8QjU+E54z7+PE
kKsBzL5ozs802B04uHIasw82EJ5rUOP+elG0WE3zNA3m+0Qv6idRow3huRZi
++v3vyjUNF/T4ktgjf0ujRoRhOdajHV3e/Zcq6Z5mxbhjh3O/9Sp4Up4rsWH
ZT2Gudaraf6mxatudYu9fqrRmvBci5/BufOW/VPTPE6Lv/3n6Bw6afCB8FyL
nSaOS6511dB8TguHXf/79N1Kg3WE51okJu3xPDJKQ/M6Lbyy6jv6z9agJeG5
FsX72l767aSh+Z0Wpgmr3k+Zr8E7wnMtvuoKl/GZfdSc52mxt/fDCfuZfeRM
eK4F697zaf5M3ZzvadFKVHKwdpMGJueND6zF283dD8/ZpqF5nxZ9z1X9uLJT
gzeE51rYjlDbDmH2WXP+x7yf53c/eDD7bDXhuRZD9pVKF5/Q0DxQiyuHHIcn
MPVfwnMtUl+nLvvrqaH5oBbDDm/fsP+cBmGE51o8id2iYjN1c16ohdvFrmWD
b2qwkvBci6Tc5OdN9zQ0P9QiR/ZK2cVXg0bCcy2iMg5szHyioXmiFtY7fibd
eq3Ba8JzHWoiXU7FMHVzvqgDK3TxjrBQDZYTnusw9oy57+pwDc0bddhze9Ri
12QNfhOe61DS/l7Re6Zuzh91aPtGaRHA7ONXhOc6fNg6csmjPA3NI3W4WzZ7
zjeWBksJz3WY+N53lCtPQ/NJHUZZvQgI+afBL8JzHTYdnbJqeSctzSt1qEid
Kq7trEUQ4bkOPzxbrfQZpKX5JfM8dXvsBo3RYjHhuQ6mz5xiJ0/U0jxTh7gf
v7Pn2WtRT3jOfN6uMYJgpm7ON3Vg1w7sO2ayFoGE5zo4vf8Yrp6upXmnDl0e
pD17OUOLhYTnOjz2zDvyidm3zfmnDreeuPe0YPbp/wjPdcjq3LIt/4iW5qHM
z6f06nP+qBbPCc91sLl29s/IE1qaj+rgUL5aNvWkFvMJz3VwU0izqi9paV6q
QwsciXe/qcV3Ilc6ZAsdCwKeaGl+yrx/AytcxOzTp4TnzM//d7Wq3UctzVP1
eFWEkLR4LeYSnuuRVO76KYfZl835qh7XxhXX5yRqUUN4rodJfPoafrKW5q16
TBx1586cFGZfEp7rcXCSt8Mupm7OX/UY5uObfqtQizmE53oYGg7331GipXms
Hlb7XRxaMftaT3iux9HJDVmXuFqaz+rx8IKPSibSwp/wXI99VTfC94m1NK/V
Y/mLC8ccpVrMJjxnfv5sY1OEUkvzWz2KThV/X8bsey3hOXO9m25j79draZ6r
R6slh47+a6fDQ8JzPc43tI6Z20NH8109nk3e7unJ7HsHwnM9/HQ9r7ccoaN5
rx4lU0c0pozWQU14rsfbVhFf7Bx1NP/Vw3mGo/2auTr4Ep7rsb4oM8pngY7m
wXos9LJ7/N8SHWYSnusxZqq3n8dGHc2H9Uif19b23lYdlITneghsC2rDDuto
XqxHuxO9LNoe1eE+4bke17u8O3jytI7mx3pMnXxt4YMLOkwnPDeg3lPYYMns
6+Y82YDTRyui3V7oICc8N0DHd57WwNTN+bIBJdPmLBRkMOeU8NyAY5t1S28V
6mjebIBdxo9AT7YOUwnPDZi96e2YDRwdzZ8NGMV7t9pHoYOU8NyAYKeQlvin
o3m0AZd7j34Wb6LHbcJzA34K3ozP76an+bQBW4KiE0p76DGZ8NyA9cd6WQvG
62lebcDygOLVmY56iAnPDZhot+WgxU49za8NmLl1r8/QM3rcJDw34PeH8Mal
F/U0zzbg7auBtj0v6WFPeG7AhjYfrP+7qqf5tgGLo3yj6oL1EBKeGzDGq9X1
pBQ9zbsNuPA06OTIPOa9E54bMJy9reRRkZ7m3wYsZdc8W8Ss4wTCcwO2++jf
zGLWqTkPN2DwMJnJrXYG8AnPDZCVjPBg9TTQfJy537sP5s8ZYMBVwnMDwuYO
zVk/w0Dzcub5pkd59F1uwHjCcwPMu9t6d4820Py8Bv8H6F4KkQ==
       "]]}, {}, {}}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7208689388200755`*^9, 3.720869015325017*^9, 
  3.7208694755999126`*^9, 3.7208696000142937`*^9, 3.720869658906253*^9, 
  3.720870003309136*^9, 3.72087079974536*^9, 3.7208737838818574`*^9, 
  3.7208741061723995`*^9, 3.7208761647865763`*^9, 3.720878968880031*^9, 
  3.7208790940411215`*^9},ExpressionUUID->"4780370f-5afb-4f5a-b85c-\
ff6b17d4cfb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"myDist2", "\[IndentingNewLine]", 
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"\[DoubleStruckX]", ",", "myDist2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7208689816807055`*^9, 
  3.7208689853683963`*^9}},ExpressionUUID->"898f8033-1380-4d5d-ac90-\
85f9f23f3040"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.14534654806900735`", " ", "\[FormalX]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.3812434236403395`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", "True", "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7208689398982563`*^9, 3.7208690179345255`*^9, 
  3.720869475914118*^9, 3.720869600252463*^9, 3.7208696592254753`*^9, 
  3.7208700035382977`*^9, 3.7208707999995394`*^9, 3.7208737840849924`*^9, 
  3.7208741067818055`*^9, 3.7208761650990925`*^9, 3.7208789694269314`*^9, 
  3.720879094072373*^9},ExpressionUUID->"03ec0efd-895e-426a-a30f-\
d569a2280a64"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
4XktJgwfadM1r4b2c7XY2S/3Sqq0BmMJz2tRdKBt3B19De3vahHokP32cbda
nCM8r4U1p+jQPmbeln6P+f6pwduzJ9eCQ3hei45jQory19bS/q8WppkhNx7v
qMVIwvNaWN5P6L/WvZb2g7UIRsDLhx61OEV4XospL2uEW4/U0v6wFk7OAeO9
TtSinPCcub6lO/sXBtXSfrEO1h/bFJ64X4thhOd1eHjfO+PWo1raP9bh2ujn
q6xe1+IY4XkdpFcsbkyOqaX9ZB1+/vnaI5sZFxOe1+Htl+XNqZJa2l/W4blj
iUiprMUgwvM6uN/ghP9V1dJ+sw5Xe8Z/Wde6DkcIz+tQ7aozX2tZR/vPOhiv
fmFdOKQO+YTnzPsnXfc0Tayj/WgdJkfuf7vZug79Cc/rsO1kWP+h0+tof1qH
kCDvGu3MOhwkPOejz4NeTXZr6mi/ykfQ4PGzR3rVIZvwnI/dC1PcF/nX0f6V
j/iqA7yjl+rQl/Ccj4rLU2o9r9fRfpaP2gfGMzV36rCf8JwPkwuT4h2Zdbf0
t3zE9M5nH6mvQzrhOR97zH4f8ZbX0X6XjytGdYHjftahJ+E5Hzful06915NP
+18+zvfOLb49lg93wnM+xgXHsG5O4NN+mA/lMlM7n8l8pBCe8+G897OgYRqf
9sfMPONcN3ydx0d3wvN6lN5KDhy9mk/75Xq0NsvrU7mODzfC83pYP/i44tV2
Pu2f69Gm11ZP4S4+EgjP65k6gnWhOoBP++l6eM3a4db6BR9dCM/rIb81qsOl
FD7tr+vRdGdY3mtmndsIz+vxqkjR6Cjh0367Hjsu+S5wk/ERR3hej0ndV+T5
/+TT/rseT8N9jUtM69GR8Lweo/+XNGujWT3tx+txLvHeuWMD6rGJ8Lwe+7NP
vTFeUE/7cwGcvib12eBfDx457wLoF5voIh/U035dAPs7DwXjmHX4kPMvQPqM
bruCmXFL/y5ARxOf32k/6zGG6IEAksaJx4+2EdB+XoDizamRdzsJUEn0QYDO
Ew4IWMy4pb8XYPqPw3v29RLgLNELAVrnLj/g109A+30BGmp2+bgx3zOK6IcA
2xcM6Nd7iID2/wLIOt8Yb20lAJvoiQCr7rXNGDRcQP0AAdYPcXENXSygebcA
DqKunYZuFFB/QIAJeddczrgJMILojQALv07q4b5TQP0CAf5L3L8u/ZQAFUR/
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
QOmr7CCVhwI+hOcKbF6dfWD2IQX17xUI3azw7OOlwBjCcwUWRY03aziuoH6+
Aj1uLV1RelGBSsJzBd6dFDU3XFdQf18B178NnTvdUOAs4bkC/d57mAiCFdTv
Z65rGVdb8FSBUYTnCpie91x5LUxB/X8FcvZn/3qXoACb8FyBbX62jzYlKWge
oIDjlNxVacy45e/NFdAdmWX6OlVB8wFmXUk2NjyxAiMIz5n7utsRMSoFzQsU
kKeODR3yS4EKwnMFHDru61j2R0HzAwWsev3E3L5KnCQ8Z+7Dn70HuporaZ7A
rGOrup99fyWsCM8VaLyy3cSNGbfkC8xzaMNbbTdCiTLCc+b6J8Y+ixutpHkD
89r97qnzNkocJzxXQnt096jvUNL8QYn45IuJ/ZYqMZTwXImjZ8oKlm5S0jxC
Cd2kM3m3tyhRQniuRCu/9lXdditpPqFExaDPK72OKeFNeK7EgquJ3ZUnlDSv
UGLL4ImFtqeUGEx4roSF/MLNW6eVNL9QYp39kZ0dg5UoIjxX4t7V1o8PPVDS
PEMJk57drwyNVsKL8FwJe63EaOFHJc03lJgVe27U4wQlLAnPlbg0Y1XU8CQl
zTuUOJ0YrpuepkQB4TnzfZMu3hmZp6T5hxJ5793COBVKHCY8Z657Hnt4YZWS
5iFK9O0bO+MBX0n/f4ESbaSzNn8SKWk+okRQUNvmXzJmHsJzJV4utXrWRaGk
eQnz/SPP6V0/K3GI8FyJqy7vv25ur6L5iRIfZ7lYrDBRoR/hOTNvval8VTcV
zVOU8Llv01BgpkIO4bkSaYMdR4jMVTRfYdaNqp3fJ6ngQXiuQsDMgpjNk1U0
b1HB9VCMm2KaCuaE5yrc6e71LGGOiuYvKnwON/r9dJkKWYTnKsQtK85qs1xF
8xhmnqrd3Hn7VDhAeK6CYHLdpqf/qWg+o8JxQcexFodV6EN4rsL1rp/4kqMq
mteoMKRt6bHckypkEJ6rEO56Turno6L5jQrcQzm+5VdV2Ed4rsLyxtce/Dsq
mueosP37t0SnZyr0IjxX4XZe6gp+hIrmOyr4zE51cnutQhrhuQrd2C+Vpukq
mveo8Cs/e1JBjgp7CM9VeMr3/meTr6L5jwq5PfsusSxU4X+E5yokOsfnny1T
0TxIhZdL3GdH16jo/ydhrtvRz2xjrYrmQyrssJ7V4ygz3k14rsLeEPtXJRIV
zYtUeJVlbylSqGBGeM48n7Xjw7lNKpofMZ9r4oxmNauQTLazClufdjHZ+09F
8yQVnlx6anzSVI2dhOcq9DXiRH4erKb5khqXPm/qmjdcjW6E52oUrlhsKxyp
pnmTGpxrnD/jJ6qRSHiuRodvIaxNc9Q0f1Ij2rdbv4ML1HAlPFfjpLmb808n
Nc2j1Ng+KwSJa9XoSniuhslfByPlejXNp9Q47HdStHizGvGE52poWRefbNqu
pnmVGj7sv1HuO5l5CM/VmOt306T1fjXNr9RY5eEzrvMRZl7CczWe9yqu6PJK
TfMsNax2tnk1NkOND4TnzPrnylcUMOOWfEuNqbUv35rmqbGV8FyNuAk3Ordi
qWnepYZu7jJle64anQjP1Sj2XDXnEjNuyb/UQOGli+9+qvGe8FyNjD7v5vJ/
qWkexqzrtPntn81q+v+H1JgceOaO9W81zcfUiFjgzfrdXoMOhOdqOO2Krv/S
XUPzMjX0c92X/uqtwVvCczXmdJ/6poO5huZnzH3Oy+51d6wGGwnPmXUXB7V1
Hq+heRrz/d6/+5Yy43aE5xpY7LzXYcwUDc3XNLBPufT5lI0GMYTnGgz2nfpT
NUND8zYNjuSvyj5lq8F6wnMNVle8eDFvvobmbxq8q1GMebhAgzaE5xoczxS3
j1qhoXmcBh2H7jer2KpBFOG5Bp18U39kuGloPqeBcdX1+Y4HNHAhPNdgdFiW
Y46fhuZ1GkgKO+YXPmJ+j/Bcg38ZaX5PQjQ0v9MgWtVr+MgXGrwhPNfgTO8p
KxzCNDTP02BpzCvrnBgN1hCea3B9/sKoRmbcku8x77eyWRybooHRGcMFa3BD
GB6zO11D8z4NYgdl+HbJ1iCC8FyDBeKkeQeKNDT/0yD+axujUI4GzoTnGkzv
Msa6hKeheaAGdzg/9iyq0uAv4bkGdlcndoyq1tB8UINdvWzDogQahBGeM+v6
xe01WKiheaEGrzPrhIV6DVYRnmug/9L81PqHhuaHGuwvaNfT+6cGvwnPNfjc
xaR30T8NzROZ+6PZufehiRYvCc+1CGLZ5BYw45Z8kXktdWtd2kWLFYTnWnSq
nGz9xFRL80YtjsZpozxGaPGL8FyLZS8zZhQw45b8UQt1L13SYOb1BeG5Fpmh
7Kgjk7U0j9TiSPJBdzNb5nOE51pwh3L3OzGvLfmkFl0HtE903KvFT8JzLc5r
yvYcOaaleaUWSXV3Dww9ocUzwnMt2t8NOLckQEvzSy0ifXMn93qoxRLCcy2y
uCl77Z5paZ6phfTFmG3Ln2vxg/BcC0t3iz1vmHFLvqnF/Rf+F2aGavGU8FyL
tRvuFRhFaGneqUVc+5f6eGa8mPBcC1HYOV75By3NP7Uwqy0c0T9XiwbCcy3M
Hz18clSgpXmoFjtWur//n1CLx4TnWnw70a4mRqyl+agWAZJkzxipFgsJz5mx
7Zb5DZ+1NC/VopVnpPfsn1p8JXLFXGcnTnZJWx3NT7UYcHrf5zbtdXhIeK6F
qTp006C+Opqn6nAta3V+p2E6zCc818F9X0z9X2bckq/qULcm72rNcB0+E57r
4FY3HwUjdTRv1eHJt9QRI0fpcJ/wXIehcRP+W8iMW/JXHZpNOzh5TNVhHuG5
Dhzl0drONjqax+qw71LSEc+ZOugIz3UoaWB1t5mro/msDibKwxP6L9QhmPCc
+fwmzuUgZtyS1+owLHcY5izWYQ7huQ6Nkf/5z12mo/mtDs9fXFE+WKeDhvBc
h5Vh/yyS1+tonquDLeu2ZZ+9OgQRnuswJJK3jH9ER/NdHVS8HpOVzDyzCM+Z
+xI2gBd9UUfzXua6k64MlV1hfo/wnLnvwxIW45GO5r86+PzmJwqYz90mPNeh
T3ye+uozHc2DdbD0GsC7EqqDPeG5DrA8n/6/dzqaD+sQd77/Pq8POigIz3XY
rm0OvZapo3mxDlfrel3xytYhgPCcub5R/hMOFupofqxDYMi1876lzHUSnuvB
8u3b+2atjubJegzs4WUfJ9dBRniux5XNVcuHKHQ0X9ZjzhMui91Gj5uE53oY
+4w5ZddZT/NmPZbFOSwMNNVjBuG5Hve2u60c3ENP82c9EpuPbnfur4eE8FyP
naybZh3G6WkerUcbf5XYdLwe1wnP9ejZVTrawlZP82k9/NaMrThmp8d0wnNm
Ha32h7xZoad5tR4r0q3sTm/QQ0R4rkflpoLINh56ml/r0SBe5/T4lB5XCc/1
cD5r22h1Tk/zbD3uTzkRPspHj6mE53os7DEi7dB5Pc239Qi5Hfu4KFAPAeG5
Hge4Tokrn+tp3q3HgKLDvduH6XGZ8FyP8fMqr02K0NP8m7m/G4uvSZnfm0x4
rkf99ex/7RP1NA/XY9z/jNdOydKDT3jOfE999uABBXqaj+sROtFqXLdSPS4S
nuvRKdjpVx5PT/NyPSZdMVs2jfk9a8JzPXJPbfkwvUlP8/PP+D+AEuWK
       "]]}, {}, {}}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7208689398982563`*^9, 3.7208690179345255`*^9, 
  3.720869475914118*^9, 3.720869600252463*^9, 3.7208696592254753`*^9, 
  3.7208700035382977`*^9, 3.7208707999995394`*^9, 3.7208737840849924`*^9, 
  3.7208741067818055`*^9, 3.7208761650990925`*^9, 3.7208789694269314`*^9, 
  3.720879094463019*^9},ExpressionUUID->"47d9d85b-cc75-4d30-87ac-\
bad9d702d04a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"myDist3", "\[IndentingNewLine]", 
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"\[DoubleStruckX]", ",", "myDist3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.720868988399803*^9, 
  3.7208689906967955`*^9}},ExpressionUUID->"2a98344e-de59-4d99-a1d7-\
b5c32a2762a1"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.027420935520861646`", " ", "\[FormalX]", " ", 
    RowBox[{"(", 
     RowBox[{"4.326778286620343`", "\[VeryThinSpace]", "+", "\[FormalX]"}], 
     ")"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.48208342956912326`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "True", "}"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.720868941195202*^9, 3.720869020075259*^9, 
  3.7208694762013206`*^9, 3.7208696005997086`*^9, 3.720869659518682*^9, 
  3.7208700039155645`*^9, 3.720870800349787*^9, 3.720873784178747*^9, 
  3.7208741073130827`*^9, 3.720876165485358*^9, 
  3.720878487919595*^9},ExpressionUUID->"0309b841-7292-473c-981f-\
2896ae0da543"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
mtvGbg==
       "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.720868941195202*^9, 3.720869020075259*^9, 
  3.7208694762013206`*^9, 3.7208696005997086`*^9, 3.720869659518682*^9, 
  3.7208700039155645`*^9, 3.720870800349787*^9, 3.720873784178747*^9, 
  3.7208741073130827`*^9, 3.720876165485358*^9, 
  3.720878488389926*^9},ExpressionUUID->"62e9c013-1275-43aa-8037-\
ddc549301c96"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"73f6a969-29d9-42d7-9a8a-162218d4f1e9"],

Cell[CellGroupData[{

Cell["Ber\[ADoubleDot]kna konfidensintervall", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
  3.7144595946902475`*^9, 3.714459597220524*^9}, {3.7161137142526083`*^9, 
  3.7161137165706587`*^9}, {3.7167345280385914`*^9, 3.7167345546116996`*^9}, {
  3.7197500147956824`*^9, 3.7197500299156065`*^9}, {3.720977068737937*^9, 
  3.720977075728879*^9}},ExpressionUUID->"99007784-7681-432f-8426-\
34b31a713991"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.7173293780432751`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "0.5393988397118393`"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208736831661544`*^9, 
  3.7208737103699656`*^9}},ExpressionUUID->"181b7137-2b8e-4685-a477-\
97b4e6a2b61c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"myDist3", ",", "0.975"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720870593977217*^9, 3.720870610570952*^9}, 
   3.7208738034453955`*^9},ExpressionUUID->"5e643407-1cb5-4d0d-9d87-\
cdb9d7c015c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"StandardDeviation", "[", "\[DoubleStruckX]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.720873880298341*^9},ExpressionUUID->"f619951e-7e88-4d14-b93e-\
4d05ce38fe09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.72087376403024*^9, 
  3.720873766249104*^9}},ExpressionUUID->"62c37d72-3fb4-477a-9a57-\
4346ce4ca91c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ci\[Alpha]", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ci\[Beta]", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Beta]", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"\[Beta]", " ", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.720873676810421*^9, 3.720873680779374*^9}, {
  3.720873734426838*^9, 3.720873736786336*^9}, {3.720874134851815*^9, 
  3.7208741362699623`*^9}, {3.720876746430802*^9, 
  3.720876746602687*^9}},ExpressionUUID->"eee24804-90b3-4c5c-aaa4-\
a830210a1913"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9574305751683726`"}], ",", "2.392089331254923`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.720849472809103*^9, 3.7208706293782578`*^9, 3.7208708008971744`*^9, {
   3.7208737576365023`*^9, 3.7208737843193793`*^9}, 3.720874108016244*^9, 
   3.720874144564747*^9, 3.7208761662353964`*^9, 3.7208767475089846`*^9, 
   3.720878970723873*^9, 
   3.7208790953224373`*^9},ExpressionUUID->"d745d1c8-9156-4f67-8c35-\
fd37e8a34c40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.1353611134998083`"}], ",", "2.214158792923487`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.720849472809103*^9, 3.7208706293782578`*^9, 3.7208708008971744`*^9, {
   3.7208737576365023`*^9, 3.7208737843193793`*^9}, 3.720874108016244*^9, 
   3.720874144564747*^9, 3.7208761662353964`*^9, 3.7208767475089846`*^9, 
   3.720878970723873*^9, 
   3.7208790953380623`*^9},ExpressionUUID->"53596387-f8dc-4262-a6cb-\
7124372b9630"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208789426599326`*^9, 
  3.7208789520822926`*^9}},ExpressionUUID->"7ce983e9-3bf7-4c0f-9ddd-\
2eb9a03bd7c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cilen\[Alpha]", "=", 
  RowBox[{
   RowBox[{
   "ci\[Alpha]", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
   RowBox[{
   "ci\[Alpha]", "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"cilen\[Beta]", "=", 
  RowBox[{
   RowBox[{
   "ci\[Beta]", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
   RowBox[{
   "ci\[Beta]", "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7208769249228*^9, 
  3.7208769251728134`*^9}},ExpressionUUID->"3aa807a6-1890-4067-849d-\
87479185a6af"],

Cell[BoxData["3.3495199064232954`"], "Output",
 CellChangeTimes->{3.720876819902153*^9, 3.7208769295167866`*^9, 
  3.720878970739499*^9, 
  3.7208790953536887`*^9},ExpressionUUID->"2cbc7896-d225-49d2-974b-\
cd4ca67af876"],

Cell[BoxData["3.3495199064232954`"], "Output",
 CellChangeTimes->{3.720876819902153*^9, 3.7208769295167866`*^9, 
  3.720878970739499*^9, 
  3.7208790953536887`*^9},ExpressionUUID->"6c42e4ee-53b6-4858-8af4-\
a6136f0dc309"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"margin", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nnew", "=", 
  RowBox[{"Ceiling", "[", 
   RowBox[{"margin", "*", "n", "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"cilen\[Alpha]", "/", " ", "0.1"}], ")"}], "2"]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.720870888912394*^9, 3.720870899268714*^9}, {
   3.720871001945431*^9, 3.720871007043042*^9}, {3.7208710403745985`*^9, 
   3.7208710454523635`*^9}, {3.7208711139705315`*^9, 
   3.7208711235553055`*^9}, {3.7208769724740763`*^9, 3.7208769925392866`*^9}, 
   3.7208774342995253`*^9},ExpressionUUID->"1d69e9ea-a689-464f-ba36-\
60db82325bee"],

Cell[BoxData["1725603"], "Output",
 CellChangeTimes->{{3.7208763848563633`*^9, 3.72087639565151*^9}, {
   3.720876934892063*^9, 3.720876936845289*^9}, 3.720876996008214*^9, 
   3.7208774377528267`*^9, 3.720877827067597*^9, 
   3.7208784885420337`*^9},ExpressionUUID->"3271de18-1f80-4396-8479-\
140ea69e02ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckX]", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"0", ",", "nnew"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720870720954976*^9, 3.720870728842556*^9}, {
  3.7208772513466125`*^9, 3.720877265450816*^9}, {3.720877442862465*^9, 
  3.720877443282387*^9}},ExpressionUUID->"2b138161-ab05-4a5d-9501-\
a0a067e2dfe7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]", ",", 
   RowBox[{"\[ScriptCapitalD]3", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7208770764679604`*^9, 
  3.720877130755023*^9}},ExpressionUUID->"139a491d-8360-4ddf-8476-\
c67796090ca2"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.03554651679328743`", " ", "\[FormalX]", " ", 
    RowBox[{"(", 
     RowBox[{"3.02533003422653`", "\[VeryThinSpace]", "+", "\[FormalX]"}], 
     ")"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4997866602912788`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "True", "}"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.720849472891161*^9, 3.720870919667165*^9, 3.720871067986742*^9, 
   3.720871139489575*^9, 3.7208737843818827`*^9, 3.7208741221472087`*^9, 
   3.7208761663291492`*^9, 3.7208764199453983`*^9, {3.7208770653026257`*^9, 
   3.720877068490288*^9}, 3.7208771252547398`*^9, 3.7208771893893757`*^9, 
   3.7208772685759754`*^9, {3.7208773382187448`*^9, 3.7208773541470723`*^9}, 
   3.720879662673455*^9},ExpressionUUID->"8031bb11-1364-45ab-be1b-\
d6038de7be38"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.4997866602912788`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "3.02533003422653`"}], "\[VeryThinSpace]", 
  ";"}]}], "Input",
 CellChangeTimes->{{3.720878055838107*^9, 3.720878064729188*^9}, {
  3.7208796773978567`*^9, 
  3.720879689958706*^9}},ExpressionUUID->"4166bd08-5350-4de1-a5cb-\
e2d5a886ff4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"StandardDeviation", "[", "\[DoubleStruckX]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7208780739162903`*^9, 
  3.720878092711334*^9}},ExpressionUUID->"8b814a9c-607a-4347-968e-\
c9b67c798d3c"],

Cell[BoxData["3.359966930476566`"], "Output",
 CellChangeTimes->{3.720849472912176*^9, 3.7208709197491903`*^9, 
  3.7208710680487847`*^9, 3.7208711395546155`*^9, 3.720873784397508*^9, 
  3.720874122162834*^9, 3.7208761663447757`*^9, 3.720876419992276*^9, 
  3.720879693163968*^9},ExpressionUUID->"0f8f27e0-6699-4454-a10a-\
0312a8cc9025"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ci\[Alpha]", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnew", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnew", "]"}]}], ")"}]}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ci\[Alpha]", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Beta]", " ", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnew", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"\[Beta]", " ", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnew", "]"}]}], ")"}]}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7208767163062754`*^9, 3.720876721994068*^9}, {
  3.72087809597713*^9, 
  3.720878115284856*^9}},ExpressionUUID->"c889b29e-74e4-46bb-b074-\
c2070935b9ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.46481289199712966`", ",", "0.5347604285854279`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.720849472924185*^9, 3.7208709197652016`*^9, 
  3.7208710680778055`*^9, 3.7208711395716276`*^9, 3.7208737844287605`*^9, 
  3.72087412217846*^9, 3.7208761669854355`*^9, 3.720876420039153*^9, 
  3.7208796955546613`*^9},ExpressionUUID->"09a1f0ee-3b4f-483d-8dd8-\
9ce5eab56a9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.990356265932381`", ",", "3.060303802520679`"}], "}"}]], "Output",
 CellChangeTimes->{3.720849472924185*^9, 3.7208709197652016`*^9, 
  3.7208710680778055`*^9, 3.7208711395716276`*^9, 3.7208737844287605`*^9, 
  3.72087412217846*^9, 3.7208761669854355`*^9, 3.720876420039153*^9, 
  3.7208796955606647`*^9},ExpressionUUID->"0f74fcae-9b53-4277-bd14-\
85630ac9f993"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0ad82462-e9e5-4ac7-82f6-96a9b067bc9c"],

Cell[CellGroupData[{

Cell["Uppgift 2: Which Distribution?", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
   3.7144595946902475`*^9, 3.714459597220524*^9}, {3.7144606147980633`*^9, 
   3.7144606182838182`*^9}, 3.716113721735141*^9, {3.7167345579896517`*^9, 
   3.7167345697842817`*^9}, {3.7197501073961535`*^9, 3.719750140490878*^9}, 
   3.720977211216488*^9},ExpressionUUID->"3c4e185f-8110-4b79-979a-\
09f0c14af078"],

Cell[TextData[{
 "I uppgift 2 ska vi anv\[ADoubleDot]nda f\[ODoubleDot]rdelningarna",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "1"}], ",", "2", ",", "...", ",", " ", 
     "6"}]}], TraditionalForm]],ExpressionUUID->
  "84c6e79f-2088-4d42-8a07-5edcd38ac4b0"],
 " i randomNumber funktionen och svara p\[ARing] dessa fr\[ARing]gor: "
}], "Text",
 CellChangeTimes->{{3.720871726331826*^9, 3.720871740132596*^9}, {
  3.720872028981311*^9, 
  3.7208721021690636`*^9}},ExpressionUUID->"a7cf9040-e07e-4017-a41f-\
6cb28b1ffab7"],

Cell[CellGroupData[{

Cell["\<\
Anv\[ADoubleDot]nd r\[ADoubleDot]ta linjens metod f\[ODoubleDot]r att best\
\[ADoubleDot]ma en distributionsmodell f\[ODoubleDot]r var och en av \
data-varianterna.\
\>", "Item",
 CellChangeTimes->{
  3.719672064542618*^9, {3.719672156894164*^9, 3.719672172537967*^9}, {
   3.720860589398858*^9, 3.720860592102124*^9}, {3.720860789332514*^9, 
   3.7208608263846164`*^9}, {3.7208670765699987`*^9, 
   3.72086707716378*^9}},ExpressionUUID->"57c195ff-05cc-4314-8c37-\
32c3a591a0ea"],

Cell["Estimera parametrarna f\[ODoubleDot]r de olika \
distributionsmodellerna", "Item",
 CellChangeTimes->{
  3.7196720851471777`*^9, {3.72086083339505*^9, 3.7208608538411617`*^9}, {
   3.7208613466153297`*^9, 
   3.7208613519749794`*^9}},ExpressionUUID->"b4e2db64-f363-4283-bdeb-\
1c9bf43c5fea"],

Cell["\<\
Ber\[ADoubleDot]kna 95% konfidensintervaller f\[ODoubleDot]r parametrarna. \
Intervallet b\[ODoubleDot]r inte vara l\[ADoubleDot]ngre \[ADoubleDot]n 10% \
av dess medelv\[ADoubleDot]rde.\
\>", "Item",
 CellChangeTimes->{
  3.719672113915433*^9, {3.7196722304844227`*^9, 3.719672234251953*^9}, {
   3.719682805251218*^9, 3.719682826455241*^9}, 3.720861333614661*^9, {
   3.720867031975301*^9, 3.7208670377555084`*^9}, 3.7208680135254984`*^9, {
   3.7208716890985055`*^9, 
   3.720871705933406*^9}},ExpressionUUID->"70f55553-a8b3-417c-8e45-\
5f6e9106b80a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b46d52b1-6e42-43f2-bdfa-44ef087b612b"],

Cell[CellGroupData[{

Cell["Best\[ADoubleDot]m f\[ODoubleDot]rdelningsmodell", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
   3.7144595946902475`*^9, 3.714459597220524*^9}, {3.714469010545548*^9, 
   3.7144690139721284`*^9}, {3.7144695978181057`*^9, 
   3.7144696137488985`*^9}, {3.7161137253977757`*^9, 3.716113731486662*^9}, {
   3.716734574520923*^9, 3.716734596321814*^9}, {3.7197502011461577`*^9, 
   3.719750241232086*^9}, 
   3.7209772385437427`*^9},ExpressionUUID->"455836b7-9fff-4c59-8371-\
b80ea390b828"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist1", "[", 
   RowBox[{
   "i_", ",", "n_", ",", " ", "a_", ",", " ", "plotName_", ",", " ", 
    "color_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[DoubleStruckX]", ",", " ", "\[ScriptCapitalN]", ",", " ", "plot", ",",
       " ", "\[Mu]", ",", " ", "\[Sigma]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[DoubleStruckX]", "=", 
      RowBox[{"randomNumber", "[", 
       RowBox[{"i", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalN]", "=", 
      RowBox[{"EstimatedDistribution", "[", 
       RowBox[{"\[DoubleStruckX]", ",", "a"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", " ", "=", 
      RowBox[{"ProbabilityPlot", "[", 
       RowBox[{"\[DoubleStruckX]", ",", "\[ScriptCapitalN]", ",", " ", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", "color", "}"}], ",", 
           RowBox[{"{", "plotName", "}"}]}], "]"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[DoubleStruckX]", ",", " ", "plot"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7208944432219677`*^9, 3.7208945196246185`*^9}, {
  3.7208945636669145`*^9, 3.7208945962130547`*^9}, {3.72089472408545*^9, 
  3.7208947313705835`*^9}, {3.7208980988364773`*^9, 
  3.7208981031835413`*^9}},ExpressionUUID->"944acf82-756e-4a51-bf26-\
10516ce76f09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.720870780416697*^9, 
  3.7208707874516706`*^9}},ExpressionUUID->"f07a410d-01e4-415b-8916-\
83f046dae056"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"normalD", " ", "=", " ", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaD", " ", "=", " ", 
   RowBox[{"GammaDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expD", " ", "=", " ", 
   RowBox[{"ExponentialDistribution", "[", "a", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"weibullD", " ", "=", " ", 
    RowBox[{"WeibullDistribution", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"geoD", " ", "=", " ", 
   RowBox[{"GeometricDistribution", "[", "a", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"poissonD", " ", "=", " ", 
   RowBox[{"PoissonDistribution", "[", "a", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binD", " ", "=", " ", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208957579005013`*^9, 3.720895887099628*^9}, {
  3.7208959332212925`*^9, 3.72089595778904*^9}, {3.7208966459179015`*^9, 
  3.7208966692013717`*^9}},ExpressionUUID->"e8025ce5-f7f0-4810-9c7a-\
c5d7acab9a77"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "1"}], "*)"}]], "Input",ExpressionUUID->\
"44380ed4-ba7f-4f7c-bfd7-16430b6a66d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]11", ",", " ", "plot11"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]12", ",", " ", "plot12"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", " ", "gammaD", ",", " ", "\"\<GammaDistribution\>\"", 
     ",", " ", "Red"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]13", ",", " ", "plot13"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", " ", "expD", ",", "\"\<ExponentialDistribution\>\"", 
     ",", " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]14", ",", " ", "plot14"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", " ", "weibullD", ",", "\"\<WeibullDistribution\>\"", 
     ",", " ", "Black"}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.720862843811097*^9, {3.7208696419699526`*^9, 3.720869644650848*^9}, {
   3.720869704795085*^9, 3.7208697488081856`*^9}, {3.720869788142991*^9, 
   3.720869822696417*^9}, {3.7208698560780153`*^9, 3.7208698984204483`*^9}, {
   3.720869983644527*^9, 3.72086998718001*^9}, {3.7208937900045705`*^9, 
   3.7208937902107162`*^9}, {3.720893833335558*^9, 3.720893844129161*^9}, {
   3.7208938900429153`*^9, 3.720893908987279*^9}, {3.720893947983096*^9, 
   3.7208941056870055`*^9}, {3.720894603105921*^9, 3.7208946829619207`*^9}, {
   3.720894746026846*^9, 3.720894866360613*^9}, {3.720894899435967*^9, 
   3.7208949167021923`*^9}, {3.7208949486111755`*^9, 3.720894966525855*^9}, 
   3.720895006179263*^9, {3.7208950536121306`*^9, 3.720895098261955*^9}, {
   3.720895136080016*^9, 3.720895159796387*^9}, {3.720895255092497*^9, 
   3.7208953205866475`*^9}, {3.7208954727828784`*^9, 3.720895478284767*^9}, {
   3.7208957258387527`*^9, 3.7208957527488484`*^9}, {3.7208958946599855`*^9, 
   3.720895916915766*^9}, {3.7208968601741886`*^9, 3.72089686517272*^9}, {
   3.720897335315279*^9, 3.7208973360207777`*^9}, {3.720898108258128*^9, 
   3.7208981182501917`*^9}},ExpressionUUID->"ca0ef74e-4672-4d15-8305-\
813530228c17"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7209038574175816`*^9, 
  3.720903857554673*^9}},ExpressionUUID->"43fad6f6-a559-4907-b1c5-\
cd15db9a77c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]21", ",", " ", "plot21"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", " ", "normalD", ",", "\"\<NormalDistribution\>\"", 
     ",", " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]22", ",", " ", "plot22"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", " ", "poissonD", ",", " ", 
     "\"\<PoissonDistribution\>\"", ",", " ", "Red"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]23", ",", " ", "plot23"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", " ", "expD", ",", "\"\<ExponentialDistribution\>\"", 
     ",", " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]24", ",", " ", "plot24"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", "geoD", ",", "\"\<GeometricDistribution\>\"", ",", 
     " ", "Black"}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208953289855943`*^9, 3.720895455595727*^9}, {
  3.7208956617244864`*^9, 3.7208956620396976`*^9}, {3.7208959224246583`*^9, 
  3.7208959279445653`*^9}, {3.7208959672487197`*^9, 3.7208959960224104`*^9}, {
  3.7208968870782194`*^9, 3.7208968877957106`*^9}, {3.720898123191271*^9, 
  3.72089813381378*^9}},ExpressionUUID->"a62d29c7-d136-4aef-ba62-\
b7a8dcc71857"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Distribution", " ", "3"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.720903864242408*^9, 
  3.7209038663809247`*^9}},ExpressionUUID->"7fee0ed6-d344-4d0c-a7a4-\
d22c0e7aa169"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]31", ",", " ", "plot31"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "3", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]32", ",", " ", "plot32"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "3", ",", "n", ",", " ", "gammaD", ",", " ", "\"\<GammaDistribution\>\"", 
     ",", " ", "Red"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]33", ",", " ", "plot33"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "3", ",", "n", ",", " ", "expD", ",", "\"\<ExponentialDistribution\>\"", 
     ",", " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]34", ",", " ", "plot34"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "3", ",", "n", ",", " ", "weibullD", ",", "\"\<WeibullDistribution\>\"", 
     ",", " ", "Black"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.72089567092299*^9, 3.7208957171536727`*^9}, {
   3.7208960469918814`*^9, 3.7208961690158043`*^9}, 3.7208962100108*^9, {
   3.720896893877022*^9, 3.720896894605525*^9}, {3.7208981369810038`*^9, 
   3.720898145674162*^9}},ExpressionUUID->"fe017ee9-6da8-453e-8803-\
e4633e9e8f11"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "4"}], "*)"}]], "Input",
 CellChangeTimes->{{3.720903872652342*^9, 
  3.7209038728034725`*^9}},ExpressionUUID->"af9227c8-abf5-40e7-a29c-\
900716a5d598"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]41", ",", " ", "plot41"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "4", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7208962518851957`*^9, 3.7208963395189276`*^9}, {
   3.7208969118217125`*^9, 3.7208969126943235`*^9}, 3.7208981492096643`*^9, 
   3.7209038853052907`*^9},ExpressionUUID->"d5fbfcda-31fe-4ad1-b826-\
6e70d5d8c5bd"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Distribution", " ", "5"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7209038821980906`*^9, 
  3.7209038895462914`*^9}},ExpressionUUID->"24045266-bc65-46e3-ba1f-\
8e7348520f10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]51", ",", " ", "plot51"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "5", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]52", ",", " ", "plot52"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "5", ",", "n", ",", "expD", ",", "\"\<ExponentialDistribution\>\"", ",", 
     " ", "Red"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]53", ",", " ", "plot53"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "5", ",", "n", ",", "geoD", ",", "\"\<GeometricDistribution\>\"", ",", 
     " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]54", ",", " ", "plot54"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "5", ",", "n", ",", "poissonD", ",", "\"\<PoissonDistribution\>\"", ",", 
     " ", "Yellow"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]55", ",", " ", "plot55"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "5", ",", "n", ",", "binD", ",", "\"\<BinomialDistribution\>\"", ",", " ",
      "Brown"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.720896370398757*^9, 3.7208963940554805`*^9}, {
  3.7208964819581804`*^9, 3.7208965022945833`*^9}, {3.720896544501487*^9, 
  3.7208966371937466`*^9}, {3.7208966848116417`*^9, 3.720896796065156*^9}, {
  3.7208981517244387`*^9, 
  3.7208981640521407`*^9}},ExpressionUUID->"d24125d8-06e7-439e-98ca-\
58f37441fc58"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "6"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7209038925373983`*^9, 
  3.720903892718526*^9}},ExpressionUUID->"d6e9d7eb-c907-421c-aa81-\
60bb083c737a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]61", ",", " ", "plot61"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]62", ",", " ", "plot62"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "expD", ",", "\"\<ExponentialDistribution\>\"", ",", 
     " ", "Red"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]63", ",", " ", "plot63"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "geoD", ",", "\"\<GeometricDistribution\>\"", ",", 
     " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]64", ",", " ", "plot64"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "poissonD", ",", "\"\<PoissonDistribution\>\"", ",", 
     " ", "Yellow"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]65", ",", " ", "plot65"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "gammaD", ",", "\"\<GammaDistribution\>\"", ",", " ", 
     "Brown"}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208969258281536`*^9, 3.7208970680366898`*^9}, {
  3.7208971290595503`*^9, 3.7208971353710136`*^9}, {3.7208981685813417`*^9, 
  3.720898181502513*^9}},ExpressionUUID->"bab39af6-e09a-413d-9364-\
e1149fcd2303"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.720895566601267*^9, 3.720895595055592*^9}, {
  3.720895656206517*^9, 
  3.7208956599762363`*^9}},ExpressionUUID->"73570d44-b6c5-440e-ad2f-\
23ee11f103f3"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GammaDistribution", " ", "for", " ", "Distribution", " ", "1"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.720897166878892*^9, 3.7208971964017825`*^9}, {
  3.7209039164282875`*^9, 
  3.7209039239896483`*^9}},ExpressionUUID->"91b68261-79a0-4e6d-a32d-\
2be1be7119ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot11", ",", "plot12", ",", " ", "plot13", ",", " ", "plot14"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7208531914614253`*^9, 3.720853194505579*^9}, {
  3.72089397001221*^9, 3.720893973590746*^9}, {3.72089411129031*^9, 
  3.7208941171514745`*^9}, {3.7208942489502463`*^9, 3.7208943025631742`*^9}, {
  3.720894655140704*^9, 3.7208946619965515`*^9}, {3.720894871303091*^9, 
  3.7208948757522497`*^9}, {3.720894974216277*^9, 
  3.720894978437273*^9}},ExpressionUUID->"c12e8f34-d52a-4713-af8f-\
e74952afe55d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
2L8swvbrLA6WSC0LnIZ2SVf6t1zFofqRhrtvT0TYbeTgS7jlAdMQYdyvu+HJ
oXqShi0pC65t38LBPcvTZadhw4WJh5KYcb2+pCHT/3uKtw8Hc5jNtcjqMxqq
nGpHneZQvfmMYbzvw6cFcqD/ZZnwZ8yVbQr+E8Sh+vMZO9OnX9UHc3D9MznA
8Mstt+Pd4FA9Yj5v2yCnKJGDqZbp8j7DeH7gy2/MuF6fPsM8aYnPEyEHcsvl
OqZjf1Uk+0chh+pVOpz9n7TcoOfgokWOnNKRvLjgTlgth+pXOmDXbXj+Vw7G
k/IhHXuPuzwZ9I1D9Swdd7SzG7ObZqHUIgeF6RiyzcFGOyyL6htzv8sxpy5P
yMIZy3Fm6hLp1h4z8mdkUb1joV+bY9LhC7NgazmOTN3gsGxNy/IVWVT/WPBs
xlnayi0LBaS8YDirUIk7e2RRPWTBcekNN2/fLByzHIdyhmNLBlX6Xc+i+shC
3vxvu9feyMIAy3ZmOPS7YYxmcUgW1csMDAuPXvbkbhZyLNvPPQMjDvT/duBp
FtXPDMx27DC+YXEW/rMs76MMJB/p2L9/ZRbVU4Yj3s3NK6VZ6GF5ffIMjPmR
d7BJbRbV10xEnfgv1s0qG+mWxxuYibI2a7NuMeN6vc2EVa/VUd2ss7Fzq+Un
E8G/0g/yemVT/c3E7nk/o/n9stGJKZ4YhcUv9n81ArtsqseZ8HW6VNV9ZjYS
v1g2dCb438f8yZyTTfWZOdeDl7cZMD8bngmWC7IxZvadtU4ns6leM+c0oMhX
cyobrU9ZBIoNFfdQzvKAbKrfbATfrBn4+kY24hZYDggbrxyDZgwIyaZ6zkZu
7MkR53Ozsc5S3ZnZCHwztFtiXTbVdw4GFLHHz22bg8Yi5riN5eDx1xNTm9vk
UL3n4MCRLQH+A3LwyrKdvTlY/XmyfcMROVT/OfC/imEXR+fAieCRA5tfpxaw
xuRQHnBw8Fnz31fH5eCXZTmYfZrUe8iTrfNyKB+yUDfHeoJpfg6eWKY7OQtJ
ryfPxcIcyossXL8TcOfU7hwssVzuSBZeLHfoG+STQ/mRBavNHxZxfHPwheAh
C3MmP23d9FIO5UkWVPtzShSXc3DPIu+/srC046p+TcJzKF+yES8vePvzXQ7m
WOR5ejYe+7iGzH2fQ3nD7IN+taqf6TnQW+TVLxu5bcusxPk5lD/ZUBwUT9pR
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
2FkOGA==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1: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
Vc1c2+q3Jhxd+uiTxKgJ9YTnTYhpf6nL8UFNtJ5rgnU3vfYDjJswgfC8Cc0P
i0ceZNpt9V0Tut6dv66vRRP8CM+b0O7Mkahp1k203mvCizH5C8/Ob0IN4XkT
RlQGX2y3oInWf03QCZ53oZLpdwzhOfN+8oAruw820XqwCR4p+oLP3k04QXje
hKjg4bV7mPu01YdN4K5wW3H7WRMqCM+bMF31oXDCyyZaL7Kxddr4uZlvmjCK
8JyNnwZeZanJTbR+ZOPz6etDp7CacITwnA3j9d7ed+VNtJ5kIzlxyCmHdmyU
EJ6z8SXEn5M/kE3rSza+zrYN7z+FjeGE52y0xDwWmtiyab3JRsRHg46r5rPh
RXjOxtT0h14SOzatP9no5DNT828bGwWE52yEn7w6dD/Tb1s9ysalzCXTnt5i
YzDhORuPX+pJZ2SzaX3Kxq4uO79FFrGZddICmAN5Xv7Kl8zn2upVDlKe9ui9
TshGDuE5B1kRnL9jW9i0fuXgotk3g5X/cTCQ8JyDqdMOz+o3kkPrWQ48O1ms
KDXhYB/hOQdFXhbh7ydyaH3LfM+C+3jMUg4yCM85mJcctkm4n0PrXQ5GX2ro
cucAB/0Jzzlw2mXh8ewsh9a/HAjq6tzMHnOwm/Ccg6q6aS87h3JoPcxBwxtO
1focDlIJzzmo2bAh7Fgeh9bHHEiCq78NKuagD+F5M+S57AsNLA6tl5tRkXAj
8BPT3kl43gz3EVsK/ok5tH5uhsXzMdM8FRwkEZ43Y61axyDpB4fW0804nLap
5MVPDnoQnjfjuU207g7mvm31dTPSWowdb//mYCvheTOmjD2V171PM623m7Gv
4mVCYd9mJBCeN2N7ZEF2xbBmWn83o2noizEym2Z0JTxvRr8NymV/bZtpPd6M
r+vGuMXtasZGwvNmvEicl+lxspnW51y8McNzpW8z6sh556JzoeKc45NmWq9z
4enqP1L4ohmnyfnnghVrdrlXdDOt37mIWtzPqSG1GeNJPOCi3Um26cymZlrP
c5F+0xOcb82oJfGBizn8CdvOf2+m9T0X33rKnmz50QxfEi+4cDpwRyhgxtFW
73NRtCbtycjuXIwl8YOL9llPbZf24NL6n4usW8887Y24qCbxhAtRp9WiqCFc
qgdwkblj2vaD5lzqd3Oh3Mv2S2LG0aYPcMF97/li+BwuTEm84WLLOLubf+25
VC/g4vFF/W4j13JRSeIPF3ppIeZeu7lUP2D6O+Mj3sfct82v52Ja+HTTPd5c
qidwMUbp2HTzOBcmJD5xodM4dmXDaS7VF7goOTR77Lw7XJSTeMXc76VNoGMY
l+oNzPhu/okyTubiKAk3XFw+4Hh/fTmX6g9cFO8P0rHRcGFM4hkXZYuVNz59
51I9gpkXb2jokL9clJL4xkVX99FNb5bxqD7Bg6V/2Lb+zjz4kHjHw5YnMV2/
7eNRvYIHN8/q8pajPIwg8Y+Hqzd3XZId51H9goeqrmYLhvvxUEziIQ99Jnm3
GF7mUT2Dhyjbx51GBvFwmMRHHjaM2jnhyl0e1Td4mD3VO8n/OQ/DSLzkMfVL
4x+HcB7VO3joG+pn2+U1D4UkfjLj42k8LVJ5VP/gYWr1qQzLTB4OkXjKQ0DY
hm7zc3hUD+Hht5VBeFMhj/6+gYem6tcboit4VB9hvhfsfP9FJQ/5JN7yEFNz
4Ojzah7VS3iIFecnG7J5OEjiL/P+0hBPvWYe1U94mGxVksPi8jCIxGMeOMGD
zVg8HtVTeJgfYu/+iWnnkvjMw0TDuTHG7fhUX+HBcb9Ot9COfBwg8ZqHnr2H
/JvWnU/1Fh4qnKaMk/bmw5DEbx7G1iS+3TuOT/UXHgzOf1liOpmPbBLPeZgC
w/uSWXyqx/AQzp27MnQ+H+4kvvMhmjp05o6lfKrP8NGl+NM/r2V8GJB4z8ex
ipM9rdfwqV7Dh928l1njHPjIJPGfD9/F3OJh7nyq3/Dx1z5v+pXDfOwlPGDe
V/mpWpl2m57DjKvB90M3Pz4GED7wkcvb48G9xqf6Dh+PNl8RT7/DRzrhBR/L
BumIez/gU72Hj1jh4Zmhj/hwI/zgQzfF5EHuEz7Vf/iI3Dggdn8EH/0IT5jr
f0k3FkXzqR7Ex4gFunMdc/n09yx8tPfxe9tYxKf6EPP58E96BVV8uBLe8MGa
ol5byLTb9CI+eqTdtPao5aMv4Q8fgzuWre5dx6f6ETOPskuL3zDttt/n8HGv
hzpmCY9P9SQ+XMJ/6PtrmCvhEx9fxC1L5nQQUH2JmWfoy39DugnQm/CKD2V5
+4UxTLtNb+LD+NKgpfLuAiQTfjHr88bpl00PAdWf+JjYZdiKjAUC7CA842NO
UemcqKUCqkcJMGV6kt6E5QL0JHwTQHHuip14tYDqU8z7ZReO2KwT4B3hnQC3
+u6fYb1ZQPUqATQbzDi7twiwjfBPAKdxQY0WWwVUvxLALvnJXINtAugRHgrQ
f2fXl5d3CqiexYwzcu2IGx4CvCV8FGBJ8qFxi70EVN9i+hN5qP/4CrCF8FKA
e34BDXEBAqp3CTD401DH8NsCdCP8ZL7/wk6a8kxA9S8BBt42WTMtWoB4wlMB
DG58Us5LEVA9TIDI1Pm5tRkC+vslAZ6Y6PVzyRZQfYyZb/HiwRk5AnQhvBWg
pv+S+tFSAdXLBIAhi+etFiCW8FeAX50yhSXfBVQ/E2DszQls4z8CbCA8FuBO
/7A5JzoIqZ4mwPiAGNVFPSF0CJ+Z+5TnfCo3FVJ9TYCW17PbTzETIprwmlm3
Dx9ebpkspHqbAF5eb85PthbCifCbeS5X9k54Zyuk+psAwmn1Azw3CNGJ8FyI
8+mtn3tsFlI9Tgj7YQcbN7kJEUl4LkS4p24r64CQ6nNC3B78zOjBBSEcCc+F
GHY40HRsoJDqdcy1a1fb3zeE6EB4LkTu4WuXOtwTUv1OiLJVjX46D4R4TXgu
xHDOA3vbR0Kq5wlhts7u+b0kIdYRngtxsF3xY69UIdX3hBBsC+ZmfxCiHan/
mfvlLdvnny2keh/z+Tjr4s8VQkQQngvxKu/h5Pb1Qqr/CbHp6LbBQwVCrCE8
F2LQqw8uUUIh1QOZ61PXSneJkP5eTYiFpx2+BKuEVB8UIqQ/a38l0w4jPGfW
7VU82/yTkOqFQpz9++dV2C9mHQnPmXnqd6q62FlE9UMhOsou3uugK8IfwnNm
XS8d+328m4jqiUImPzkz5ZS+CC8Iz4V49mrItvZGIqovChHHqbr8eogIKwnP
hbg7OPZosKmI6o1CFHbJsxhmLcIvwnMhrK7PHtLKtNv0RyESzO3jm21FeE54
LoL7rrkbt84VUT1SBF+vQTvMV4uwnPBchIfjJDdvrxdRfVKEcsHcabZbRPhJ
eC6C2X+RJ+y3iqheKcKPPY5Dw5j2U8JzEeaFPu5wz0VE9UsRNrQ8Whm5V4Sl
hOcifFvn7vjGQ0T1TBH27B0w/JqnCN8Jz0X4emlJp51HRFTfZO6T05Afc0eE
EMJzEc5Ov+eQ9VxE9U5mPq3J/iZRIiwmPBfBZKKnT0meiOqfIrSmpwdpmPZX
wnNmXRsC5++sEVE9VISmOTnjZghE9PeJIhzvbbX3n1BE9VERxhh5POCJRFhI
eC4CK2Fc7DqZiOqlImzs27WjTCnCZ8JzZn4hBrdNv4uofipC4kLvHguY9gPC
cxEy4i281v0RUT2VWf9j5Wk/O4ixgPBchNe+y3s7dhJTfVWEIR95qUGdxfhI
eC6CrtuAkSt0xFRvFWHZ8O8L/3QR4x7huQg3d8yxTO4mpvqrGCck+jt29xJj
HuG5GOlnesVX9hZTPVYM75yNT9V9xFATnothw32c1mOImOqzYpzRv3VwwDAx
ggnPxUh7W/SmzxIx1WvFCHjt9HvFcjFsCc/FsL5VFnxip5jqt2K8YWc8/XxU
DCXhuRgzzfhdV/mJqZ7L9LfKfrXMX4zbhOdiVJvMGn/qvJjqu2KIfMfWxgQy
/RKeiyEdMHbro/tiqveKca7cPOlNqBhywnMxerixumx5Lab6rxieJ552Ln4j
RhDhuRh/Ktz8xsSKqR4sxlbzWs2iRDH9PaoY9v78/AdZYqoPi9FlUO/ySSXM
fQnPxWDxOt+KKxdTvVgMVbLpBH+RGDcIz8W4Wu9UufarmOrHYkw+2F3cSVeC
2YTnYph1//uppLuE6sli1H/72i5dTwIx4TnzvDqEdVikL6H6MrNO60wT7P+T
4BrhuRh3Y35trh8qoXqzGEtLXGy9Rkgwi/BcAuWrfT6zx0uo/izBKtH6yOVm
EggJzyUIOP5FWDNJQvVoCW5sxkddSwmuEJ5LEOEyL3jiIgnVpyUYyL4WO3ux
BDMIzyXQPTb7XMd1EqpXS9B67PbwlvUS8AnPme/9sRmxc7OE6tcSfLy2dd5c
VwkCCc8lcG0q2bh9n4Tq2RKUWE94ZOYugQXhuQSTC/oOGHhEQvVtCd7oTD4/
4bQEXMJzCSrnlsaPvCqhercEISH/LRx1XYKLhOfMvO32DrcIklD9W4L+u6aU
GYdIMJXwXILp2T4zAiIkVA+XYEjdtpZeURL6+2MJJtn0ezcxTkL1cQnsRmz+
7Z8gYbipPXDMfYpMzn/JkFC9nJm/p2DxxUwJphCeSzDhyDbv480Sqp9L8FmV
t/63QIImwnNmfToctHqqkVA9XQJbnaDgiI8S+JPpSiBz/Wjb+llC9XUJXNa1
fIr+xYyL8FyCZs3cpZatEqq3S1Ft18w+2keKBsJzKfYYuYzZ309K9XcpDAbe
ffrAWIqzhOdS7Lf+K3wwS0r1eCl6XXDrc9tSCjPCc6Z9c/vdABsp1eelcOn1
4/hkOynqCM+liGwXpP68Ukr1eikuW+u9+7VfitOE51L0dxoV9fSAlOr3Ungp
q9bXeUkxnvBcilnmVY2HLkqpni/F2MThV7n3paglPJfCstABv0KkVN+Xwulg
2LIDz6XwJTyXImizifRYlJTq/VLsOPJAsDKO6YfwXIqFxSnHvZKkVP+XYtQC
v+Gx75l1IjyXIv2q5b5XaVLqB0ixyOim6GqBlP7eXIp9VpMf/q2UUn9AiuaB
m29G10phSnjOjDs26FpXlpT6BVIcGDMzYSXTriQ8l2LkBpMW3wYp9Q+kmDhS
v/43R4rjhOdSHDJZunuUSEr9BCkKAhQGW5mrCeG5FD1azf9EyqXUX5DiXM6G
ziVKKcoJz6XgR751cmdeb/MbZJhybtdAHVMZjhKey3AhZ+VR1hgZ9R9kKLT8
eXDqJBmMCc9lCL77PVi6QEb9CBlupylOT1skQynhuQz+L3TOZDvLqD8hg7JJ
7v1qiww+hOcy6L332Ltyl4z6FTJIDPZfMNojwwjCcxlTT8q/nD0go/6FDJHj
n3SLZtrFhOcyOKl6BY09KqN+hgzpux73E52R4TDhuQwhc1dsvXpWRv0NGbg3
3xkNuSrDMMJzGcaMHHq53UMZ9TuYfoKXJPUIZeZJeC6DSZaeXWKqjPofMkw+
fmeWW7YMhwjPZYj/rtctgmm3+SEyHBz75/jcXBn9/wIZbEf3eHU7X0b9ERk2
q/Y3fCiSIZ/wXIbT7ttTLEpl1C+RoXsPx+VcMdMP4bkMk/S6/WiRyqh/IsNU
i3FhL1QyDCI8l8F+ZsC3kI8y6qfIcHlrDWdEqwy5hOcyaHLHPhC1k1N/hVnH
z4eU6d3lOEB4LsfERym+YcPl1G+RI9Rm9cBGUzkMCc/luOmYoL99vJz6L3L4
NB2MOs60swnP5VgQ+/EPf4ac+jFyBJ+7fEhgJYc74bkc0132GZ9dJ6f+jBzX
jl++fMxZDgPCczleySxD7V3k1K+RI61fsoGzmxyZhOdyHI64ojrPtNv8G6bf
8Jh9vfbJsZfwXI5NvfLLu3jKqZ8jh9N8tmol0x5AeC7H0153zCyPyqm/w7Q3
Kx/O85UjnfBcjkg/y2cT/OTU72HGozt1lcRfDjfCczkialtszgfKqf8jR+vd
hWUu9+XoR3guxzfDjf0nxcupHySHcmHT0tQEOf1/EmY86rJrhmly6g/J4dJl
asnFPDlcCc+Z+fFDhlcUyKlfJMfSqz1OPSmWoy/hObNeuecWDSqVU/+Iuf/G
PO+qajlSyHaWY47VqtzBjXLqJ2nXb2NYMJ+5D+G5HG+de34o+Cyn/pICM4a4
hAl/y9Gb8FwBz83ryhs7KqjfpEDP4hmlzj0VSCY8V2DNou6v9jHtNv9JgdNf
rg8S6Suwg/BcgW3tR759baWgfpQCRgaORx7ZMf0QniuwaWuHUXecFNSfUmCi
pbFg0DYF3hGeKxDaZ/QqI1cF9asUKGiqsHDfy/RLeK6Azq/UW5s8FNS/UiAg
aOHWJZ4K6BGeK5h8Pkpy+byC+lkKZP2JMsu7psBbwnMFqgwW+Fy4oaD+lgK9
3j5+siZIgS2E5wq01rrHuLxTUL9LgbmDVt9Pea9AN8JzBR5+mv0qNVVB/S8F
DrsFdv2QoUA84bkCW6d6Y2yugvphCriVLHj9rFxB/39Igc2b3rgkNyqoP6aA
1eSgyb4cBboQnitgoLe7f65IQf0y5vrtF++GRoFYwnMFcvSf6rV+VFD/TAFv
ieOxqd8V2EB4roBudcGir78V1E9TQHrt48UFrcy6EZ4r0W7ECQNrXSX115RQ
LQ1PlPdQIprwXIlt6+oKAgcpqd+mxGdB0p05Q5VwIjxXItPJYtVnpt3mvymh
+TLjcvRoJToRnithOPP6vF/TlNSPU+IK+vc3naFEJOG5EhPEZm+/zlJSf04J
+z0bvDtaK+FIeK6E6fO5GSUrldSvU8Ko1bJ77TElOhCeK5FY9PtQ6XEl9e+Y
zx/pPM7YT4nXhOdK+B5YOeWOv5L6eUpc3JIZ8/exEusIz5WofBRh8+iFkvp7
SqzeFGLcLoJZl1PaCSvRMVWR1C9GSf0+JU6Zi9fPTlAigvBcibPWG/77915J
/T8lskoUXWeVKbGG8FwJaYKV4+pyJfUDmX7ZdyW3OUr8IzxXwstf2O+sWEn9
QSWmZhsH/FIrEUZ4zjyXxF5R0CipX8iMX/4x2LKjCvaE50os/xVlE6Grov4h
Mw7ud/awLir8ITxX4lGHMfoDe6uon8jMj+/eqX6ACi8Iz1WYmLDs1tf/VNRf
VIH/95O3aKAKKwnPVXC+GxQz1EhF/UYVijsbZZQPV+EX4bkKA1Nnd84coaL+
owpLd29a5jhaheeE5ypcvLCinDdTRf1IFeTLeCNOzVFhOeG5ClPTR7pMW6Si
/qQKsw3z6u4x15+E5ypUTigeIFqlon6lChsX8+/K16nwlPBchf55/yyGO6uo
f6nCQ/srjk82MuMgPFdB+v6e1eNtKupnqiCRWDVa7VThO+G5Cr/1XN2GMf20
+Zsq6OhsTtDsViGE8FwF321Do38dVlG/U4VPFxU7u11VYTHhuQr5fv28LzGv
t/mfKvRULTjUwrS/Ep6rMKIu7O2raBX1Q1X4ctv295MYFR4Rnqvwo36yncUH
FfVHVfgb9eOuT4YKCwnPVSgXucb3LlJRv5R5f8uT5WFVKnwm4UqFdUMOzfzX
pKL+qQqdXz2aEsB87gHhuQrdwqtzPdUq6qeqEfNj/cZKjQoLCM/V+HfeRzKy
VUX9VTXczDYdesp87iPhuRr6G/Ys8+yipn6rGvsWqd3791TjHuG5GjyLfwlz
equp/6rGz4rx5/caqTGP8FyNmmE/bP+NUlM/Vo0+md8d1pmooSY8V6ObtM9s
w7Fq6s+qkWfnrlllrkYw4bkaV/oMYt9nvtfm16pxN9hQFLhIDVvCczWm8wLm
uS5RU/9WjcbdDisimX6UhOdq9C5L6L3FUU39XGa+C89cN2Rev014roZmvs+w
/06pqb+rxvhi7hnfc2pYE56rITT+HPbwrpr6vWp0rh61/up9NeSE52pkXsxO
c3qopv6vGg97L/QKeKVGEOG5GunSLTXG8WrqB6vhPT78xYRENeYQnqvxevpE
t/AMNfWHmfVMWme4uUgNKeE50/8K9uQMvpr6xWoUNT3dLBOqcYPwXI2OgZ/1
n6nU1D9WwybEau7eP2rMJjzXoOGfVw8zXQ31kzXYUNvY+TbTFhOeazAmv90N
764a6i9r4KijM2h0Lw2uEZ5rcGCtc7kh83qb36yBw7FnDi+MNExdpf3TYFza
yH+rp2io/6zBwJ0oNZqtYdZNG1A1EHCsW5I2aagfrcHEqSOCTh7Q4ArhuQYZ
MTF3yjw01J/WoOxBo1vOCQ1mEJ5rEJAcOneSr4b61Rr0y3IbPuicBnzCc2ac
3y/s7XZTQ/1rDW7HTx/Q644GgYTnGpwtGBI+7L6G+tnMuG2iWvY808CC8Jzp
f+/nkZMjNNTf1iDW651f1CsNuITnzPfnxEZpYjTU79Zg+uwFt5veanCR8FwD
wzMP0vu901D/W4P/HrwNHp2qwVTCcw3mSO1XPWVeb/PDNWgcEu29LkcDDuG5
Bl7cMseEag31xzUoceCP9KjX4DzhOfN8nP8t4Yk01C/X4JUpWxWt1GAK4bkG
2e4T3y74qKH++Uf8D9V94AE=
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         PointBox[CompressedData["
1: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
bV2kpfl5M/4PG5KSyg==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[CompressedData["
1:eJwtm3dcjV8cx7M3ScjOzviZRYRPdnZWNhWSkCQrocyQUZKQZERWKiHtvcet
brt7u3uPrAbJ77nH6Z/7OvU85znnPOd839/v53Mbbn943d62enp6snZ6erpP
vcGbMh9MWYuWV19LVtlbw9O+R3R/D1fatoVeB8PPB8zc8OusU7zbHUd4zjvX
1LL8JP27C/TahTzgLTiN04bhS/nubvBcF+iScvM0vf4kPI+vOLDP8yJOycdM
7fzWA5bLLlz4w/Kh93tCr3Cy8ZUbNzGnbs2Ne87n4bk3PmlKwS14kP4uQk/m
YadwvI34Zd3bTrhyGbaTKk7uifdFC+nfG3qpOa7Xht7BnOjs44mPryHkyYjU
55384UGe5wNeuJtX9Tx/xA+9pFwbcxMhbW3S26/1Ryt5/m2ErGEXZtncRXC6
cYSroy/0xjp0np92F/PIePzgeSL6hLdBALjN5IHg9evH3YAAnCXj80fIWdd7
H23uYehkzqiOXneRHNDDKL1tIBLJeAMQ8ncRp/z9fezcY6HrEXpeKxTe7R6g
lXQXiJDUM7N3T3uA4PvkB7bjv7FylQ8wj8znASxfDH48uO9DcAsb1wtDH4IX
y069kPsQZ8n8ghAya3CeKechhra36flf1CMYD5h3T24fhEQy32AYe+cFlwx6
hJ2zSIewjLNYrDcyBH/J/EOQ3OpkF10bgjUzr863FYdAr9dEY23ZEzwm6/EE
yWaJyyc4PIV2bQzT4xPYmr15Enb8KUDW5ymmBMRMVT9+ilsHpb9ffX2K5OI+
7O0vn6KOrNczGP95lXus9ikmX+lXVdj4jOm/oLdA/hTnyPo9h6XZok/erU9R
9GTxp+9/nmPK5tlV782fYRhZz1BYXzZN6XzgGQ4zq2XU/gVYBbI/o44+QxJZ
3xfgbek8mvvoGXpVPHOZ2/Ul9JZMydkV/Ay7yHq/RP3Gc7IBE57jvW66+mHQ
P/1qqsgvFH/J+oeh/nPj3RGhoVij667fKyQvHG/jpgrFY/I6XsFyKi/wUYcX
0OqWe/BreG7tf7qq5QVAlpNpX76RP3PlS9xiVo814g30jY0il9S+RB15X2/g
aaE541ofhsnbb6X+NHkLTw+Lr7LGVzhH3t9bGLcu2tA74DWKmN4GTn4Ha59I
v52r3mAYeZ/vEOHR3t2z51sc9lV7wCwcyQ2hNl/7v0USeb/hqO8279Uyh3fo
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
jR3L0YPwtgIlWzrk5bmW0/y6AuHVZsvVTNuO8LcCTima9Odu5TTfrsCPhgPm
/t7l+Eh4XAHDl+PWHQ4pp/l3BZY3KI/MiyxHF8LnCgi6RJnrFZbTfLwCHXsO
eXCVmdcOwusKrHxrdeExM69/+XkFHK614Vg2liOS8LsC0WeKcp79Kqf5OjO+
Pa/1KlrL0YHwvBJ7AqweTx5cQfP3SqyzGHPoxvgKbCE8r4SJS5awyKyC5vOV
MF12TmFkXoF3hOeVeD36+xIN0/6X31ciQLCHY7qsAm1e6zqshFHBz20+Kyto
vl+Jp7F7xKM2VWAj4TnT/8pX7zvYVtD8vxLpyW/MbzpW4BXheSUK2wfnJzHt
f/VAJT4lz5pmy6zjH8LzSuj/J/U1PV1B64NKJNf1qB9yrQJrCc+Z8fapCuTd
qaD1QiUMlsl/zGXWNZTwvAoBxjdqRwZX0PqhCiaXr37f+7ICzYTnVbAOuyAz
SKmg9UQVwrse9H2QUYFVhOdVMFi4fMD+kgpaX1Rh3iuTpPUVFXhCeF4Fq1H3
z3WoqqD1RhXM7/mmlwgq8JPwvAolVoLYXY0VtP6ogn/FyNbXvSuxjPC8CrzY
CXmThlbSeqQKlweW+5ybVYlHhOdV8JvR4/2oeZW0PqnCtcj8O/MtK/GV8LwK
5z2+Dp13qJLWK1VoTSjr+c29EosJz6th7Mx/P9GzktYv1ei6eUrCT+Y93Cc8
r0b25A+Rd0MqaT1TjVavmyOsiyqhJjxnruec9PbQVNL6phoBF9oeeNZUifmE
59Uo/NtrVEqvKlrvVMOk2/vMfGad7xKeV2PR7vGbVgypovVPNURRH31Es6og
JzyvxiifaQuvrami9VA1MqcNt3dj1nku4Xk13FYOu/LFoYrWR9WIsH0zb5hT
FXwJz6vhaLecE+dVReulGsw7H2O/5H0VxITnNTgo8x505mMVrZ9q8K086JBv
QhVmEZ7XwPXLHPdGVRWtp2pgc2JwyeqvVbhBeF6DkOlmYZENVbS+qkG1o1be
bkA1+ITnNdiQ8GFI8qZqWm/VIKz4gHm33dUwIzyvwcBuq7zNmHX6V3/VQN+m
e9Njpn2V8LwGTY3/CT6crKb1WA0ctrQMKP5QDQ4JVzVw7LOh9dSXalqf1eDm
n2zBcmE1phKeM/MJNbE1F1XTeq0W3I7u6wd3rsElwvNaBE3u9p3du4bWb7Uw
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
6/E/Vrzdjg==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{}, 
       StyleBox[
        LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
         0.9999999795918367, 0.9999999795918367}}], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], StripOnInput -> False]}, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"WeibullDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7208531951510353`*^9, 3.7208538448105297`*^9, 3.7208689446172495`*^9, 
   3.720869478535988*^9, 3.7208696028893394`*^9, 3.7208696620534735`*^9, 
   3.7208700061621532`*^9, 3.7208718791250277`*^9, 3.720875448845619*^9, 
   3.7208762830709653`*^9, {3.7208938962282596`*^9, 3.7208939128510103`*^9}, 
   3.720893964552347*^9, 3.720894118036085*^9, {3.7208942960475397`*^9, 
   3.720894302868361*^9}, 3.7208943812394094`*^9, {3.7208944567505136`*^9, 
   3.720894469417482*^9}, {3.7208945104711437`*^9, 3.720894526228578*^9}, 
   3.720894662590969*^9, 3.720894696011142*^9, 3.7208947376250043`*^9, {
   3.7208948765988336`*^9, 3.720894893297638*^9}, 3.7208949794619904`*^9, 
   3.7208960114386134`*^9, 
   3.720897072061517*^9},ExpressionUUID->"565ac901-3fb3-4cda-8552-\
8255e6165633"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "GeometricDistribution", " ", "for", " ", "Distribution", " ", "2"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.720897207644708*^9, 3.720897225773522*^9}, {
  3.720903930329114*^9, 
  3.7209039319302444`*^9}},ExpressionUUID->"7a0070bb-5b5b-40a9-903b-\
b5864f35686a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot21", ",", "plot22", ",", " ", "plot23", ",", " ", "plot24"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7208531976828256`*^9, 3.72085319831326*^9}, {
  3.7208954664574223`*^9, 3.7208954674591208`*^9}, {3.72089550383885*^9, 
  3.72089551257502*^9}, {3.7208956012249784`*^9, 
  3.7208956034825754`*^9}},ExpressionUUID->"d49d5100-6286-4848-9cdd-\
c4c7c5a7da17"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJwtVAtQlFUYXR3AxWyhrXwQOiHkI0dQEwWRzjC4qJAaqAsaUiKg8SphB63I
WgUFdEFSoEzaUUGT8cFD0UGi3FFDUVRaXHkJ7LLv3f9CSibP7v2nb+bOnTNz
/3u+75xzf4/YLyLiJwoEgnV0sb25x/mFnNzBB3zVwLtEIlKK7iLK/0pjRsPv
WLdLr30/rAlj6r3mOYsbobzhdlRW9gDRBarBedEPob787Y+3pjxC4GTNmS8D
W+AQFHvzp02PkdGgdPPpUuOXt78JGfu1BRdX93791iUNTq8MqJjqrIYtE74x
dW1Y0j252ZTeirn8hZ1Im7dZs830BHEJrJ7h+OPo46vin4KnF/ZA61kXtcnc
Btmx6Q5SUS/u7U4NWZTegaDP9I9md/Tixd4bg4kTusDYVvdqocr5Linvh2eo
GGhZF+vah3dExvcOinuwPtaVjtiHa8Uyt6sdPeg/dydsea4e0uuaqS5lvfi8
0E47NMBZKMz9K1ELv1zGYMA/f7vKQnx0cJSKFlaXGsGJFFnV/Tps1pX/fOtd
ExxKgx2TLvVheF9iveyYCSlPScWDnXooCSMww7pkjc8qdwMGeD4zQopOXJE0
GRBE1Vg7xYJD567ZImVGgNfTgoashHGXaSaIeUMs0A7M9X6zxoTl7PhEK+6+
UC6dtsYMobwo+HCyFVsK9idoW81Y3OXlJC+y4vCH4YqwaAvkrJ3pNjidysn1
77BA0MoEteGCalL96Qgr5i8WXnDfasNW94zAIyorIhQlqeIDNujjfS3CBTaU
SWqfj6ptUPWOrvU7YoNnZdquQrsNFlXpVonBBo9sa/j1WXY0F+yRxPvbkc4H
wo7TOaGTnmTbMdOHNWRHbUDBG11NduwWH/jj3ik7xGMhttuvcZjR1vxyo84O
zSbFsx4JhxTWrgOHssD6RWPnOdxkcfLiUFm5o/CimkMxs38hB7Oyrt0wxMEy
fJ46zEE60LdCMJPgOLMvhkNVebLX+gACE03Hq30cBmcNF8+WEuwM6N6gKOHg
2B2XfT+FIJ7FoZGDInRPVMl+gj4+Pxwe/pmYer6MID/ZSBk4vJ7pp0urJtjB
4vaKg+TYncjtDQTaDUwwgjUXpbUVjQRH+EASDNecTfv+McEy/n0RTF929oxL
G0EPsyeY4EzOivnyboKrpSwgBCdiTqpOmAnypjJBCPQS93C5nWApsyeOwClx
Y1PWcwJn3m8CT2SN3B8kqGF2ZBIEhRbPUQwR5DA7sgmqPo30PTlMsC2ODUxQ
/+C35q9GCJbw+SD4aHXsWu9Rgkl8ngk8tK+2F48RdDI7yuk549WjH4/Te/j3
SxDz/EppEcUHqXuSWoIb+WF57RR/wv8vCM61pu/UUbyomg1EdU6ww0Kx44JD
dCIC39uBWYTidpruyRqCypXjQ/9SfJlOF0B1iKzymzFCcRYbz0i/13CdoxRv
4dsjSKoT549T7M2ue0kg4KsfE/7f/wNchoJr
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxF03lQjGEcB/CV3RVDKOQem5ihEIZc9XV0qGblXIuJnDlyG+No0EHYMq6i
SYp0OVI5IhRmpSlTyRGtUGvb+32xJUe13uepmfeZeeedzx/v8/5+39/zSNZs
X7jeRiAQ+HAPebsYREEV5+M8vRSh2n9ZufDIYyIVke88V2sqnVR/CnFxVV9/
Q7QI2+0jn5ZeeQGNxD5hisoVn53F4XFzypB0MF6bM0KKazs8ulWnViKgSaCM
yQ7BUeOCB0OPvsGNiad7DnA6gm30+3fw+tkUaPx9FovUaYnKYR/wa2OycMit
VHyi+6mwQBXv5SbNQ1HpFe/7llp0HulwWdpYiEObH+851/8rYhLSfvs4lKBk
b2HywHF1+OgWmPFs3Wv0yfatO9CnHmyqc9HJ2Gq4n5gVrKmsxys/mWqh5DPI
373vq5HzUNu7aGk95sde4Er6hihJkKMyRIOdpPwdGuRLvJs9BugwO5gEoEGr
7kyDeokBIRvIakCFb7fF+/ubkG9pfbtP3wC5LELst8mMmvJmriUtfPTCfr2W
McgqDuBK0EHmsvu6oIVBGs1HB//3BdX69SxKaf16XJt8w1GdwSIxgSw9Ommc
amUVLIwjx9veHGzAbP2B6eIGFvbyqXdL9howWuxeFveTRSwZ1w8D5pZH3/T/
w0JB2nUyIuWR/FlRCwtbLk1FqBGi/KFV+9pYCF2i+30sN0Lh6h4ttbIIp3ma
kL5BpM3hfBiTVhb4mSAYJjbVcs7kppOzy4Qnt67m/+CcTus3oeT5NNe/nP/S
AZqwdtTw262c59HATXD0lA+0ci6j/Zlh1zQji7ixSrqml9yMY6c7fyW+RPs1
42JkWCPxIKHMbkyeGT0Uln/EW0l5QgaBLxPbiB3pfBls8T1uJZ5JxuXBIPPq
B+rz5jCuAwZ1iy3UDjQvBgKbFmodOc6HGEQo26h7j8lLYjMYnEqxUk+j54VB
rrrdPW1IYAyUze1eS+8Dg/TWdtcHkgPEQm5t9+oCv+42LiyqOnyP2704gIWl
w13pPFgI6PqOO7s2njGH8T5O7wvvCbXkQvDuQuJJ4v2JnjfeuSSebN4rSPuF
vN1Iu8W8RfQ88K5JJQPmfXvw8nXTv/COIuVreS+j5fAeS7Zr5t2p4/0fel83
9w==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         PointBox[CompressedData["
1:eJw1lAtQVFUYxwk2BIYYNIwExwS3UkiMmVYihX/ESyEK0hCQCVywEBkeO8gg
ZUqCKyICAYPS4IIYShGuuEAiMkhI0AMWlIfR4q77YF/3HgQcJnlM996mO3Pn
zNx7zzn/8/t+33UTZnxy2NLCwiKMudnx/2u56elohFAKuXut+x+eN7Gw8jDX
8MY9FJwUjCVc7EHNJfYaBN9Q3Ra5dgCr7GtvOXaf2hU1ZzsMwWede+0tH0Bk
0UQy7o/CqSVUlec0jvcVt79wHBrD4j7199/1TWL6QmXspSuT4Kbb/I1Iqzr/
opApdGVXvMqLnsZos2e5+10F9rOfb1biljLK0MFTIqR9nkmkwoLy08Ytziro
l9jAT8DXK/e86fwEbQM53RIXNWLV08rVF9X4aWNc8q7HakwluoSPaNTgT/3z
dWqXBj8Ef1B7U6bBxh0KvnW+Frf/Kjhel6NFj8SFeaJDanZSeImnDsmOMb6y
AR36JoIzDjzUQcFOz56BKOi9kOGsGZyuCixOm5nBStlOnw6eHg/c2Q30cHjq
LOkr0aMx089uokEPgbRIWveSAWEMjZZQA+bCZ4IMBQa48qIdtrcacPZPV4n3
ggHOHC8jtIvpblbxRhi58xnx8p3Ni4ouI77tfbY1vtSIK5FXW32dTUjSypkd
jVgf668qPGqCbT4byASXd7sqPTpNOMikz+k2YfUWrT5rZYaX+JVHQ4sm5B87
I1wKNeObVJa4GZWHdGXjYjOaGNpSkRk1j44FHfnFjCghC8CMo83zNivPzfjY
pyggUWvG4HTAl+NeFBpYXNYUVEKXy4IECvXkWn+4D4W7Ueu3RZ+n8IyxyTGG
wohAOJrRTmETx5tCc2ppRbuCgmjd6Z7f6iks5ckMcZY0+tnj9VLgyT5ae45P
I5ATikbp2Ab/9CAavVx9aGyXbxv2EtJIK6e+goCGrabw5OwJGgEM7Uw/GnK3
/Iqxahomjh8Nu702Vqs3aDix5cyhofHbUC/up9HN2OoppnHCsagm9wUCPxaX
hEZW5PMtxesIujYVmqJ+pnFdWXYm152gvDqdSUyDX2aTtt+b4HPODxrSgry3
vEHQyeppoPHj75ba1z4k8OX6geCgver82zEEJQw9ObPOmiwvW1ESgX0zKyjB
8Zg1Y6pTBCqGTlUgwdWIyKqUIoJitlz7CIxVh6n4coLEUlYAgrDH/jcGLhII
bNgFCBbC3+G1SQjsuPoTTKgjcj0aCWSiFIYQwes7e647dBDYsLrVElzeA4/5
OwSKIbYjCcadtv56v4+gldWvhcA1Yba/e4BAzFQnuJ3gnlgj0w8TxHM+Ecxk
JlfOTxJYe7JCEUztlh4K0DFjAys8wbWl5SNDFIGU6z+C7rjBEWtCUMj1C0HC
BYz7zBHEcXEIDlRJdfbLBDs4PwnmGr1TBlcJ/vs3zeJfKjpm0Q==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[CompressedData["
1:eJwtlAtQVFUcxoFqIyhKIizHYHkIAgWCIgLSN0VGwiDxCoYByg0KGx4+kIQh
y5bnEhEVoBJjCA6mgsQ7xRWEQaZaQCIWxF3ksQ92997DI0aQtO650525c+fM
Pef//77f+c6xE2VEJJsYGRmFci/9LrpEla+priJq7kJ1v7AZg37KxNMa6f/j
HoytV10ezxrA47ETC06eg1jbW9FrbiZDqmbj56VRGY4aXL72PHsHMzlWTUEz
o8hs+KLa6+QYpOe2eCgcx5E+cHnPK7vkCPEpfvND1QSC+2Qt/dJJFHGjEfsp
ZN7JLFYL72FrXJL/dJgCLY1vBz2VoAT/d12JtfOSqpt+9xHRZZOvD7+PyhrP
D97ZPYNjKeVMLmZgY6IQ29nPQkvlhM4i/OnfV4L/nYWX6RWu5BwyrpmZNw7N
YZzKN51HZchYiUP5PNYjqcF5iI6nFOYGqbAyGip6IVaFyf60PdnLKqTz/lTo
cGodHvpODf+2wSzpOTV623bscnbRQMTrU8PG17LTrkOD5iBKQIOKHZLuSD8t
3OLLbq1u10LhKYzb36HFQ76fFm059vp81wX8RBoGQnwWYLMor86rWsBtYfPR
lPIF2FoKDF2PFvCWd+K1/c/qsOEV7VKWoMMb02GlVek6jNdZzaZ26uBHcY7o
4J458d4v5no8J687HGCmx7JM1Nsep4dy/eSn3Zl6OCgCiaxej4Ke32r3dejx
ZdEPie/q9GhcooYNSDJ2vZruZkA0z9eAvOizuvwUAyK5bpZiA1RNSbKhWgMa
uOryOgOWb0vMC+QGOE3RBga8um/+2/lnGOTwG26Amc3hG7a+DB48ooFh4GE8
X3MomUEIHxAGEbXtwqVvGAzyfhmkC8eDZtsZDKxu54gxcA2Jivn4LgMSTgUx
yH5+s3H9Pwz6qfwVrm6esvTmVhaBPB8W8Q87npjyY2EtpgZZFAwIgq1jWFRw
6fBOZNGwKSGk7AgLq1hfbgdZKA9te0kkYfH9LdqQhe31g6sXa1lYvt5SQxpY
ZLlKKnM7WWj448DintrYY9s0i3KKo4dF542+1xyXWPjz/FkE+U07PmlCoOLz
z0J4YPP6+CaCMv6AcLqOb6Q1Cgl8qVxu3t3UK3ur3Aks+P0iiC3Kd6jzJ+ii
8dpCENMtuBQTSeCzkz4EbGZfpUcKwYyj4FRFIMHB66Wq+iMEJdaTQw+4eRfF
4jhxDoE3n3eCE8Pd7YvlBGbc7JJUgrgAY8s/ThO0Udq5BNlnFMPaSwTFegqY
IOPlLOLdTJBIj18pwecJL37l3k6wU0EbErT8lSzdLSUwfd+CEsKva3K58wCB
gus+d4HAtlFwykFGUMjniyBLJmg9MEIQT3Fz6yz+bj7WOEHgSfFy6xbrWn4U
ThEI3Ao5B5yOFEFrqoJgiuKQE4R9JAk4M0PQzF8IBM5pTUKiJsindjQElZ8s
f/bnMueLl0Og8TofM/WYgN5l3G2G/wANyIlz
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{}, 
       StyleBox[
        LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
         0.9999999795918367, 0.9999999795918367}}], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], StripOnInput -> False]}, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.720853199819336*^9, 3.720853846567785*^9, 3.720868944648502*^9, 
   3.7208694785840206`*^9, 3.720869602942377*^9, 3.7208696621205206`*^9, 
   3.720870006202182*^9, 3.7208718791620655`*^9, 3.7208754488966675`*^9, 
   3.720876283117999*^9, 3.7208955130193405`*^9, {3.7208955887939262`*^9, 
   3.720895604187045*^9}, 3.720896016341078*^9, 
   3.7208970741830287`*^9},ExpressionUUID->"052c936d-2fe0-49f8-8fc9-\
f0009bf31e05"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GammaDistribution", " ", "for", " ", "Distribution", " ", "3"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.720897230733029*^9, 3.7208972545585556`*^9}, {
  3.720903934730227*^9, 
  3.720903935928071*^9}},ExpressionUUID->"8edff727-af3e-4cb5-9e4b-\
5e18ccd6d0fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot31", ",", "plot32", ",", " ", "plot33", ",", " ", "plot34"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7208532012953806`*^9, 3.7208532036280155`*^9}, {
  3.720896191123437*^9, 
  3.7208962288831263`*^9}},ExpressionUUID->"9c858c5b-5a1d-47d5-aaa5-\
4229dc9f95de"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
yoaC2985KCf5h4vRV3OGpOk1Uv2Ai8ui6zm1XRqpX8+F8UvLwpO9GqmewEXS
Q8/eZbaNsCD5iYsro3vb9XFspPoCF8Mu5Hf5fIiJU5KvuPDewj82g7kXbXoD
Fx03GsRMiW7EcZJuuPg9arWxzZtGqj9wsf/7gF4rUhsxjOQzLtq/F4xa2KmJ
6hFcZEbmNF10bEIJyW9chG58xft1qonqEzx41zRXXr3chGMk3/Hg2FUev+d9
E9UreJj8cF9Gp+omDCH5j4cU8YiwoXVNVL/goVuph74NE2dFJB/y8Mn7j//s
301Uz+BhZ5SjV7YeF0dIfuQhIHbi1BtduVTf4MFTcPzAJCMuzEi+5OFz3GS2
12gu1Tt40BXtHRfMjAtI/uRhn+nyURWTuVT/4MHH3WTKCyauPEk+5SHvvNHN
Jlsu1UN4mLN/1a2b4NLvN/DgqqOsXWzHpfoIDzi6bP/seVzkkXzLw/i+2waa
LeZSvYSHG9Ov7dRdycVBkn95sGR9TgxfzaX6CQ/2SwL5ozdxMYDkYx6M5IuO
127hUj2FhzKNcXPcNi5ySH7mIWidbtf67Vyqr/Bw0Xfr4N1M3O0n+ZqH/QmP
nhpe5VK9hYcPE9d+jr3GRT+Sv3mo2NrfOTCcS/UXHupf/exUl8JFFsnnPMjS
DK01TFy16THM/q787jg1h4t9JL/z4bkwJPxBIZfqM3zcG7fwvXExF6Yk3/Nx
JNjr1PgKLtVr+PCyzRswq4qLDJL/+SjvWTZpUB2X6jd89DncdE+niYs9hAd8
vDjvEL+bGbfpOXyMnfpLUsjlwoTwgQ8Pb5MOiTIu1Xf4CJ3/0XNTCxdphBd8
9J1wbsuAzjyq9/DxYEc73rpuPOwi/OBj3qXIMWt78qj+w8ebrqHLTg/nwZjw
hA/j5XcP/sfEZZsexEdRl3aK9pN59PssfOTlW0pYs3hUH2I+39vQ9OY8HtwJ
b/j4dWnlp59M3LXpRXzkeq+odt7CQ0/CH2Z9Z25ud9zKo/oRH1bmVqXrd/Ho
93P4WByaPU53D4/qSXxUvjBr93MfE3eET3wEhlx9be/Bo/oSH+P3rAn7zcSt
IeEVH4quWzboHOBRvYmPa9Mmrm5/m4f3hF98DPwi8P3xiEf1Jz4EF9L/DY/m
YTvhGR83Nevcgphxmx4lQPOMYO+Klzx0J3wTYMf19SevxvOoPiXAsYTEUW8S
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
UlgTnkuR9F+77BWdpFSflyJ+H6+V30OKWsJzKZ61y1kVw8zbptdLMdLo7Lca
ZuxHeC6F+h8r/LSRlOr3UtzzMb3Wr5cUYwjPpSj4uKOsQx8p1fOluGBj6six
lqKa8FyKgSvUy+9ASvV9Kcbi1934eVL4EJ5LEWaR3ZfFPKdN75eipaPFQr3F
UowmPJdCPq2zfUdnKdX/pTAboBizd6UUlYTnUjR7OT/ovFZK/QApEgp3XPu0
WUq/by6FOW/a9/AtUuoPSBHrPuV2p53MOgnPpTh7deoG+71S6hdIUTzngXjP
ASnKCc+luP/d8v00Tyn1D6QYsM9u5LfDUpwgPGfmUV7od/6klPoJUkzaELQm
yF8KC8JzKTwlQ+p416XUX2De58Yvux23pWARnkthMN29S887Uuo3yLCrvOVb
ZogUxwnPZfgj7r8xlFlnm/8gQ59tuj3rw6QYRnguw6UDL3+aP5FSP0KG9fE2
4ZUvpCghPJdh9chdz/zSpNSfkGGjWDH4MTM+RnguQ3Jj5RYhs+42v0IGzqa7
HeOLpRhCeC6Dq99HK06ZlPoXMoh6PzMo5kpRRHgug9+oKyu3Mutu8zNkeHiy
+mWBUoojhOcydB/74u3zT1Lqb8jA3xty9CuzD2aE5zKUO01+dfuXlPodMghf
DcvYaSxDAeG5DOeSRkceGy6j/gfz3y2eDS8nyeBJeC7DyK8/Ut7MklE/RAbb
FWnzdOfI6L8vkOH9Ls/JQxfJqD8iw92SFbr+zHvlEZ7LMCSmLiqSGbf5JTJ4
9btpefuIDAcJz5n3OTz986HjMuqfyPBo4/YlZwNkGEB4LsPQCLY6h3mPNj9F
hkK/zYdNI2XIITyXwcw0s2InM27zV2Twbb572Y95r/2E53IYX/dni9Nl1G9h
xskRnVuYcT/CcznOLeeesGbeo81/kSO3T6c5+cw4i/BcDv3ODw3rK2TUj5FD
o6fZNLJWhn2E53KcWBjvWc+8d5s/I8cZQ59tD43kMCU8l2PDQau8mp5y6tfI
4Va56MnARXJkEJ7L8eXI2RzlUjn1b+S4+/rVwJ+r5dhDeC5HwdiDR8zWyKmf
I8eOmbt6Dt8ghwnhOfOcOItnfXbKqb8jR9cNq+bb7JEjjfBcjl5418v/hJz6
PXL4Tz2yUuonxy7CczmG2bvdtD4vp/6PHD9tIr8t8Wf2ifBcDrvzjVHXLsup
HyTHC6Xu7vM35PTfk8ixSG+G0x9mnjZ/SA4f3/lZZk/kcCc8Z/Zv5tRk52Q5
9YvkCN41wdkrR46ehOdy+J28fXJbsZz6R3JEXgksS2PGySSc5Xiy1WVaT+Zz
bX6SHCsW/03JrJHDlfBcDmeV4mYkM0+bv6SA3gWvhbHM5wwJzxVwbVoSXch8
rs1vUsBh1o+lY37J8Z7wXIEhE1dv82XmafOfFOiitFtz/J8c2wnPFVhRHHr4
UHsF9aMUWGrrZhbMzNOd8FyBHibdqp2MFdSfUuDXqcg5n5l5kwjPFXhaGNxJ
NEBB/SoFTOTLl843V2Ar4bkCxzQOx9YOVVD/SgGOumTYeOa5BoTnCmTY792w
bbyC+lkKDA4XzPg1R4EEwnMFRl7NvDfPXkH9LQWk3y5ETligwGbCc2Z9jtsv
zl2koH6Xgukw/i72Wsesk/CceX5W1uiazQrqfzHPiWywst6mQDzhuQKO8qbp
fkcV1A9TYEnjwaFdzyrovx9S4HyDzX/F1xTUH1NgZtzrH9LbCugTnivgWT0v
3/2ugvplzLzLDj2MiFDgNeG5AlW6nZcsfaqg/pkCj5IW32WnKLCe8JzZP+HA
X/GpCuqnMeeZNMRRUqRAJ8JzJaLcDnevYyuov6bE2QiZTxBXgVjCcyVMnQbe
PS9QUL9NCY3ifDFLqIAL4bkS0Sf3j533R0H9NyUMV7yzkjHzdiA8V2JO13tv
rTsoqR+nhM4t+/2j+irxkvBcCcm5Y+8XDVRSf06J28d0x15ixmsIz5WIG/Wq
+au5kvp1SmxdYnT04mol2hGeK+Exec6yXOb/t/l3zPPXqX2SNykRQ3iuRK7t
wcVJ25TUz1Pi0KTJIUN3K7GK8FyJ5uLinsWHldTfU+Kr89j+NUeZ9zytXbAS
3q0Pf+SmK6nfpwRvDv/Qf2VKPCM8V2LRD/bMfrVK6v8pkX3E2UBYp8QKwnMl
7uw5GfJXoqR+oBK7ex9YV9pOhVbCcyWu+3eURpmpqD+oRMW+O3eihqsQTXiu
RHj70VsdR6ioX6iE3ZTScTYzVHAmPFdimvOpMf/Zqah/qMSxEPNSg2UqtBCe
K3HBeaqshRm3+YlK/M5e2LFhgwpPCM9V8B8Sn6vZqqL+ogqqgJPul11VWEp4
rsKYfssXxt5RUb9Rhc63dkubQ1VoJjxXQc+9MNoyQUX9RxUazP/q12epEEl4
rkK2kduL+mwV9SNVOPczb9zFHBWWEJ6rsDxsKZR5KupPqhA+c9PNmZUq/CI8
V6E7d6xpz3oV9StVEE2ccdZVxvwd4bkK37c7Nx5WqKh/qUKQ47W3vz6r4EB4
zqwnDJ96/VVRP1OFNT9a+xi0qvCD8FyFL/sW663upKb+pgop2RFrv3ZW4xHh
OfO8+y2fdhmoqd/JrCdcNvRwdzUWEZ6rIAvsOnaukZr6nyrU/9f048cQNb4R
nqsgtXW67zdJTf1QFR4uczzkYKdGKOE5cw5F27ptclJTf5TZj5OpIz6uUWMB
4bkKqZ3T9s5dr6Z+KXNOrnsltZvV+ELSlQqrLpm8er9FTf1TFe4Pll356KrG
fcJzFZL7Zj2evV9N/VQ1jjfP3+t+WI15hOdqiG7bXDhxTE39VTViJ4xi77yk
xifCczWiW26MT7iqpn4r8/uqSr1719S4S3iuhtnicav73VJT/1UN1+cFHmOZ
sR3huRoGtTXnRZFq6scyn2uK+Gv/WA014Tnz3IkPcsY/UVN/Vo2Krq+eb05Q
4w7hOfN3+reG26SrqV+rRkJEz4C1GWrMITxXI29K1cXoCjX1b9UYtzHs6cRK
NZSE52rc+uP/rh1XTf1cNfh9d4/4zlMjmPBcjebvoZozcjX1d9VIObM7evln
NWYRnqtxMMze5TkzbvN71WB9LW4X9k8NOeG5GtLQBdx8HQ31f9X4HODncNFA
gyDCczVGjLPtOrW7hvrBzP7tT/MxNNRgJuE5M39we/6qURrqD6sxJWbx0vm2
GkgJz9XQf/qqWMqM2/xiNc5pbj8WOmpwg/BcjQ2/Fw43WK2h/rEajTOfCa6t
0WA64bkGsp8+EwwPa6ifrIFJzN0Bp05oICY81+DOTuMeOWc11F/WYNbJ3Gk7
AjQIJDzXwGGlz1CTIA31mzXo5Bl9++MtDf4jPNdg3RTT3iPvaKj/rIH7mHbx
uo80EBKea7DG9t6s/s801I/WwPyeXrj5cw2uEZ4zf2c6ac6ZNxrqT2twpMeg
q6HMeCrhuQaj5q90MkjQUL9ag/oBHddEp2rAJzzX4NsMvwPmmRrqX2uw6ljw
6NXZGlwhPNcgvkbTflSehvrZGmwIbF96pUGDKYTnGvS1WHSpVaqh/rYGpRHN
a0bLNeASnmtwZtaTYadVGup3a9BlWPPaqWoNLhGea9D51HV2LTNu8781MH6y
yj9Go8EkwnPmPe5VPHjzW0P9cA00ty45VDdr0Eh4zqzLMuO1yx8N9ceZc1Hk
vv3DjC8SnmtwK03vxoFWDfXLNWDrTn9b/U+DCYTnGgzp4BD2kxm3+eef8D/L
0bWt
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1: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
pxMcWk9XI3jRjidpgRx0Ibytxt9bF9tVRXNofV2Nvo9ruDNjONhK+FsND92u
x/wyDq23q8GTxx7JkXAQS3hcjWEPzaWdlBxaf1djjW5lq7KPHHQkfK5Gzeqa
yNpfHFqPM+N92w0vmjPzIryuRsf2a+2O9q+m9Xk1Kt6nJ22cVY13hN/ViDgw
xc5qfzWt16sRzu4ozT1cjbaE51yM15ybVvCgmtbvXJyxaVO9OKca6wjPuZhn
GlcwmF1N63kuVo5Z5LxdWo1IwnMuhq9zWhr7q5rW91w8VHVgFzJjw3D9Bbno
daCn4SLmui31Phfvo4K/BJhysZrwnIvI/t2k7QZyaf3PBe+vUduqCVy8Ijzn
IqatfYbtfC7tB7i4kOrd8YAtF38Iz7kwGn58fCc7Lu0PuOj/fNKAaEculhOe
c8Gxq/UZvoZL+wUuLI28mmeu5+I54XkNjN742lm5c2n/UIPkpxl8aTgXPwjP
a3ClnYnj9Vwu7SdqcOheyI52BVw4EJ7XYFvrdluelnFpf1GDNx+mH532l4tg
wvMaiJ1vOC1rVUP7jRr4vm0qmdamBl8Jz2vgZRTZbkTXGtp/1GBCyoQtpj1r
sJjwvAYGV+teefapof1IDW7pOrmv71eDJ4TnNRiW3LfVSWbc0p8w15ls8XrP
hBp8JDyvgXtCc3GrKTW0X6nBgfuGpieZ+1hAeF6LraFxrhccamj/UovYQlvH
K8tq8JDwvBZGL5Yee36shvYztTiTNqrPaI8aaAjPaxET9zwy27OG9je12ObC
U+9+WoO5hOe1CPqd2Pf3yxra79TiwrNIX7+UGtwnPK/F/uq9v14x45b+pxZ5
doXvSpj7UhCe10J2oOjj9aIa2g/VQrDlZkMcM55FeF4L1oviTakGtbQ/qoWc
XcDZaFwLX8LzWsxa8+/TwR61tF+qw0Q7G689prWQEJ7XwTYgxWksamn/VIc3
LiOub1hcC2vC8zrwy71bRa2upf1UHZ6GWkZ921qLm4TnzPVeZz008aql/VUd
1qWLvX6HMvMkPK9D99j7MyTPamm/VYc52wLPe7ypxVTC8zp8d3s7Nyy5lvZf
dbDudWbU8dRaXCM8r8PSA8blz6praT9Wh22rPl8PbqxFA5GrOlw0G+Q+3aCO
9md1GProW+Qq0zpMIjyvw2N25vm3/etov1aP15V9d/2eUYfLhOf1uFHOPvIA
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
GiXNh5Q4OWfP4r4iJXYTnitheU8Q782MW/IiJZaOaPrXR6FEd8JzJfr7f+xi
pFTS/EiJEVGxaQqdEslkOzP3s9l7dvePSponMfOdem+2T7MSOwnPlRiwblha
5nclzZdUiJ7QOXXrHyW6EZ6rYLXnWJaPgYrmTSoMGL1MIWfel0h4roLnq39G
v9qpaP6kQpnZ+I9vmL9zITxXQfS4Ic9hpIrmUSqMXDv4y/WJKnQlPFdheaVg
UI2ViuZTKrgftZhaaKNCPOG5Ch2u3m273VZF8ypmPv3XzX1qp8I2wnMV9t7L
jzFdpaL5lQrdLDQPilarYER4rsLKQNmRQuZ9LXmWCj1KbNvLT6rwgfBchahh
da53z6tovqWCyY4MtyUBKmwhPFdhxjCPBZZPVTTvUiHN4Y6vx3MVOhGeqxge
fRA9eKmi+ZcKt99ODvsaqUIM4TlzfeW4svoYFc3DVHj0RuJ4PlNF//8Qsw5z
AmdtzlfRfEyF4bY/OU6FzH0TnqtQ8CrBvLhKRfMyFaaEP/dWc1R4T3iuQqDL
vQ3361Q0P2PWP2HOk33M7zcQnqtwoub1/j5iFc3TmOf465hxWSs12hGeqzH2
kThwYjs1zdfU6CFy2WhrrEYU4bka9cZ/1v5mXlvyNjX8VA2LzPuo4Ux4rkaa
VVVgyjA1zd/U4IY8WH1ylBptCM/VeCpQjrUbo6Z5nBqtZj6bMMhSjTeE52q4
73ESVzK/b8nn1JjbvPERH2o4EZ6r4Zk/ZZRwgZrmdWooY7N9m7cx1yE8Z65z
c6Ov9241ze/UGPko2iDgsBqvCc/VsCp4VOR7QU3zPDU+8LLLjO6psYbwXI3K
kXOn8B6qab6nxlDZkt+LQ9QwOKe/YTXMM4TSfuFqmvepsfzLv049X6sRTniu
hrVPp95F79U0/2PmP9Bt6pskNVYRnqvxqVX4+gHpapoHMutyLK58XKkafwnP
1TAZo45fx1bTfFCNvpckBcaVaoQRnqvRb/ODMfMa1TQvZNZFvq9DkEyNFYTn
aiScHj19rVxN80M1vgS0v3tNocZvwnM1PK4EnXioVtM8kVknQ4unp1pr8ILw
XIOv74O6lfbV0HxRg5O8lOWnhmqwjPBcA79nfkGxwzQ0b9Tgz5iNRiOGa/CT
8FyDiTcHOFuO19D8UYMLYy90O8i8PiM816Cpn7PDYUsNzSM18BbM2NTGWoP/
CM81GGJtseP+eg3NJzV4+Mnm+5ANGnwnPNdAdHbw+qqtGppXauDMKfu9zUWD
EMJzDVpvayv8vkdD80vm32+ZOPXYq8FSwnMNTMQXr9ed1NA8U4On5hve3GRe
mwnPNagSvbA/6KWh+aYGl04c69o9gHkf4bkGBps8XB2faWjeqcHYdcM+n36n
gT3huQZ2/xlOfJOmofmnBqmd54xJzNHgC+G5BuaWJgWTSzU0D9XAXxaZc6dc
g0DCcw3WXAsd6FmpofmoBgsCU515Sg0WEZ5rcOPcTmHhFw3NSzVYz4vb4f5V
g09ErjSY2iOl7YVvGpqfalDd5WTP2rZaBBCea5B56MlHW2MtzVO1uGx1Jcyn
vxYLCc+10Dh8lbQaoKX5qhZSs7H1YVZaNBGea5GQ9P67n7WW5q1aHC8I+XXV
QYtHhOdasCC0nbVMS/NXZjz07dV/a7SwJTzX4m4T++kwJy3NY7W4JeirebBN
Cy3huRbe2hv/9XfR0nxWi8MpL4wGMmN/wnMt0g1uB77ZoaV5rRYZs8b4PNit
xTzCcy1iHO66C/ZraX6rxYfO4917uWuhJjzXovn61ykWp7Q0z9VCsCv2z+Yb
WjwgPNei/d6Jex490dJ8V4vbBQmhulAt5hCea9Ep741gcbiW5r1aeBqMC3sa
pYWS8FwLV25et0XpWpr/Mn9vMC/hU54W9wjPtbi2MWbT5jotzYO1cIwojOkn
1WI24Tnz7z/3sSfKtTQf1mLWmAGxp5ixnPBci35T8tv8U2lpXqzFYtX14Elq
Le4QnmvhtKBB2r6NjubHzP0t6mEa21cHG8JzHYa94EqqBulonqyDtf0NQ/lY
HaSE5zpc9KpfVGKlo/myDkeN/R6/naXDbcJzHbpHf7JyWaCjebMOW033DB72
nw4zCM91OLVqXGPyKh3Nn3VYVpLqMGG1DmLCcx1yHK3mPd6ko3k087mrHsUJ
N+twi/Bchw6dNzruddHRfFqHk9+223EO6GBFeM7ch45rUXZMR/NqHebKXha+
vaSDkPBchwt9pOaFl3U0v9aBF73i9bg7OngTnusQvsO1Q/YjHc2zdWja9Fk9
4IkO0wjPmevui7reJUhH823mPt32/swM1oFPeK7D+Hu939S+1NG8W4f1AV9t
nGJ1uE54rsNg/xth/CQdzb916Lc+tHRzsg5TCM91cN3qxTqQr6N5uA53orpc
qhYz8yQ81yFr9B/7yUodzcd1yPsiTpIx46uE5zq06yi8FPBRR/NyHVZcZu+5
91mHyYTnOtTdkYY0/NTR/LwJ/wNXz9Ed
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         PointBox[CompressedData["
1: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
md8lYP4zW+Ozb0U0pPwkfcN/9cfLSG3wvwQ4D864vitZxHPKUwG2Hs6pa9+L
zA8TMDb/SKObH0T2/SVyvs36msSkicwfI7qeP/blkXQRJpS3Apw+H3UyyRSZ
XyZgx5X0rOk5Ip5R/hJOnq1vt5XUBv9MQMqc8lWNc0UsojwmOngpz7hBocj8
NMLhq/m/BkgijCmfCcdGRkXal4vMXyO6PcLyw+FqEWGU1wJaHeu5sNknkflt
pE/3GR+76YsIF8pvAasiEz6VfheZ/yZAVU/os+mXiLqU5yJCelrerfgnMj9O
xE/HwQFNjSSEUp6LiKsdzdWpLzF/TsTfZkPnbzSRMJ/yXIRN//nW5xpKzK8T
4dfX1yqU1LUpz0XYy2Jmf28iMf9OxImGHmcTWksIoTwnrzfb3qpdO4n5eUS3
J8++6UJqZ8pzEf5Ro4/1bC8xf0/E9qwRI96T2ojO/yK67C2YmGsuMb+PXE/V
jO/uFhKCKc+JDijvwJfUBv+PvL7Kb8wkSwlzKM/Jc8ywHj3aSmJ+ILnvSQPP
rO0use+riZjMt14S1lti/iDhzs399p59JTygPCc6EeNV79QAifmFIr4OzX+a
T2onynMRW0y+/HdroMT8QxGXPaKGuAyS8JvynOyraCejcTYS8xNFKGtdeH9u
iIQgynMRv/9MTLYbKjF/UYRzfZuwL6SeSXlOzm9FqU/5MIn5jSJqml2YGDJc
wk/Kc3K+c7e7tIfE/EcRtusfHWgwWsJdynMJZfd+3W1IaoMfSY6bMQu/HSRM
pzyXsH3XkOsHHCXmT0rIjhnh+naChO+U5+Q+Wi/9oJskMb9SgtZj6z/3yRJu
U55LuOBSkr/dSWL+pYSIoUNHT5ktYSrlOTnO3PNhPedLzM+U4Nt07pHXpP5K
eS7h/ljjENeFEvM3JSwxHiQ/tFTCTcpzCcc2jtrxhNQGv1NCWo/5S/uskDCZ
8lxC4JFVT7FSYv4nuS+/Nzc2XiXhC+W5BLMNnr8nkdrgh0poVHNroUhqw/cT
JbyS55mvWSMxf1RCzTLn2K1rJUykPJdQmZ8x++h6ifml5LoLhnk02ExeR3ku
oXWHNtUrSG3wT8m6VA/NNSXn6U95Tp5LrG7X9O0S81MlLAu3bD1sp4TxlOcS
+J6RvtvdJeavSliXFfvYg1xXNeW5hBb/GtpsIddl8FslbLwzu0ncEQnXKM8l
jN34w8z/uMT8VyUK+FDfFefI/1OeK1EP9+uYkus2+LFK0v+ce9b6ArkuynMl
dni+6V2b3AeDP6uEqZP91Y3XJLJv9ResRJv9aWG+pDb4teT1jTe+uhIowYHy
XImmdZq9WnxDYv6tEp6f9vdpeVOCjvJciYFLrw0SH0jMz1WiVresKK9gCZcp
z5UI+WW0fOkTifm7Sjz/sexag+cSRlOeK/G76gm3Nkpifq8SfrbZue9jyTqk
PFcirVX/9P2vJeb/KrFmVaf4A2/IOqM8V6L3sarndm8l5gcrsW9MQsfhyRL7
PqoS2f82lke/k5g/rMS/OheCG5LnpqY8V2LOhrqOQWkS84uVuHH3jtuxj2Td
U54rYfM5sPuCdIn5x0rUbaGMeZkhwZ7yXIkMs7kd12ZJzE9WYrpdr4ireRKU
lOdKLLE/Y9SyUGL+shKNDrSpuV8k4RzluRJjm8cO8yTrxOA3K3Hi2X2rSWUS
hlOeq3C7We0ekQqJ+c8qPOiSmTWFkyBSnqvwbffAGSmkNvjRKvSc92pRN7LO
zlCeq+D5/dEWI6XE/GlyvAbpC5QqCcMoz1W4e29JO0utxPxqFWqW9zqsJeuS
pzxX4fK7pHSzSon51yosGz1zSSCpT1Gek9cntFvv+ElifrYKaeM3zv+PrGNb
ynMVdl23qhvxXWL+tgqt4xfLrX9IUFCeqxCdlLzE+afE/G4VzDqsL7L5LeEE
5bkKh5MzFTF/JOZ/q1Cek9bnv38SbCjPVQg8VDTvWy0l88NVaJbwedKHekr2
/WMVis2yD39rpGT+OLkf/QZH/yC1N+W5CkUWzsVRTZTML1fhn+JWh8ZkHw2i
PFdh/KGaD0bmSuafq1C/19o6tci+KqU8V+FYkMANtVAyP12FoIdbTuy0VOIY
vVwVnAeMmmzZVcn8dRWm98gzm9ZbiQGU5yr4+1aPv9Zfyfx2NbzrlAw6MFiJ
YspzNQb3PfW6j52S+e9qSK6dLic7KOFFea5GaJe776InK5kfr8azndMsg+cq
0Y/yXI3mNecbOJB9afDn1RgqPnJ/6KJEIeW5GhO33Rs1iOxTg1+vhu1omxmm
S5U4THmuxpyi5SebLVcy/14Nt3OTs+QrlOhDea7GsH2yLvw6JfPz1ZjUcwD/
3VWJfMpzNaz7LvWJ3KBk/r4adbccW+dB9v1BynM10t6+mVaxXcn8fjWsgob0
vrJDCWvKczUanhlx3Z7ogsH/V8P32v7osr1K5FKeq+HhsXLhhn1KlgeosXHT
zMYTjyjZ983VqFSv7zvGS8nyATUOxq+bo/FRoifluRqxhbqJk04oWV6gxth2
qqYPSZ1Nea6G6Gt6dyLRGUN+oEbNnZqmm/2IDlKeqzFzQ1rnp0RnDHmCGp78
9VO1byrRnfJcjTfb1qjq31KyfEENk+Qp49yDlMikPFfjjOOV9VcfKFneoMG1
McMiBwcrsYfyXAPRxdy80SMlyx80sGp7NWgkqa0ozzUYKD9SYPtYyfIIDVpe
6vDO5IUS6ZTnGnQyG9zBNErJ8gkNose19/0Uq8QuynMNLP5549wrJcsryPu9
7m/2I3UXynMNrAdMsFz8TsnyCw0271t3yPo90WXKcw0UbWO2qD4oWZ6hgfvc
nBjlRyXcKc81+NHL429+jpLlGxrczZtivbRACQvKcw3yI4YlXihRsrxDA88u
E9JOlSmRSnmuQeyBue+DiI4a8g8N1jyRv8kXCacozzVQ717yXVuhZHmIBg5J
vSsdia4a/r5AA58bM0aHfVGyfESDc62npmwluppCeU7Ob6zb3YR6KpaXaDBu
nrbvWhMV3CjPyf27Yu5e2ljF8hMNTnWzVa5tpUIHynMNdnRx8ktvo2J5igY9
jUze/iA6nEx5rsHqLX6dOhMdNuQrGjQxe90lhdRbKc+16Hqk/q7TPVQsb9HC
qR16bu2pQnvKcy2WBxza2aC/iuUvWjT3CYkcM0iFJMpzLY4fzk/pZadieYwW
ix4Pc0ofpcJmynMtOnz78sx8rIrlM1o0cRi7+/I4orOU51qEtTj2cc14Fctr
tFhite6W3QQVEinPtchd3t3ffpKK5TdaZHz4Kp4lHNhIea7FmrGxN6pmqFie
o0U9U3PP/jNVaEN5rsWsBa+vFs1RsXxHi8NPZ28/P0+FeMpzLSy/OtvsW6Bi
eY8Wu7q7Jy/bqoIr5Tm5XvPtN29sU7H8R4u7BcOfOe1SoRXluRaK7G8fNu1R
sTxIi/Tcwy/W7FexvyfRIrri8HnPwyqWD2lhbP+kjqmXCusoz7VIMT32Kc9H
xfIiLSSvhJ0XT6jQkvKc3K/Lo9/PPKdi+ZEW48X723aeVyGWLmfyeQuDdkf7
qliepEWaY76DA+HSGspzLdy+xfd96K9i+VI5ZJYDJbsbKjSnPC9H6M2pvZbe
UrG8qRw1z3/I74YRLlKel4N/8m+zzTMVy5/K0dj2jJXXcxVWUZ6Xo2Gyi+T6
UsXyqHIcbt+vVirhWFPK83Kc/BzrfTZBxfKpcigW91jQIUWFSMrzcqQ2jXjw
M03F8qpynDr3r9eTTBVWUJ6Xo9WdU7uM8lUsvyrHs24vL/0idWPK83J87vpy
LV+kYnlWOYq3x/VoUapCBOV5OX6vb+J1WqNi+VY5nJbFqS9Xkz6C8pxcz3db
881fVCzvKsf37qc3Vv9VoSHlOTm/L23b3yJcNORf5dg/Y0SnP3XUeE55Xo72
Gdwxs6ZqloeVIyBv+VWdlZr9/VA5btcuXVO3h5rlY+XIeJTp/oVwz4TyvBxn
5vVau9dRzfIycn2VdzKDCfeeUZ6X4+OFK2XJU9QsPyvHr6QlL5NnqLGI8rwc
Rjez6/ear2Z5WjnW97AxubRcDWPKcx1UCw/O/E64aMjXdGh399irqWvUCKM8
1yE89qq6Yq2a5W06zGu65V3T9Wq4UJ7rsKhTnWOhG9Usf9Nhqd3XYLgTjlKe
6zDVr+/K14SjhjxOB23z150T95G+gPJch+2Xd3mMIlw15HM6FBQKV28dU2M+
5bkOrTx+zW9COGvI63S4Oe/dH8sratSmPNdhT72UoTNIbcjvdBg2wvLT1Wtq
hFCe6+DuYGK8J0DN8jwd0nbEPHgUrIYz5bkOXrOHn1I/UrN8T4cOT82P/nqs
htEB/QXrsDGn3YWp0WqW9+nwY1Z4imucGsGU5zoUC2NsPBLULP/T4Z7Os8Dn
PelLKM91cJpkP/lphprlgTp0Cw458aBYjb+U5zo89r6U5yZTs3xQh89L6pRU
kfoB5Tl5/dvdC1ZwapYX6rCvJOx8DamdKM91KH03vCKYV7P8UIfLs+o8dFar
8ZvyXIfW6gtzCgnnDXmiDro8T799lWoEUZ5X4OuHM2dXflKzfLECr32m/av9
mfQNlOcV+Dbpp9sBUhvyxgrsqyxcm/pTjZ+U5xU40cyx/bK/apY/VmDZRIeA
h0aEo5TnFXD99CcwrZ6G5ZEVWPLFZ2l4Sw2mU55XIHix075i0jcY8skKJKUX
OLVtq8F3yvMKhFdvGG7TU8Pyygrs3x2wf35vDW5Tnlfgb4/Wdu6kjzDklxWI
kUZ1yyP1VMrzCqT5dR4zeJCG5ZkVGFB3u6WG1F8pzytwVRZetctOw/LNCviG
Ny3yGKXBTcrzClwwanS2ZJyG5Z0VSPSdGhs2UYPJlOcV6DP0VZ/f0zQs/6yA
f487U285afCF8rwCkY3qTuvlrGF5aAXO7/zbsHSeBoGU5xVoOL3RZ1vStxjy
0Qoc9MsLsFiowUTK8wpsfFOlfrJYw/JScr7fPmgGrtKghspVBWYWT/UetFrD
8tMKtMoeeGjMGg38Kc8rcNq7a8cB6zUsT61Eybry3jM2ajCe8rwSfR4+mvWU
9EGGfLUS10wj7G65aVBNeV6J6Kj+CcN2aljeWgkLx227rUmfdI3yvBI/V1c2
aeipYflrJT6Mimhed58GYynPKxH8pMLn0X4Ny2Mr8USeZh53QINKyvNKdBc2
T9l+XMPy2Up0aPGq8wlvDfwozyvRdv7CDra+GpbXViL2wY5nuiukj6I8r4R3
s4uuuwM0LL+thEPLgV1r3dZAR3lOfp/0rGXaXQ3Lcyux13j7x/AIDS5Tnlfi
24QOvX+RPsuQ71ZiX+seDr/SNBhNeV6Jqx3rzZtaoGF5byV0BRMfPSF9lZby
vBIta3lniaQ25L+V6HGs5eqbkga+lOeV8Jvk/XMi6bMMeXAlQlbkDF/4W4NR
lOeVCFXdLlL+1bB8uBKHWqiGNTTSQk15XgmrZ5bvS0y1LC+uRJB7qs7XSYsL
lOeV+O2XOLzRfC3LjyuxaHpsnfNLtbCnPK9CaN7LkN2uWpYnV6FffM9OPfdo
oaQ8r0KmS+3TY0ltyJerYL/nae0JnlqcozyvQnHB6KAB3lqWN1dhVdsmOxx8
tBhOeV6FAVcjTxw/rWX5cxWS7o/4mkdqkfK8Cs5Jr+JaX9WyPLoKDxu/Ptky
VoszlOdV8Hbdu/0QqQ35dBVK95+7Py1Zi2GU51XI6LjyzZ33WpZXVyHOvNHJ
jdla8JTnVWi4oeIA5FqWX1fh5a1jNusVWpyiPK+CIumIvCnpiwx5Njm+48vV
TUlfZEt5XoU39Rp/Xt64nOXbVbBYP+RC43akD6E8r8Lb7Q9fHO1UzvLuKmx7
PaOJtns5TlCeV6FvlV+Bac9yln+T6/fdq5k2qBw2lOdVqAkIyto5tZzl4VUQ
FW025uwjfRblOXm/zuNp1plylo9XoU2TK1cmPymHN+V5FT5PnxNx7m05y8vJ
/V6fOcebcHkQ5XkV+tccCcuvVcHy82r8D5Vd+00=
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[CompressedData["
1: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
ssbmGYcZjyM8N0L66aDkJzNuys/r8H/0Z+HU
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{}, 
       StyleBox[
        LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
         0.9999999795918367, 0.9999999795918367}}], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], StripOnInput -> False]}, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"WeibullDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7208532040633354`*^9, 3.720853848943464*^9, 
  3.7208689446797514`*^9, 3.720869478630045*^9, 3.7208696030004177`*^9, 
  3.720869662171544*^9, 3.7208700062472134`*^9, 3.72087187919908*^9, 
  3.7208754489457035`*^9, 3.720876283165033*^9, 3.720896229583619*^9, 
  3.720897077509367*^9},ExpressionUUID->"f12cb58a-c089-4f4e-805b-\
674a0d4277e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"NormalDistribution", " ", "for", " ", "Distribution", " ", "4"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7208972653471794`*^9, 3.7208972686294875`*^9}, {
  3.720903938777086*^9, 
  3.7209039403441925`*^9}},ExpressionUUID->"50ce6296-8bca-4c50-b1d2-\
558e087f2ead"],

Cell[CellGroupData[{

Cell[BoxData["plot41"], "Input",
 CellChangeTimes->{{3.7208532072666006`*^9, 3.720853208570527*^9}, {
   3.7208539507909007`*^9, 3.720853950926984*^9}, 
   3.720896348002924*^9},ExpressionUUID->"79f1d92c-5b2c-40d6-957a-\
d38e135b8236"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], 
        LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
         0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJwtm3dczV8Yx41kj4wKmT+zgRSR9EFmskIRkr1HRlRkZlPICMlKKFSioTS1
163butXt7j1Kku33vafTP/d16t6zvuc87+f5fG7DNu5z3tKuTZs2svZt2uhe
pW8bK1mfF+P3y8bSRRuXIlP44Wdgv5W07YGKwA2dGja54KffzqRDN7fj5+p9
X+cv9qB/3w/j3QEb+u3eAt++b+bxfQ4hsUvNYnZ3T/r+o+gfUlzqUXAA3vJR
lp0ij6Fll+Jq2/Ze9PMnIdrbSWic6wW7+iVX7+w9DXOrNYk5x47gGOnvLC7v
6Pva4Y83khZ0a2d2/hw+2XMr3LN98Jv0fwGNP+oH6Nkeg11sjten0EvQPDA9
HmN/EsfIeFdglef3pDD8DJIG+yuXxV+D/mn53+/SS/hLxg9E7/CYjIKpV/Ew
c2jUge3XYZ1wMSw58CrsyXxuoPlT8L7Ghqvg/iADYlcH83tbEq7Bj8wvCAr5
UWtbpp/B4+tG6J+6hWkv25+KGnAdn8h8b+NRicC89MF1uG+epusR5bHCQwtn
3cBf0t1dHBkn+7G54SYeBpMfZDn3Ec54HwR7sp572LQ24ffqbrfALWpZLgy7
j2lXXRWvZ9yCH1nfA+xNEr/u53oLg/VceljEhGDI+/beU1tu4RNZ70MsLnrY
Wa/vHbhPJR3Cyf3n7/pXd/CPrP8Rfr193V28OwRLbC7O9BA/gpeeXU5a+0cI
JfvxGBd7HCp9O/QRtMvimR4fo9zja7L3ikcA2Z8naLOx+sfNno8RsFv662Xj
EySNHzdmQf1j1JP9eooI/UCnu12fYPx5w+qilqco6+peetTrCU6Q/XuG+8NT
huZ6P0Hx4zkfmv48w65/I5P6Fj3BELKfYbjVOJB/4dJT7GN2y1jvOZYsPTPh
0oOnSCH7+xzcdUvWvI55ip6VT/dP7xIOR4/v6UNPPsN6st/h4BxYb9Fc8wxv
dcvt9QKOhVoPi6jn+Ef2/wU8LyT8MXgRjiW67gxfYsK6XlvKDF4glDyOlzg9
vtxi7L9X0Oq22+QV+s/u4ffcNAIg2/kKYSdOzlkaFIEAZvdKhkdgU9XFlC1P
I1BPnlcEDLt139U2JQLj1wakN4+JxBP/BwXenAicIM8vEltCH03v3eM1ipne
Box/jbmsjBemJa8xhDzP13ggPK533OIN9l1XH8OkN5hROXjaO9c3SCHP9w36
2kXrj9W8Qc9IE7fN094io9ihX/y3t1hPnvdb2Aw7ox/eLwquzOFhHilMLCs7
2gyLos8/Cm93uJxyXRSFcGb3Kp9GoWNY7o+jrCh6HqKQ3DZhmc/PKLT8YR+V
j4rGno2NHkEjo+n5iMagkA0We+yiMe+y7gBEw6EpL8NpYTQ9L9GYmGDTss4r
GneMyYKwXNsxgtc2hp6fGJzbNO3H8EMxkJLpxaD9Iqxp8oqh5ykGOcklBXs5
MbCx0v28Q0CH1ZGdh7+j5+sdfr7eGNhx7DucT81jTtA7jOoa+mC2/B09b+/Q
7V+bHKsxsahknv6qqbFwudBp6CS/9/T8xeLPgei9tkHvMbpG1yHzvvjTHf80
vafnMRYX3G3rv/jE4ch23QN4jx36Zj8vfY+j5/M9Bne3MGo3Px7ZzWOYJ/we
0/6LvnxxYTw9rx/g428zu9A3HkZnyATh6fPlbqNfPD2/HzBo9fxNzbfisU03
u5wPuOVfM6l3Rjw9z3HI0N8429kiAXEh2vCshXEYbBXRjxueQM93HBRTHxi+
HpWIjma6BcehbaOBzdbpifS8x6OmX1jLFN9EuMaTA4NKZ89XWRGJ9PzHY82L
2Q8WfUxEuG657Hj8LRlkOT01kd6HBMxV3i2IKEtEi667VQlQLF5wt3nuR3o/
EnDD1g5jl3/EPN3xr0nAktVthl6M+EjvCzNOwvmO132TcEd3fN0TEXMqSXL7
YxK9P4lwuGlTIG9IgtRH90ASsW9ByCX7bsn0Pn3E/dS/ahOTZNh00h3wj0j6
7bH+58Rker+YcTY3b3OxS8b5Ww7MCfyIqYmbF3Fakul9S0LYzy1NTas+oXI4
ecC4WWB82mv/J3r/kvBowIPgkUGfMFoX/dVJ6LYuocOu6E/0PiZjpktAxc2U
Tziiux77k9F1XOlLvV+f6P1MRtofi7EWY1OQrXu6TcnwmvGsS9ylFHpfmX4u
Bj7dFJ4Co1XkQuJiubZdZ7NUen8/wWuQn3XazFRs023fj09IWP0h8v2sVHqf
U3C7/clx286lIk43vWMpaFo9TmyQlkrvdwrmN93YoSxIBYNz5icV3opVxnr/
pdH7norC81zfeWZpiMhayNzoVLCHHXDdbp5G738qEnffUl4cl4blzG3sfSYV
Aac6H7X1TaPxIBV958amTA5Owy8dfTJTMaW/iU1xRhqND6nYevBNwABuGp4O
0F2INPTgbTv0QJZG40Uavo/MKmj4koaFfN0DTkPX0I5Bvi1pNH6k4UjfDjPy
/6ahKVw3wTQsu+e9I6tXOo0naXCX7Czt1S8d93Wzy0tDqkX/0Z2N02l8YcZ9
1LPCe2U6HJjDtaBbOv40L7qz7EA6jTfpSHD0XRZyMB3KX7oFp0M/Ye7BCWfS
afxJx0jHy9uXFaTjZjq5wNgfFTDEsjidxqN0hDW+9KxkpWOabrkl6Xi9f6bH
g4p0Gp/SYSr8of9QmQ6hrrveGTBq7GPZ5VIGjVcZuNW08+v8qgxc1oWj5RlI
95feWFWTQeNXBg6ZHil5LciAFUkfMjD4wOF2sxQZNJ5lwNB3mMeqhgzU6MJB
ZQaEnd0HiQdn0viWgXFnBi8Ln5eJM7rrbJyJW1GpaU3OmTTeZeLhSr13SyMy
Yaa7jm6Z6HIgruWwOpPGv0yw03rt0W/JRBlJLzLRX+h0ZF2XzzQeZsLwXoLe
+lGf4au7DnXMuHvdC/QXf6bxMRNrd29sfO7yGf/pjvPgz/A51Y6/NeIzjZef
Ec3d5use8xn5uuPn8Rnfto98Etkzi8bPzxjhsDE5p28WDuoe7+PPOH/tbvZh
jywaTz/DOOua3s6dWRio2z7hZ1y6srlo+pEsGl+z8KdqbcOFE1nI0E1vRBZG
BXd2t12QTeNtFlZMsL+htzobu7bqfrJgKvtz4972bBp/s9BtbUhKSkQ2+jDJ
ExNh8TT7n4lFejaNx1m42WuvR8LXbHxs0h3oLDy28xUk/8mm8TkbOzZcnT1K
PwebEnUdZkMbv+1m8pIcGq+zsVHpU7F8bQ66ntIFqGxcLRv18smDHBq/s+F4
+8j07NAcvJunuyDZuGHIWzHlQw6N59lwWhYuZKflYI0uu9My80pYv9NGlkPj
ew5udXC6PfFHDtqXM9fNMgfLDYrnOVnk0nifg+Y/9jdcV+ciQnecD+Rg2fzn
u+dW5NL4n4N9htH3G2tysZzgMQcV/9XG2/JyKQ+Yefruf3vXMA+/dI+jOQdD
4n97CgflUT7kImRJx/zxlnl4qluuTS6295jSpt3lPMqLXITaro+bHZyHhbru
jubijOdl+2VMu5UfuZi4waSI+zwPTQQPufiruGWdHZdHeZKLeZ24W8Z+ysN9
XXj/lYuyx5ZtRnLzKF/y4NC3Ju6khnnVhefpebgSnTtmlX0+5U0euiWdVW/b
nA+lLrz65aHWZPj1js/yKX/ysDLC9VNacT5ukvCXh8qJUVN+9S6gPMpD4dlq
c0O7AkzThZd2+dA+iuto5VBA+ZQP38GJXtlrCiDUXV+HfCwyKhwwYH0B5VU+
WF+m7uGeLsBl3fXwz4dZ3mBTw7cFlF/58N4+t2y7tABW5PjlI6LwZ/Qyg0LK
s3z4C9eHWAwtRI3u8XYqwIlOT1NvjymkfCvA8+rkF/LZhTij274FBagadcfb
1KmQ8q4At0rTXTxuF8JMN73LBdjX9vX38zGFlH8FON9uWmfDjEKUFZAfLHXw
9ZgtKKQ8LMCUz/7D/RoK4XtTF1ALYTvgyb89g4soHwtRVfTujsOEIvznpjvQ
hTgbVbto8qQiystCbHV9crzX8iLkk/KqEEdYhQunuBVRfjL9xsdZ/2LaB3Xh
tLQQaRdOsC4cLqI8LcT3jNe+7leLMFAXrvoWIfF51Piqh0WUr0U42Sfm07S3
RcjQhQOXIjx7lRYSG11EeVsE0cDgoQ8SirCLlF9FmBw7dsLj5CLK3yI8qDr/
p6R3Mfq0IxcOb96q++gPLaY8LsLRNYPMHacW46PuuAwoxrUq24ec7cWUz8X4
/iwn8MCuYmzSPY61xTg6/pXw1tNiyutiTBxe1PZoZDG6kvKsGKfFgfnLMosp
v4sx1zrqP3FFMd7puqsvxlJPk5t/Woopz0vQNzhIIJ5cgtfkvpcg8DTr+0bX
Esr3EkxYPyhwwYkStCX3vwT7TX9oO54tobxn/j5Tqlz8ugQrSTwoQeLEr0EL
okoo/0vgW6gYp3xfgpckPpTAr4obdTunhOYDJYhVl18ezy/BHxIvSpDz7dxK
K3EJzQ9KsNP72oCJkhIsI/GjBIPBc8tXldB8oQTPnPVXT2vLQhiJJyUwOXF5
TnMvFs0fSnDtuAF3QR8WfpD4UgLDkb9cNxizaD7Bgmhk2KRqMxYWkXjDwu6a
D98rLVg0v2ChR1LLrN5g4TGJPywMV/gPGbubRfMNFsNRx55TfVloJvGIhaSg
eSMPnmbR/IOFyqsujn6RLCwg8YmFc44HV8Ulsmg+woItq2+bQbkshJB4xcIx
fo8A9xIWzU9YODlqoHN3NguNJH4x8+l/LsSjlkXzFRZUjZPmrxWyMIfEMxay
LC88GCNn0fyFBYOH/Tq/V7MQTOIb83fVvlDTTqU0nylF6tnTCWN7lEJN4l0p
rAuWfX/Xt5TmN6VoMJ5rUmxYipkk/pWi4lv/nb0ml9J8pxTVM7e/uelYilsk
HpZi7prO65dvKqX5TymGz/eLnnOuFHISH0sxVOmlfRFaSvOhUly2/vZa/rEU
00m8LEWO5VXlFH4pzY9K8V3zkjWiqRTXSfwsxb17Y/uunVlG86VS9L5+Y47b
ijKISTwtRWSnNV+dVpfR/KkUQzpAsdanDFNJfC3DlJMODUeultF8qgx/4wPS
bzHtqyTelmHAPdH3jnfLaH5VhsQlxx0jHpaBT+JvGdxrXRMeFpbRfKsMY/5k
lsz9XoZJJB4zr0aYGt+HTfMvZl6Lv706YsjGRRKfy5CBxAVTjNg0HyvDv5Vd
jySOZqOOxOsyPJnQMneRFZvmZ2Uw4rr5jXNgw5LE7zJsKdPazFrOpvlaGX6c
nHDzyGo2/Ek8L8PYCeuert7IpvlbGfx+LjcxPcJGNYnvbEQ9PzT2gTeb5nNs
jJA9MJpwig0LEu/ZkHgeTD92k03zOzZe9Z1okXyHjVMk/rORtIhzqyKCTfM9
Nl58+BD29j0b5YQHbBx7KfRbHcem+R8bjQPuyHbGszGW8IGN3vBakZjKpvkg
G/1Heog1OWwcJ7xgI1I6s3BfLpvmh2yM9FqwpWM+GyyCDzbO6Su6hzPt1nyR
WU+35xNimfZIwhNmPg+tXl9n3teaP7KRs/vMzmwpG96EL+UQCCUWN+Rsmk+W
Y+LidpI0LRuFhDflmB25csGxBjbNL8vhMcRq+/NO5RhG+FMO52ET1Y7Dymm+
WY5TAXdW3RpVjsOER+UIbRPX55hZOc0/yzHldp9mX8ty5BI+lUMaO/roU6ty
mo8y8xnX5dlU+3IMIrwqh0nvG/82Me3W/LQco0Je5IQsKIcnOc7lcFvk1nHr
rnKar5Yj89/pzck+5fhMeFaOsi5jIlNOlNP8tQJHZWd7vg0oR3/Ctwqk9zrs
4f2wnOazFWjXPrC7eUQ59hDeVWA/23GFyYdymt9WoOK9dVtrpp1G+FeBKc4X
nHaVlNN8twKTK+c5diwrRz/Cwwr8LewY9KaqnOa/FSgzsNv98E85dhA+VuCF
18zkDh0qaD5cAdvzEeFd9CuQTHhZgdjeQfXXDCpoflyBvJLmgryRFTAg/KyA
VcW8qoPTKmi+zMxvWKcnxvYV2EJ4yvTvbaGd41BB8+dKeG7YKtp4qgIJhK+V
4I4avGZpQgXNpyuxtmxM4sOkCnQnvK3E8GKTnv/VVtD8uhIrbBp2BXyrwAbC
30p4cZ8fmsmM05pvV2Jc4jf+zV8VeE94XImTPdL1q40qaf5didXDbXrmDKtE
Z8LnSvSOLNv6YWQlzccrYXIowEhhUYl1hNeVkKj1hf+YebTm55XY+Wn9hl9u
lYgm/K7EmAgPs/M7K2m+XokHARHma05WogPheRVibnUfH+JfSfP3KlxYUTm9
8TIzD8LzKkwJ2ZR/IqeS5vNVmPfpSqZBcSVeE55X4bVGf/Q+RSXN76uwIvLj
1NmaSrR9peuwCjsT23qXfauk+X4VksRP7gT3rsJKwvMqiP9L7FhtUkXz/yq8
zIqINGbGfUl4XoXvfs0jLP6rovVAFeY+9En1sanCH8Jz5tXlQWzg0ipaHzD9
G9hmO5+uwjLC8yrkGEf+CmfarfVCFfaP3/Zk8OUqhBGeVyPD/86JBVeraP1Q
Dc1SzxlmYVX4QXhejTBr1qW1qVW0nqhGz4MBvfXNq7GI8LwaR5TP+g60rqb1
RTVujngy661DNR4TnlejYGjvCc+3VdN6oxolr7LmDXtajWbC82rIOp7p7/is
mtYf1XB5NbDd44RqLCA8r0Z9u6RXn6qqaT1SDbcv0tKPfTkIITyvhu27xjmZ
0zi0PmH+3rLrqM9iDhoJz6vx2zCxYM8yDq1XqpHSv3TsSHcO5hCecxDjVt8w
fh+H1i8cjKvKfFXhyUEw4TkHQeotWQt9OLSe4cD7v3d/VjBtNeE5B1f9SnxP
X+XQ+oYDv/NBY6/d52Am4TkHptNbpKnhHFrvcPC7a/29M685uEV4zvQ3+L59
3w8cWv9wMPlKR+4rDgdywnMO+u6oWeml4NB6iIOni+5WL9dyMJ3wnIOkx0H9
f3/h0PqIef948xcDv3FwnfCcA5Mfx9vbM+3WeqkGXtI//M9rayAmPK9Bjn+6
9fzNNbR+qsHJRd2XZvnXYCrheQ0+nPi8+c79GlpP1SApelThxDc1uEp4XgMP
r4DJmUy7tb6qgWn2bMt1n2rAJzyvwcg9szx7ZNTQeqsGKr3qusC8GkwiPK/B
gIf3rHYU1dD6qwYXy9aWKEXMK+F5Dea/+/Il6XcNrcdqEFo1eP7KLrWoI+Gq
Btt8/LLdDWtpfVaDboNXjL88vBaWhOc1uP5+Tku3EbW0XqtFt8UGt6NH1sKf
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
7RXrZ1WKMZ/wXIxXZc5rOnLEVC8V48HCP5FPa8T4QnguRsj0503hTLtVPxVD
oMd5ea6ReR/huRhxi48/t/ompnoqsw8mW32+/BZjLuG5GDfrbhyR/BNTfVUM
IT8pPLKTBA2E58z61p7fPK6LhOqtYnBnWv+z7S3BPcJzMfjz9eymDpJQ/VWC
r4dfV81h2rMJzyUQqH96S0ZIqB4rQadZSdOGjJZAQ3guwaSJH70fzZFQfVaC
xPlPLN8tleAu4bkEx9ipbuY7JFSvlSBIPXu29y4JZhGeS/A+6dTOtvskVL+V
oO3VkLpD/hKoCM8l2PokSjHghoTquRK4+88Y+SdYgtuE5xL4s4oveN2TUH2X
GffInTu9oiWYQXguQQfFuhFfYiVU75XgglXK6WVpEigIzyWwnyseGJ4hofqv
BPq/5zqdy2fmSXguwfOcqM37iiRUD5Zg7pGW9e/KJPT7qMw4nNMa61oJ1Ycl
WHqyv9XReglkhOcSXPNRTxoglFC9WILxtk45a8QS3CA8l2BiF35lrUJC9WNm
X0yK1/5ukMCO8FyCI+ofX/80SqieLEGBZyeu63cJJITnEozxa7/5xU8J1Zcl
qPYy7lrOtAMJzyV4k353M7u7lOrNzHPTNzTSM5TClvBcio5p7O2VQ6RUf5bC
afZYB80oKUSE51J0eRbKPTtGSvVoKU4oBwUEmUpxjfBciqpzR042mUmpPi1F
YOrt7J8WUkwhPJei4HvIjKHjpFSvlqKi0wqTvxOkEBCeSyF2HrKn5yQp1a+l
CE0N+D2IaV8hPJdCu/NwfL6LlOrZUlwYddBh9zopJhOeSzFU1HLo1BYp1bel
ODIzztTwkBQ8wnMp0mfMFdkxr616txSS7/ILa7ykuER4LoX73hGzfnhLqf4t
hWdcrPNh5vfWhOdShJxz6rz4gpTq4VLUqmPOzL8opd8/lmLF4cbdR5l2qz4u
RcnF5W/cXjHzJDyXorqo9sCFSCnVy6UYV+4y/PNbKSYSnjOfnzJHYxIrpfq5
FDO39t5omMyMQ3guhX1Q7ean6VKqp0vh0t++q0OxFOfIcqVoaIH1iXIp1del
mO46Q3adaU8gPJeiLuMUP5wjpXq7DKNjey0cViMFh/BchufnExaHMf226u8y
bBw/UtFVIcVZwnMZ3AXF5hv+SKkeLwMnZttkV6afcYTnMsS+CjKbx/y+VZ+X
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
wTfmORKea+Fx7oqD9V8t9c8b8D8ic7u8
         "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{}, 
       StyleBox[
        LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
         0.9999999795918367, 0.9999999795918367}}], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], StripOnInput -> False]}, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{
                   GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"30", ",", "10"}], "}"}]}], ",", 
           RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.720853209195964*^9, 3.720853852059656*^9, 
  3.7208539691508675`*^9, 3.7208689447422533`*^9, 3.720869478710094*^9, 
  3.720869603053443*^9, 3.7208696622235813`*^9, 3.7208700063863115`*^9, 
  3.720871879235106*^9, 3.720875448994742*^9, 3.7208762832230735`*^9, 
  3.7208963489625864`*^9, 
  3.720897080789695*^9},ExpressionUUID->"5c965e7f-02fb-4e87-ac8b-\
4b393920503e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"BinomialDistribution", " ", "for", " ", "Distribution", " ", "5"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.7208972739572535`*^9, 3.720897292096077*^9}, {
  3.720903946730708*^9, 
  3.7209039488011827`*^9}},ExpressionUUID->"050471c4-ba8a-47d0-abc0-\
4dd6386cb922"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "plot51", ",", "plot52", ",", " ", "plot53", ",", " ", "plot54", ",", " ", 
   "plot55"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208532096462817`*^9, 3.7208532115196104`*^9}, {
   3.7208539532346153`*^9, 3.7208539534557714`*^9}, {3.7208968105774155`*^9, 
   3.7208968260213375`*^9}, 
   3.7208971000900745`*^9},ExpressionUUID->"4b79f2d0-da1f-4435-8e4f-\
7f0b6272781c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[{{0.01248701436776649, 0.013000000000000001`}, {
          0.058799549026499046`, 0.10099999999999999`}, {0.18725485513621534`,
           0.309}, {0.41637167016469406`, 0.5720000000000001}, {
          0.67928086418005, 0.792}, {0.8733897654845326, 0.924}, {
          0.9655774776962399, 0.9810000000000001}, {0.9937253306261037, 
          0.9970000000000001}, {0.9992461096385368, 0.9990000000000001}, {
          0.9999409543636102, 
          1.}}]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[{{0., 0.031}, {0.2617628293538701, 0.122}, {
          0.45500587987639673`, 0.309}, {0.597665082741174, 0.563}, {
          0.7029814090306996, 0.7869999999999999}, {0.7807298357735235, 
          0.9239999999999999}, {0.8381266143543337, 0.978}, {
          0.8804990497780334, 0.993}, {0.9117799566186113, 0.998}, {
          0.9348726847798449, 
          1.}}]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         PointBox[{{0.23304591004427877`, 0.016}, {0.41178142390019146`, 
          0.101}, {0.5488633572723212, 0.30800000000000005`}, {
          0.6539989067311138, 0.5720000000000001}, {0.7346330463882768, 
          0.801}, {0.7964757295883986, 0.937}, {0.8439062284025682, 
          0.9790000000000001}, {0.8802832434567355, 0.9960000000000001}, {
          0.90818274393291, 0.9990000000000001}, {0.9295803799308335, 
          1.}}]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         PointBox[{{0.0371794161554752, 0.026000000000000002`}, {
          0.15957405413929956`, 0.11100000000000002`}, {0.3610356282606745, 
          0.31900000000000006`}, {0.5821061289298634, 0.5750000000000001}, {
          0.7640471509806054, 0.784}, {0.8838371198988142, 0.918}, {
          0.9495618828452713, 0.9790000000000001}, {0.9804712999338052, 
          0.9960000000000001}, {0.9931905250657369, 
          1.}}]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2]], 
         PointBox[{{0.021264197694804546`, 0.019}, {0.1178103964634967, 
          0.101}, {0.3187209734325289, 0.315}, {0.5721092269496411, 
          0.5840000000000001}, {0.7878210396009242, 0.806}, {
          0.9184077082659051, 0.917}, {0.9760512377489653, 
          0.9720000000000001}, {0.994745516189174, 0.9940000000000001}, {
          0.9991662427844852, 0.9980000000000001}, {0.9999096316812847, 
          1.}}]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{}, 
       StyleBox[
        LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
         0.9999999795918367, 0.9999999795918367}}], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], StripOnInput -> False]}, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"BinomialDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                  False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7208532127174406`*^9, 3.720853856413746*^9, 3.72085396302355*^9, 
   3.7208689447735057`*^9, 3.7208694787541647`*^9, 3.720869603094472*^9, 
   3.720869662321663*^9, {3.720869806680107*^9, 3.7208698290549116`*^9}, {
   3.7208699940285883`*^9, 3.720870006438349*^9}, 3.7208718792791376`*^9, 
   3.7208754491168127`*^9, 3.720876283283121*^9, 3.720896827153137*^9, {
   3.720897088692999*^9, 
   3.7208970943860245`*^9}},ExpressionUUID->"b6df76b7-aab2-462b-b83f-\
0cd85edc20ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"PoissonDistribution", " ", "for", " ", "Distribution", " ", "6"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7208973045571814`*^9, 3.7208973150392113`*^9}, {
  3.720903950960698*^9, 
  3.720903952249617*^9}},ExpressionUUID->"309f0cc9-2afe-42ba-a1c8-\
6cd7b45336d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "plot61", ",", "plot62", ",", " ", "plot63", ",", " ", "plot64", ",", " ", 
   "plot65"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208532096462817`*^9, 3.7208532115196104`*^9}, {
  3.7208539532346153`*^9, 3.7208539793653493`*^9}, {3.720897105495879*^9, 
  3.7208971171651506`*^9}},ExpressionUUID->"30c038eb-a969-4116-976d-\
0bece166fea3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQzX+0bHOLUY39n5UfL/kmBdgf+bGzeXHGBPtdnjxM
2u1t9qeN1z27nrfQvifn+e+VHxfZi932vrLjwwb77D0lkyVYttnPK55deFR/
n/2dn3VZe0oO21c3FR8S2nPCfmNRxsS3Neft50n83bBw6yX72P5DXzVirtsv
LD9zQMrhlv3mue+XH/O+b7/gwdRYT92H9g1ZIAOf2J/ffdl2ocxTqHnP7SOv
zJ50ZsILe5v7/r3T817Zx73f2arj99o+nE9309z3r+1TuJmeM7i+tZfRv6vC
1vjWPvbe3sNnut7ZpwhEWG458c5+z+5HzZM939tvAdv33v4Ys2Zv57r39rfP
fQ9+vPS9/Ye59sKX7723v7m4wJbr+nv7DZHJpps+v7dvnurcnfP8vb15pG76
zd/v7XXbxW6e+w5UV9prs+vfe3tGBhD4YA8ABVqsnA==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvePTepG8A8ftf9Vl7SmZnGE/q2CX186vF+x3efIw
abe32Wd8X7ncs+eqfbXIOveHVUvsTz04fddzw0374oyJb2vst9rLCEbXP8u5
a98hdvPc9+DD9hwSr3ul0h7YR1puOVG277x9ME/s7uWvH9rzAk0Tu3nN/suS
GG4z78f27I1Tnbtz7ttfWX3bvKrjif2dnyAHPLbPsFxTeGbZU/sux4SnF5Se
2zdc5E83XPnMXhxk/OOX9ltsXmYkTXpuv+KYt3mn4xt765CeI1dSXkDl39o7
SDGlHVB6ab/9898rFS/f2bOorriieu6l/T0VNqCN7+01E4JnXc54Zd/2OnCH
XOt7+5S9XcrZX17Ztxw4tdB123v7rFgmtdSi1/bhfLqb5r5/b38z6ZH3eq83
9gxg8MEeAJxjnCc=
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7bM6bcUSiWP2f1Z+vOSbFGDPk9rdVL/6PJRfYJ/R
pf0n1eCK/a+6rD0lkzvspz2cudZD7YZ9hOWWE2X75ttP2hm6t/nAbXuX7pzn
v1dutP9R1eyawH7fPqB3ep5Q8wH7WT39F4wZH9pXvlQz5Fhzxp5h0Y4Eq5hH
UP4V+/Sr+j8fTn9sf9k3SSDC8o79gdtvZzBsf2KfCzTt46WH9hXft87V2vPU
/vBXjZj+Q0/t36e+2LRj5TP70skSLGF8L+3nnGA3P9v43H5DUcbEtzWv7Yv+
RalEur2wP+5t3umY8NZ+/5Kv7Qo/X9jv9uRh0m5/Zx9lkDNx3+yX9tzXFxfY
cr23j37R5bJS/5X9eveHVSLr3tsfut931WTbK/sbIOnr7+0NsmZvn2bw2l6n
Xezmue/v7Usc7z7WZH1jzwAGH+wB5z6leA==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/XDVfrZV4i72f1Z+vOSblGAf/jZf6IVXtn21yDr3
h1Ul9le3F37S+9Zhb3Pfv3d63iT7NslXwnJBC6HyS+yd5mbLtNVutle+/bMu
a88W+7JVh3zfTzhk/yZwh1zr64P2C5STHf4+PGdfaMt1fXHBWfvfPS+fyn6/
Zr9/vpT+XZVr9lnnWdY+UrpvDzJNZN19e0PZvhUb+h/bbyjKmPi25rH9iv+9
Nxhkntu3i9089z34ub16/R/ey/9f2tubxu3y5Hllr+O6NoZP5429FljBa3vN
/G8Lkja8tZdgCePT3fTWXmFj5srste/sHy+dfURhwzt758SPIf/c39tzrJGJ
SrF+b88Uvl757oL3UPvf299Q+nRZ7iJQXBtk4Hv7yarelz++fG/fONW5O+f5
e3sLYetm4W/v7cHS39/bs1z79WfH7/f2DGDwwR4AmEyrsg==
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPXUmzwz/YjX7X3VZe0omV9irqRhMFZycar9TrvV1
4I4+e8YFSlzFnn32t3+CFCy231B4wT13/gr7y75JAhGWW+xZ98xzP1q3x97m
vn/v9LxD9jlJ8cFtFqfsc5//Xvnx0ll7zTPz3n9qumIft8uTh0n7uv1Hn/9z
sxvu2O8Am3/PPvxpi3mz4iN7tsapzt05j+0/fYp5fXL6U3ug4naxm8/sJS5u
lK6tfGEPlASa+NK+e9nu5I97Xtk3gJQ/f20vOTvolk/eG/vZRxQ2FGW8tRf4
MzGUaymQBjruRNk7e5uA/zIPqt/Z31UB2fDePqza8PEe7vf2LGF8upvmvrc/
VSN2ITXzvf31xQW2XNff26/6/G3G3SXv7UG2n/v+3n7qn0kNJ0++t2cAgw/2
AOBQmWs=
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{}, 
       StyleBox[
        LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
         0.9999999795918367, 0.9999999795918367}}], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], StripOnInput -> False]}, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                  False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}], ",", 
               RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7208532127174406`*^9, 3.720853856413746*^9, {3.72085396302355*^9, 
   3.7208539828698273`*^9}, 3.720868944804757*^9, 3.7208694787961674`*^9, 
   3.7208696031535263`*^9, 3.720869662370699*^9, 3.720870006510399*^9, 
   3.720871879323168*^9, 3.7208754491648574`*^9, 3.7208762833812127`*^9, 
   3.7208971181528254`*^9, 
   3.7208971527532835`*^9},ExpressionUUID->"769cbc41-eb82-45b7-acd2-\
74de5d96fc86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b8913622-4862-42ff-a268-aa599ca0c0b1"],

Cell[CellGroupData[{

Cell["Estimera parametrarna", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
   3.7144595946902475`*^9, 3.714459597220524*^9}, {3.714469010545548*^9, 
   3.7144690139721284`*^9}, {3.7144695978181057`*^9, 
   3.7144696137488985`*^9}, {3.714469746807459*^9, 3.714469754325884*^9}, {
   3.714470473698719*^9, 3.714470475620205*^9}, {3.7161137914711714`*^9, 
   3.716113802438332*^9}, {3.7167346196650915`*^9, 3.71673464535929*^9}, {
   3.719750284433552*^9, 3.7197502955145693`*^9}, {3.7197507326113925`*^9, 
   3.7197507431144724`*^9}, 
   3.720977318596006*^9},ExpressionUUID->"eb439d15-c7dc-4438-bf80-\
6843cb84e2a0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.720898267239463*^9, 3.72089830917212*^9}, {
  3.720898428411684*^9, 
  3.720898510736493*^9}},ExpressionUUID->"69f2d79a-0029-40c4-bcf0-\
ec5f42ed04f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]12", ",", "gammaD"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208994482820015`*^9, 3.7208994842659254`*^9}, 
   3.7208999573372016`*^9},ExpressionUUID->"ae31aca9-cecd-4648-9f31-\
7d6ea5b8affd"],

Cell[BoxData[
 RowBox[{"GammaDistribution", "[", 
  RowBox[{"0.9702942883021447`", ",", "0.21625860771800573`"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7208991140718937`*^9, {3.7208994798403096`*^9, 3.7208994846972246`*^9}, 
   3.720900003827488*^9},ExpressionUUID->"bfa50784-1640-4807-bc50-\
e1cf870ff8bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
  3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
  3.7208985233774295`*^9}},ExpressionUUID->"97fad42a-9462-46a3-b737-\
97889d68d71d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]24", ",", "geoD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985678071065`*^9}, {3.7208991189351377`*^9, 
  3.7208991707394037`*^9}},ExpressionUUID->"ae310097-3c94-44ca-bdfd-\
41a1ef79ca48"],

Cell[BoxData[
 RowBox[{"GeometricDistribution", "[", "0.0690512360171247`", "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.720899171276777*^9, 
   3.7209000087659793`*^9},ExpressionUUID->"0c8501f6-ff9b-4ec6-99ef-\
b112a3917204"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "3"}], "*)"}]], "Input",
 CellChangeTimes->{{3.720898326952675*^9, 
  3.720898327078782*^9}},ExpressionUUID->"481c68b0-231f-487d-a276-\
22ef8d1d878e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]32", ",", "gammaD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985983661547`*^9}, {3.720899208577137*^9, 
  3.720899214914626*^9}},ExpressionUUID->"6a65ecbc-6dca-47de-a0a0-\
8c5c6c2d5621"],

Cell[BoxData[
 RowBox[{"GammaDistribution", "[", 
  RowBox[{"7.961045605326184`", ",", "1.6139547470945976`"}], "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.7208986039150763`*^9, 3.7208992153299246`*^9, 
   3.720900010385124*^9},ExpressionUUID->"79f60cfd-34cc-4d26-ae00-\
dad2e204183b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "4"}], "*)"}]], "Input",
 CellChangeTimes->{{3.72089832901013*^9, 
  3.7208983291512284`*^9}},ExpressionUUID->"32092eb2-e093-4d47-a573-\
861967df21c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]41", ",", "normalD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985983661547`*^9}, {3.72089864631793*^9, 
  3.720898646779247*^9}, {3.7208992291036587`*^9, 
  3.7208992352550063`*^9}},ExpressionUUID->"2f9b61e1-fac4-4c85-8cd0-\
5eedf32f80b4"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"2.9827343709816203`", ",", "5.154983546721329`"}], "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.7208986039150763`*^9, 3.720898651662706*^9, 3.720899235572235*^9, 
   3.720900012054307*^9},ExpressionUUID->"c7a15d4a-beee-41c3-a765-\
632c67f18972"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "5"}], "*)"}]], "Input",
 CellChangeTimes->{{3.720898331703042*^9, 
  3.7208983318331413`*^9}},ExpressionUUID->"359667d5-43c3-4b09-bb1d-\
cb9ac383a8a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]54", ",", "poissonD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985983661547`*^9}, {3.720898701661976*^9, 
  3.7208987032380915`*^9}, {3.7208992470797777`*^9, 3.7208992581195726`*^9}, {
  3.7208992993897376`*^9, 
  3.7208992995428457`*^9}},ExpressionUUID->"bc400e2b-1776-4006-8104-\
424901327e72"],

Cell[BoxData[
 RowBox[{"PoissonDistribution", "[", "3.275`", "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.7208986039150763`*^9, 3.7208987087129555`*^9, 3.7208992584227943`*^9, 
   3.7208993001332636`*^9, 
   3.7209000145160418`*^9},ExpressionUUID->"8ba0f3d4-87b2-41c9-81e0-\
30d18669d3dd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "6"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7208983339686356`*^9, 
  3.720898334144759*^9}},ExpressionUUID->"80760dfe-ed9e-4fcb-a476-\
c5eedc47dbf2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]64", ",", "poissonD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985983661547`*^9}, {3.720898701661976*^9, 
  3.720898746405463*^9}, {3.7208992784879785`*^9, 
  3.7208993116333933`*^9}},ExpressionUUID->"15f7b0d8-f170-4630-b017-\
3594610004ba"],

Cell[BoxData[
 RowBox[{"PoissonDistribution", "[", "9.758`", "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.7208986039150763`*^9, 3.7208987087129555`*^9, 3.7208987507875476`*^9, 
   3.7208993120066557`*^9, 
   3.720900018244691*^9},ExpressionUUID->"6fd0be65-16b4-4706-9b7f-\
313a728afe8e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9b61290d-9bb5-4521-8cb8-b7266668a682"],

Cell[CellGroupData[{

Cell["Ber\[ADoubleDot]kna konfidensintervaller", "Section",
 CellChangeTimes->{{3.7144588294654913`*^9, 3.7144588815465884`*^9}, {
   3.7144595946902475`*^9, 3.714459597220524*^9}, {3.714469010545548*^9, 
   3.7144690139721284`*^9}, {3.7144695978181057`*^9, 
   3.7144696137488985`*^9}, {3.714469746807459*^9, 3.714469754325884*^9}, {
   3.714470473698719*^9, 3.714470475620205*^9}, {3.714470507606065*^9, 
   3.7144705104400835`*^9}, {3.716113900131462*^9, 3.716113901769082*^9}, {
   3.71673465043937*^9, 3.7167346725812187`*^9}, {3.719750351435193*^9, 
   3.719750362177108*^9}, 
   3.720977340660604*^9},ExpressionUUID->"7e479f1a-8dc5-4969-a58d-\
4c82d05ba74e"],

Cell["\<\
En metod som tar ut konfidensintervall f\[ODoubleDot]r \[Alpha] som inte \
\[ADoubleDot]r l\[ADoubleDot]ngre \[ADoubleDot]n 10% av dess medelv\
\[ADoubleDot]rde \
\>", "Text",
 CellChangeTimes->{{3.7209092674066505`*^9, 3.720909321063146*^9}, {
  3.7209093566623116`*^9, 
  3.7209094023356075`*^9}},ExpressionUUID->"e2858ac9-c231-4ff1-89a5-\
120b63745397"],

Cell[BoxData[
 RowBox[{
  RowBox[{"clt\[Alpha]\[Beta]", "[", 
   RowBox[{"d_", ",", " ", "m_", ",", "a_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], " ", ",", " ", 
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"n", "=", "2"}], ",", "\[DoubleStruckX]", ",", " ", 
      "\[DoubleStruckA]", ",", "\[DoubleStruckB]", ",", " ", 
      "find\[Alpha]\[Beta]", ",", " ", "ci\[Alpha]1", ",", " ", "ci\[Alpha]2",
       ",", " ", "ci\[Beta]1", ",", " ", "ci\[Beta]2", ",", " ", 
      "m\[DoubleStruckA]", ",", "m\[DoubleStruckB]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"find\[Alpha]\[Beta]", "[", "data_", "]"}], ":=", 
      RowBox[{"List", "@@", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"data", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"j", " ", "\[Equal]", " ", "1"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[DoubleStruckX]", "=", 
         RowBox[{"randomNumber", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[DoubleStruckA]", ",", "\[DoubleStruckB]"}], "}"}], " ", 
         "=", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"find\[Alpha]\[Beta]", "/@", "\[DoubleStruckX]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"m\[DoubleStruckA]", " ", "=", " ", 
         RowBox[{"Mean", "[", "\[DoubleStruckA]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m\[DoubleStruckB]", " ", "=", " ", 
         RowBox[{"Mean", "[", "\[DoubleStruckB]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", " ", "\[NotEqual]", " ", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}], "=", 
            RowBox[{"MeanCI", "[", 
             RowBox[{"\[DoubleStruckA]", ",", " ", 
              RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", " ", "0"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", " ", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ci\[Beta]1", ",", " ", "ci\[Beta]2"}], "}"}], "=", 
            RowBox[{"MeanCI", "[", 
             RowBox[{"\[DoubleStruckB]", ",", " ", 
              RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ci\[Alpha]1", " ", "\[GreaterEqual]", 
            RowBox[{"m\[DoubleStruckA]", "*", "0.95"}]}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"m\[DoubleStruckA]", " ", "*", " ", "1.05"}], " ", 
            "\[GreaterEqual]", " ", "ci\[Alpha]1"}]}], ",", " ", 
          RowBox[{"i", "=", "0"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ci\[Beta]1", " ", "\[GreaterEqual]", " ", 
            RowBox[{"m\[DoubleStruckB]", " ", "*", "0.95"}]}], "&&", " ", 
           RowBox[{
            RowBox[{"m\[DoubleStruckB]", " ", "*", "1.05"}], " ", 
            "\[GreaterEqual]", " ", "ci\[Beta]2"}]}], ",", "  ", 
          RowBox[{"j", "=", "0"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"n", "++"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"ci\[Beta]1", ",", " ", "ci\[Beta]2"}], "}"}]}], " ", 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7208993631241684`*^9, 3.7208994175162525`*^9}, {
   3.720899673952916*^9, 3.7208997363392315`*^9}, {3.720899864391904*^9, 
   3.7208998714178824`*^9}, 
   3.720899924351883*^9},ExpressionUUID->"a616b9dd-caae-44ff-b232-\
c92f159bd3c2"],

Cell["\<\
En metod som tar ut konfidensintervall f\[ODoubleDot]r \[Alpha] och \[Beta] \
som inte \[ADoubleDot]r l\[ADoubleDot]ngre \[ADoubleDot]n 10% av dess medelv\
\[ADoubleDot]rde \
\>", "Text",
 CellChangeTimes->{{3.7209093307089653`*^9, 3.7209093349859867`*^9}, {
  3.7209094107535505`*^9, 
  3.720909414167976*^9}},ExpressionUUID->"c690d622-9826-4f67-919b-\
1796b602c179"],

Cell[BoxData[
 RowBox[{
  RowBox[{"clt\[Alpha]", "[", 
   RowBox[{"d_", ",", " ", "m_", ",", "a_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], " ", ",", 
      RowBox[{"n", "=", "2"}], ",", "\[DoubleStruckX]", ",", " ", 
      "\[DoubleStruckA]", ",", " ", "find\[Alpha]", ",", " ", "ci\[Alpha]1", 
      ",", " ", "ci\[Alpha]2", ",", " ", "m\[DoubleStruckA]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"find\[Alpha]", "[", "data_", "]"}], ":=", 
      RowBox[{"List", "@@", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"data", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[DoubleStruckX]", "=", 
         RowBox[{"randomNumber", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[DoubleStruckA]", "}"}], " ", "=", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"find\[Alpha]", "/@", "\[DoubleStruckX]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m\[DoubleStruckA]", " ", "=", " ", 
         RowBox[{"Mean", "[", "\[DoubleStruckA]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}], "=", 
         RowBox[{"MeanCI", "[", 
          RowBox[{"\[DoubleStruckA]", ",", " ", 
           RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ci\[Alpha]1", " ", "\[GreaterEqual]", 
            RowBox[{"m\[DoubleStruckA]", "*", "0.95"}]}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"m\[DoubleStruckA]", " ", "*", " ", "1.05"}], " ", 
            "\[GreaterEqual]", " ", "ci\[Alpha]1"}]}], ",", " ", 
          RowBox[{"i", "=", "0"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"n", "++"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.720897389220222*^9, {3.7208974934394054`*^9, 
   3.7208974959742002`*^9}},ExpressionUUID->"1bff246e-b0be-4412-b9a6-\
c36ba937a510"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]\[Beta]", "[", 
  RowBox[{"1", ",", " ", "n", ",", " ", "gammaD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720866702480817*^9, 3.7208667030242224`*^9}, {
  3.7208694448367586`*^9, 3.7208694449748507`*^9}, {3.7208974167615795`*^9, 
  3.7208974721473703`*^9}, {3.7208994357791915`*^9, 3.7208994371001263`*^9}, {
  3.720899493784665*^9, 3.7208994994916716`*^9}, {3.7208997626818233`*^9, 
  3.7208997642719584`*^9}, {3.720899930373141*^9, 
  3.7208999328268766`*^9}},ExpressionUUID->"21cb474a-c3c8-447f-a8f2-\
b28d86eb74e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9649016163217382`", ",", "1.0195560936565222`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21312891600238856`", ",", "0.2314114898046231`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7208694789672933`*^9, 3.720869603254593*^9, 3.720869662461767*^9, 
   3.720870006602928*^9, 3.7208718794452543`*^9, 3.7208754499534035`*^9, 
   3.720876283518487*^9, 3.7208974195865602`*^9, 3.7208974817491407`*^9, {
   3.7208997609195766`*^9, 3.7208997966741405`*^9}, 3.7208998425199156`*^9, 
   3.720899898650133*^9, 
   3.720899933650467*^9},ExpressionUUID->"9d20a7d6-7a2b-4c61-84a5-\
95d847d226c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]", "[", 
  RowBox[{"2", ",", " ", "n", ",", " ", "geoD"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.720866502758896*^9, 3.7208665476027403`*^9}, {
   3.7208694476347437`*^9, 3.7208694477578173`*^9}, 3.7208974246831636`*^9, {
   3.7208974873611097`*^9, 
   3.7208974881736927`*^9}},ExpressionUUID->"841ddb16-581a-4476-87d6-\
5f6a6c007856"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06311766572234834`", ",", "0.06545716823035524`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.720866855387924*^9, 3.720869478985288*^9, 3.720869603312626*^9, 
   3.7208696624877863`*^9, 3.7208700066779814`*^9, 3.7208718794592648`*^9, 
   3.720875449976431*^9, 3.7208762835385017`*^9, {3.720897488595981*^9, 
   3.7208974993075542`*^9}, 
   3.720899901197926*^9},ExpressionUUID->"8a6409a1-138a-4b8a-a89f-\
ae312f36107f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]\[Beta]", "[", 
  RowBox[{"3", ",", " ", "n", ",", " ", "gammaD"}], "]"}]], "Input",
 CellChangeTimes->{{3.72086672744946*^9, 3.7208667615595903`*^9}, {
  3.7208694523140507`*^9, 3.720869452410121*^9}, {3.7208975069059353`*^9, 
  3.7208975102813272`*^9}},ExpressionUUID->"59fcd2bc-64f9-4426-b852-\
ac962a9f494e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7.768020612217145`", ",", "8.498917152072575`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5216356344828528`", ",", "1.6173139406197676`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7208668554169455`*^9, 3.7208694790053062`*^9, 3.7208696033656635`*^9, 
   3.720869662548811*^9, 3.7208700067420263`*^9, 3.7208718794942875`*^9, 
   3.72087545002145*^9, 3.720876283580533*^9, 3.7208975112539997`*^9, {
   3.7208999082706738`*^9, 
   3.7208999373380632`*^9}},ExpressionUUID->"5520dd9e-2375-443c-9a2e-\
d7467860399e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]\[Beta]", "[", 
  RowBox[{"4", ",", " ", "n", ",", " ", "normalD"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208667637681327`*^9, 3.720866775632383*^9}, {
  3.720869455955613*^9, 3.7208694560626884`*^9}, {3.7208975237938633`*^9, 
  3.720897525250908*^9}},ExpressionUUID->"208fad73-2f62-4b94-8005-\
defe7e0ce832"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.966745926337509`", ",", "3.1546749359285955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.922598928281953`", ",", "5.263783108363482`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.720866855440961*^9, 3.7208694790243344`*^9, 
  3.7208696033916807`*^9, 3.720869662658889*^9, 3.7208700067690444`*^9, 
  3.7208718795143027`*^9, 3.7208754500674963`*^9, 3.72087628361756*^9, 
  3.720897525989436*^9},ExpressionUUID->"e6f88744-f364-4e07-9ce2-\
99f6b847617e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]\[Beta]", "[", 
  RowBox[{"5", ",", " ", "n", ",", "binD"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208668037282753`*^9, 3.720866810579087*^9}, {
  3.7208669802584004`*^9, 3.7208669854100294`*^9}, {3.7208671685769963`*^9, 
  3.72086717580412*^9}, {3.7208694588917007`*^9, 3.7208694590337887`*^9}, {
  3.7208696118756895`*^9, 3.7208696192409024`*^9}, {3.720869905793668*^9, 
  3.7208699680314884`*^9}, {3.720897529656009*^9, 
  3.7208975373599553`*^9}},ExpressionUUID->"aab02a83-a813-4c25-a9f7-\
e105ab4e13bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10.912842991063101`", ",", "11.92049034227023`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2774451985597793`", ",", "0.3036248286352479`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7208699686219025`*^9, 3.7208700067880588`*^9, 3.720871879531317*^9, 
   3.7208754501485405`*^9, 3.7208762836385746`*^9, {3.720897550405175*^9, 
   3.7208975524276085`*^9}},ExpressionUUID->"f13aaa0b-21d2-478c-b039-\
74ee2a416f33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]", "[", 
  RowBox[{"5", ",", " ", "n", ",", "poissonD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720897561737191*^9, 
  3.720897565636943*^9}},ExpressionUUID->"ffa390b5-f3b0-415c-832d-\
86e2b69529dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.143264459288548`", ",", "3.294068874044786`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7208975660492353`*^9},ExpressionUUID->"51d8870e-f786-4ea1-804a-\
9f465620c837"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]", "[", 
  RowBox[{"6", ",", " ", "n", ",", " ", "poissonD"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208668351154337`*^9, 3.72086686463845*^9}, {
  3.7208694624602213`*^9, 3.7208694625722904`*^9}, {3.7208975710878124`*^9, 
  3.7208975718893623`*^9}},ExpressionUUID->"044d79ff-4bae-4778-9ea8-\
0c0613ff160e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.547351468115098`", ",", "10.051315198551569`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7208668697250557`*^9, 3.720866872858261*^9}, {
   3.7208694632447653`*^9, 3.720869479125387*^9}, 3.720869603479743*^9, 
   3.7208696628039913`*^9, 3.720870006809073*^9, 3.7208718795463247`*^9, 
   3.720875450170573*^9, 3.7208762836585894`*^9, {3.720897572735961*^9, 
   3.7208975792015314`*^9}},ExpressionUUID->"082c120e-ba15-47b9-9a56-\
18144171fb55"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
Magnification:>1.3 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4416, 96, 
  76, "SlideShowNavigationBar", "ExpressionUUID" -> "
   4425094d-7b29-433d-9d0a-614c12853665",
   CellTags->"SlideShowHeader"],
  Cell[5887, 143, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "754c8493-2d4f-453c-
   bd2b-7d77f29cee29",
   CellTags->"SlideShowHeader"],
  Cell[9616, 247, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "
   1ce6c40d-87c0-422a-8afa-68561851e103",
   CellTags->"SlideShowHeader"],
  Cell[12663, 324, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "309ce197-1c42-420f-a5b9-
   ded1be2c7327",
   CellTags->"SlideShowHeader"],
  Cell[76329, 1549, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "
   73f6a969-29d9-42d7-9a8a-162218d4f1e9",
   CellTags->"SlideShowHeader"],
  Cell[87293, 1865, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "0ad82462-
   e9e5-4ac7-82f6-96a9b067bc9c",
   CellTags->"SlideShowHeader"],
  Cell[89884, 1935, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "b46d52b1-6e42-43f2-
   bdfa-44ef087b612b",
   CellTags->"SlideShowHeader"],
  Cell[438514, 8802, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "b8913622-4862-42ff-a268-
   aa599ca0c0b1",
   CellTags->"SlideShowHeader"],
  Cell[445209, 8985, 122, 2, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "9b61290d-9bb5-4521-8cb8-
   b7266668a682",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 460756, 9378}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4416, 96, 76, "SlideShowNavigationBar", "ExpressionUUID" -> \
"4425094d-7b29-433d-9d0a-614c12853665",
 CellTags->"SlideShowHeader"],
Cell[4999, 120, 596, 12, 216, "Title", "ExpressionUUID" -> \
"600913ca-f541-4bcb-8a95-c2f52f943a1a"],
Cell[5598, 134, 252, 4, 73, "Subtitle", "ExpressionUUID" -> \
"0b11dabb-8e4d-40c5-b0b3-906a46e13c27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5887, 143, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"754c8493-2d4f-453c-bd2b-7d77f29cee29",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6034, 149, 639, 9, 90, "Section", "ExpressionUUID" -> \
"c91365e2-a29f-4aba-86aa-7fe4f888e4e0"],
Cell[6676, 160, 190, 3, 39, "Text", "ExpressionUUID" -> \
"8e596331-9871-43fc-b9fa-3ff532ebf231"],
Cell[CellGroupData[{
Cell[6891, 167, 332, 5, 37, "Item", "ExpressionUUID" -> \
"9b2be48d-d34f-4175-b809-4d73bf2fab1f"],
Cell[7226, 174, 386, 8, 59, "Item", "ExpressionUUID" -> \
"50a85870-47c0-4711-9500-acc3b81ab2ea"],
Cell[7615, 184, 371, 11, 41, "ItemNumbered", "ExpressionUUID" -> \
"067b053b-bc35-49db-a329-596e54a04cc5"],
Cell[7989, 197, 352, 10, 41, "ItemNumbered", "ExpressionUUID" -> \
"e9d267b7-4ff2-4886-a919-a6c6738085d5"],
Cell[8344, 209, 410, 12, 41, "ItemNumbered", "ExpressionUUID" -> \
"17f3a855-386e-428b-a88b-61cead0a5db3"],
Cell[8757, 223, 501, 9, 59, "Item", "ExpressionUUID" -> \
"b773e07c-0834-4619-9987-f736973a2a55"]
}, Open  ]],
Cell[9273, 235, 294, 6, 39, "Text", "ExpressionUUID" -> \
"ed40e394-ebfc-4a28-b9b5-300825351091"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9616, 247, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"1ce6c40d-87c0-422a-8afa-68561851e103",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[9763, 253, 608, 9, 90, "Section", "ExpressionUUID" -> \
"68e94d45-71f6-45f8-8194-ae573dceb130"],
Cell[CellGroupData[{
Cell[10396, 266, 351, 8, 91, "Input", "ExpressionUUID" -> \
"d950f116-04e9-45a5-8364-d17cc62bd706"],
Cell[10750, 276, 574, 12, 40, "Output", "ExpressionUUID" -> \
"58623c18-9ee1-4e9f-973f-b535eba6464d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11361, 293, 398, 8, 66, "Input", "ExpressionUUID" -> \
"d7927e38-b978-4f90-9775-fea83404f62c"],
Cell[11762, 303, 418, 6, 40, "Output", "ExpressionUUID" -> \
"8eeae897-a26b-47b8-a4cd-5ba546db8e43"],
Cell[12183, 311, 419, 6, 40, "Output", "ExpressionUUID" -> \
"af2231c0-3690-430b-8eef-a9e43f18a8e2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12663, 324, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"309ce197-1c42-420f-a5b9-ded1be2c7327",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12810, 330, 554, 8, 90, "Section", "ExpressionUUID" -> \
"d4367d32-7e47-4370-91c7-8b7ef74db615"],
Cell[13367, 340, 386, 10, 66, "Input", "ExpressionUUID" -> \
"1ab57105-61e8-4efc-a426-2fa8929a4085"],
Cell[13756, 352, 728, 23, 91, "Input", "ExpressionUUID" -> \
"bf0f670f-f8c5-4714-94f5-79f526c4c7ae"],
Cell[14487, 377, 1212, 37, 91, "Input", "ExpressionUUID" -> \
"ddaa40c4-ae9e-4c99-b0a1-029b41af4953"],
Cell[15702, 416, 405, 12, 171, "Input", "ExpressionUUID" -> \
"8a80954a-1d77-4947-8345-551e3cc4028f"],
Cell[16110, 430, 469, 13, 91, "Input", "ExpressionUUID" -> \
"522d3953-60be-4f57-91f9-7f3566660aa5"],
Cell[16582, 445, 1405, 38, 91, "Input", "ExpressionUUID" -> \
"c132084d-5fe9-4c00-85a5-d280b8bdd551"],
Cell[17990, 485, 848, 22, 91, "Input", "ExpressionUUID" -> \
"326a1709-6074-48dd-a45d-d15a36da3ebe"],
Cell[CellGroupData[{
Cell[18863, 511, 273, 5, 66, "Input", "ExpressionUUID" -> \
"3e2e4060-4c52-43c4-9057-137b25ba18d1"],
Cell[19139, 518, 779, 16, 47, "Output", "ExpressionUUID" -> \
"97225eb6-7d88-4da6-ad87-3792f8c7e177"],
Cell[19921, 536, 17974, 313, 318, "Output", "ExpressionUUID" -> \
"4780370f-5afb-4f5a-b85c-ff6b17d4cfb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37932, 854, 278, 5, 66, "Input", "ExpressionUUID" -> \
"898f8033-1380-4d5d-ac90-85f9f23f3040"],
Cell[38213, 861, 804, 16, 47, "Output", "ExpressionUUID" -> \
"03ec0efd-895e-426a-a30f-d569a2280a64"],
Cell[39020, 879, 17983, 313, 318, "Output", "ExpressionUUID" -> \
"47d9d85b-cc75-4d30-87ac-bad9d702d04a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57040, 1197, 276, 5, 66, "Input", "ExpressionUUID" -> \
"2a98344e-de59-4d99-a1d7-b5c32a2762a1"],
Cell[57319, 1204, 970, 22, 76, "Output", "ExpressionUUID" -> \
"0309b841-7292-473c-981f-2896ae0da543"],
Cell[58292, 1228, 17976, 314, 318, "Output", "ExpressionUUID" -> \
"62e9c013-1275-43aa-8037-ddc549301c96"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76329, 1549, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"73f6a969-29d9-42d7-9a8a-162218d4f1e9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[76476, 1555, 440, 6, 90, "Section", "ExpressionUUID" -> \
"99007784-7681-432f-8426-34b31a713991"],
Cell[76919, 1563, 319, 8, 66, "Input", "ExpressionUUID" -> \
"181b7137-2b8e-4685-a477-97b4e6a2b61c"],
Cell[77241, 1573, 289, 7, 40, "Input", "ExpressionUUID" -> \
"5e643407-1cb5-4d0d-9d87-cdb9d7c015c0"],
Cell[77533, 1582, 232, 7, 40, "Input", "ExpressionUUID" -> \
"f619951e-7e88-4d14-b93e-4d05ce38fe09"],
Cell[77768, 1591, 205, 5, 40, "Input", "ExpressionUUID" -> \
"62c37d72-3fb4-477a-9a57-4346ce4ca91c"],
Cell[CellGroupData[{
Cell[77998, 1600, 1151, 32, 66, "Input", "ExpressionUUID" -> \
"eee24804-90b3-4c5c-aaa4-a830210a1913"],
Cell[79152, 1634, 484, 11, 40, "Output", "ExpressionUUID" -> \
"d745d1c8-9156-4f67-8c35-fd37e8a34c40"],
Cell[79639, 1647, 484, 11, 40, "Output", "ExpressionUUID" -> \
"53596387-f8dc-4262-a6cb-7124372b9630"]
}, Open  ]],
Cell[80138, 1661, 224, 5, 40, "Input", "ExpressionUUID" -> \
"7ce983e9-3bf7-4c0f-9ddd-2eb9a03bd7c0"],
Cell[CellGroupData[{
Cell[80387, 1670, 628, 17, 66, "Input", "ExpressionUUID" -> \
"3aa807a6-1890-4067-849d-87479185a6af"],
Cell[81018, 1689, 221, 4, 40, "Output", "ExpressionUUID" -> \
"2cbc7896-d225-49d2-974b-cd4ca67af876"],
Cell[81242, 1695, 221, 4, 40, "Output", "ExpressionUUID" -> \
"6c42e4ee-53b6-4858-8af4-a6136f0dc309"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81500, 1704, 661, 15, 71, "Input", "ExpressionUUID" -> \
"1d69e9ea-a689-464f-ba36-60db82325bee"],
Cell[82164, 1721, 308, 5, 40, "Output", "ExpressionUUID" -> \
"3271de18-1f80-4396-8479-140ea69e02ce"]
}, Open  ]],
Cell[82487, 1729, 373, 8, 40, "Input", "ExpressionUUID" -> \
"2b138161-ab05-4a5d-9501-a0a067e2dfe7"],
Cell[CellGroupData[{
Cell[82885, 1741, 311, 7, 40, "Input", "ExpressionUUID" -> \
"139a491d-8360-4ddf-8476-c67796090ca2"],
Cell[83199, 1750, 1104, 24, 76, "Output", "ExpressionUUID" -> \
"8031bb11-1364-45ab-be1b-d6038de7be38"]
}, Open  ]],
Cell[84318, 1777, 387, 10, 66, "Input", "ExpressionUUID" -> \
"4166bd08-5350-4de1-a5cb-e2d5a886ff4d"],
Cell[CellGroupData[{
Cell[84730, 1791, 236, 5, 40, "Input", "ExpressionUUID" -> \
"8b814a9c-607a-4347-968e-c9b67c798d3c"],
Cell[84969, 1798, 337, 5, 40, "Output", "ExpressionUUID" -> \
"0f8f27e0-6699-4454-a10a-0312a8cc9025"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85343, 1808, 1073, 31, 66, "Input", "ExpressionUUID" -> \
"c889b29e-74e4-46bb-b074-c2070935b9ec"],
Cell[86419, 1841, 408, 8, 40, "Output", "ExpressionUUID" -> \
"09a1f0ee-3b4f-483d-8dd8-9ce5eab56a9e"],
Cell[86830, 1851, 402, 7, 40, "Output", "ExpressionUUID" -> \
"0f74fcae-9b53-4277-bd14-85630ac9f993"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87293, 1865, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"0ad82462-e9e5-4ac7-82f6-96a9b067bc9c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[87440, 1871, 432, 6, 90, "Section", "ExpressionUUID" -> \
"3c4e185f-8110-4b79-979a-09f0c14af078"],
Cell[87875, 1879, 567, 14, 64, "Text", "ExpressionUUID" -> \
"a7cf9040-e07e-4017-a41f-6cb28b1ffab7"],
Cell[CellGroupData[{
Cell[88467, 1897, 489, 10, 37, "Item", "ExpressionUUID" -> \
"57c195ff-05cc-4314-8c37-32c3a591a0ea"],
Cell[88959, 1909, 297, 6, 37, "Item", "ExpressionUUID" -> \
"b4e2db64-f363-4283-bdeb-1c9bf43c5fea"],
Cell[89259, 1917, 564, 11, 59, "Item", "ExpressionUUID" -> \
"70f55553-a8b3-417c-8e45-5f6e9106b80a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89884, 1935, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"b46d52b1-6e42-43f2-bdfa-44ef087b612b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[90031, 1941, 530, 8, 90, "Section", "ExpressionUUID" -> \
"455836b7-9fff-4c59-8371-b80ea390b828"],
Cell[90564, 1951, 1648, 38, 241, "Input", "ExpressionUUID" -> \
"944acf82-756e-4a51-bf26-10516ce76f09"],
Cell[92215, 1991, 208, 5, 40, "Input", "ExpressionUUID" -> \
"f07a410d-01e4-415b-8916-83f046dae056"],
Cell[92426, 1998, 1272, 33, 191, "Input", "ExpressionUUID" -> \
"e8025ce5-f7f0-4810-9c7a-c5d7acab9a77"],
Cell[93701, 2033, 142, 3, 40, "Input", "ExpressionUUID" -> \
"44380ed4-ba7f-4f7c-bfd7-16430b6a66d8"],
Cell[93846, 2038, 2441, 50, 116, "Input", "ExpressionUUID" -> \
"ca0ef74e-4672-4d15-8305-813530228c17"],
Cell[96290, 2090, 213, 5, 40, "Input", "ExpressionUUID" -> \
"43fad6f6-a559-4907-b1c5-cd15db9a77c9"],
Cell[96506, 2097, 1594, 39, 116, "Input", "ExpressionUUID" -> \
"a62d29c7-d136-4aef-ba62-b7a8dcc71857"],
Cell[98103, 2138, 250, 6, 66, "Input", "ExpressionUUID" -> \
"7fee0ed6-d344-4d0c-a7a4-d22c0e7aa169"],
Cell[98356, 2146, 1533, 38, 141, "Input", "ExpressionUUID" -> \
"fe017ee9-6da8-453e-8803-e4633e9e8f11"],
Cell[99892, 2186, 213, 5, 40, "Input", "ExpressionUUID" -> \
"af9227c8-abf5-40e7-a29c-900716a5d598"],
Cell[100108, 2193, 529, 12, 40, "Input", "ExpressionUUID" -> \
"d5fbfcda-31fe-4ad1-b826-6e70d5d8c5bd"],
Cell[100640, 2207, 252, 6, 66, "Input", "ExpressionUUID" -> \
"24045266-bc65-46e3-ba1f-8e7348520f10"],
Cell[100895, 2215, 1848, 46, 166, "Input", "ExpressionUUID" -> \
"d24125d8-06e7-439e-98ca-58f37441fc58"],
Cell[102746, 2263, 213, 5, 40, "Input", "ExpressionUUID" -> \
"d6e9d7eb-c907-421c-aa81-60bb083c737a"],
Cell[102962, 2270, 1722, 44, 141, "Input", "ExpressionUUID" -> \
"bab39af6-e09a-413d-9364-e1149fcd2303"],
Cell[104687, 2316, 203, 4, 40, "Input", "ExpressionUUID" -> \
"73570d44-b6c5-440e-ad2f-23ee11f103f3"],
Cell[104893, 2322, 307, 7, 40, "Input", "ExpressionUUID" -> \
"91b68261-79a0-4e6d-a32d-2be1be7119ed"],
Cell[CellGroupData[{
Cell[105225, 2333, 557, 10, 40, "Input", "ExpressionUUID" -> \
"c12e8f34-d52a-4713-af8f-e74952afe55d"],
Cell[105785, 2345, 94536, 1714, 320, "Output", "ExpressionUUID" -> \
"565ac901-3fb3-4cda-8552-8255e6165633"]
}, Open  ]],
Cell[200336, 4062, 310, 8, 40, "Input", "ExpressionUUID" -> \
"7a0070bb-5b5b-40a9-903b-b5864f35686a"],
Cell[CellGroupData[{
Cell[200671, 4074, 410, 8, 40, "Input", "ExpressionUUID" -> \
"d49d5100-6286-4848-9cdd-c4c7c5a7da17"],
Cell[201084, 4084, 36027, 754, 320, "Output", "ExpressionUUID" -> \
"052c936d-2fe0-49f8-8fc9-f0009bf31e05"]
}, Open  ]],
Cell[237126, 4841, 303, 7, 40, "Input", "ExpressionUUID" -> \
"8edff727-af3e-4cb5-9e4b-5e18ccd6d0fe"],
Cell[CellGroupData[{
Cell[237454, 4852, 314, 7, 40, "Input", "ExpressionUUID" -> \
"9c858c5b-5a1d-47d5-aaa5-4229dc9f95de"],
Cell[237771, 4861, 94081, 1706, 320, "Output", "ExpressionUUID" -> \
"f12cb58a-c089-4f4e-805b-674a0d4277e0"]
}, Open  ]],
Cell[331867, 6570, 308, 7, 40, "Input", "ExpressionUUID" -> \
"50ce6296-8bca-4c50-b1d2-558e087f2ead"],
Cell[CellGroupData[{
Cell[332200, 6581, 235, 4, 40, "Input", "ExpressionUUID" -> \
"79f1d92c-5b2c-40d6-957a-d38e135b8236"],
Cell[332438, 6587, 25323, 472, 320, "Output", "ExpressionUUID" -> \
"5c965e7f-02fb-4e87-ac8b-4b393920503e"]
}, Open  ]],
Cell[357776, 7062, 308, 7, 40, "Input", "ExpressionUUID" -> \
"050471c4-ba8a-47d0-abc0-4dd6386cb922"],
Cell[CellGroupData[{
Cell[358109, 7073, 420, 9, 40, "Input", "ExpressionUUID" -> \
"4b79f2d0-da1f-4435-8e4f-7f0b6272781c"],
Cell[358532, 7084, 39435, 837, 320, "Output", "ExpressionUUID" -> \
"b6df76b7-aab2-462b-b83f-0cd85edc20ab"]
}, Open  ]],
Cell[397982, 7924, 307, 7, 40, "Input", "ExpressionUUID" -> \
"309f0cc9-2afe-42ba-a1c8-6cd7b45336d8"],
Cell[CellGroupData[{
Cell[398314, 7935, 388, 8, 40, "Input", "ExpressionUUID" -> \
"30c038eb-a969-4116-976d-0bece166fea3"],
Cell[398705, 7945, 39748, 850, 320, "Output", "ExpressionUUID" -> \
"769cbc41-eb82-45b7-acd2-74de5d96fc86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[438514, 8802, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"b8913622-4862-42ff-a268-aa599ca0c0b1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[438661, 8808, 652, 10, 90, "Section", "ExpressionUUID" -> \
"eb439d15-c7dc-4438-bf80-6843cb84e2a0"],
Cell[439316, 8820, 259, 6, 40, "Input", "ExpressionUUID" -> \
"69f2d79a-0029-40c4-bcf0-ec5f42ed04f7"],
Cell[CellGroupData[{
Cell[439600, 8830, 274, 5, 40, "Input", "ExpressionUUID" -> \
"ae31aca9-cecd-4648-9f31-7d6ea5b8affd"],
Cell[439877, 8837, 314, 7, 40, "Output", "ExpressionUUID" -> \
"bfa50784-1640-4807-bc50-e1cf870ff8bd"]
}, Open  ]],
Cell[440206, 8847, 318, 6, 40, "Input", "ExpressionUUID" -> \
"97fad42a-9462-46a3-b737-97889d68d71d"],
Cell[CellGroupData[{
Cell[440549, 8857, 346, 6, 40, "Input", "ExpressionUUID" -> \
"ae310097-3c94-44ca-bdfd-41a1ef79ca48"],
Cell[440898, 8865, 274, 5, 40, "Output", "ExpressionUUID" -> \
"0c8501f6-ff9b-4ec6-99ef-b112a3917204"]
}, Open  ]],
Cell[441187, 8873, 211, 5, 40, "Input", "ExpressionUUID" -> \
"481c68b0-231f-487d-a276-22ef8d1d878e"],
Cell[CellGroupData[{
Cell[441423, 8882, 344, 6, 40, "Input", "ExpressionUUID" -> \
"6a65ecbc-6dca-47de-a0a0-8c5c6c2d5621"],
Cell[441770, 8890, 334, 6, 40, "Output", "ExpressionUUID" -> \
"79f60cfd-34cc-4d26-ae00-dad2e204183b"]
}, Open  ]],
Cell[442119, 8899, 212, 5, 40, "Input", "ExpressionUUID" -> \
"32092eb2-e093-4d47-a573-861967df21c0"],
Cell[CellGroupData[{
Cell[442356, 8908, 397, 7, 40, "Input", "ExpressionUUID" -> \
"2f9b61e1-fac4-4c85-8cd0-5eedf32f80b4"],
Cell[442756, 8917, 355, 6, 40, "Output", "ExpressionUUID" -> \
"c7a15d4a-beee-41c3-a765-632c67f18972"]
}, Open  ]],
Cell[443126, 8926, 213, 5, 40, "Input", "ExpressionUUID" -> \
"359667d5-43c3-4b09-bb1d-cb9ac383a8a7"],
Cell[CellGroupData[{
Cell[443364, 8935, 454, 8, 40, "Input", "ExpressionUUID" -> \
"bc400e2b-1776-4006-8104-424901327e72"],
Cell[443821, 8945, 337, 6, 40, "Output", "ExpressionUUID" -> \
"8ba0f3d4-87b2-41c9-81e0-30d18669d3dd"]
}, Open  ]],
Cell[444173, 8954, 213, 5, 40, "Input", "ExpressionUUID" -> \
"80760dfe-ed9e-4fcb-a476-c5eedc47dbf2"],
Cell[CellGroupData[{
Cell[444411, 8963, 399, 7, 40, "Input", "ExpressionUUID" -> \
"15f7b0d8-f170-4630-b017-3594610004ba"],
Cell[444813, 8972, 335, 6, 40, "Output", "ExpressionUUID" -> \
"6fd0be65-16b4-4706-9b7f-313a728afe8e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445209, 8985, 122, 2, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"9b61290d-9bb5-4521-8cb8-b7266668a682",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[445356, 8991, 665, 10, 90, "Section", "ExpressionUUID" -> \
"7e479f1a-8dc5-4969-a58d-4c82d05ba74e"],
Cell[446024, 9003, 366, 8, 39, "Text", "ExpressionUUID" -> \
"e2858ac9-c231-4ff1-89a5-120b63745397"],
Cell[446393, 9013, 4503, 103, 491, "Input", "ExpressionUUID" -> \
"a616b9dd-caae-44ff-b232-c92f159bd3c2"],
Cell[450899, 9118, 378, 8, 39, "Text", "ExpressionUUID" -> \
"c690d622-9826-4f67-919b-1796b602c179"],
Cell[451280, 9128, 2588, 61, 316, "Input", "ExpressionUUID" -> \
"1bff246e-b0be-4412-b9a6-c36ba937a510"],
Cell[CellGroupData[{
Cell[453893, 9193, 555, 9, 40, "Input", "ExpressionUUID" -> \
"21cb474a-c3c8-447f-a8f2-b28d86eb74e8"],
Cell[454451, 9204, 673, 15, 40, "Output", "ExpressionUUID" -> \
"9d20a7d6-7a2b-4c61-84a5-95d847d226c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455161, 9224, 376, 7, 40, "Input", "ExpressionUUID" -> \
"841ddb16-581a-4476-87d6-5f6a6c007856"],
Cell[455540, 9233, 464, 10, 40, "Output", "ExpressionUUID" -> \
"8a6409a1-138a-4b8a-a89f-ae312f36107f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456041, 9248, 347, 6, 40, "Input", "ExpressionUUID" -> \
"59fcd2bc-64f9-4426-b852-ac962a9f494e"],
Cell[456391, 9256, 599, 14, 40, "Output", "ExpressionUUID" -> \
"5520dd9e-2375-443c-9a2e-d7467860399e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457027, 9275, 347, 6, 40, "Input", "ExpressionUUID" -> \
"208fad73-2f62-4b94-8005-defe7e0ce832"],
Cell[457377, 9283, 536, 12, 40, "Output", "ExpressionUUID" -> \
"e6f88744-f364-4e07-9ce2-99f6b847617e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457950, 9300, 545, 9, 40, "Input", "ExpressionUUID" -> \
"aab02a83-a813-4c25-a9f7-e105ab4e13bb"],
Cell[458498, 9311, 499, 12, 40, "Output", "ExpressionUUID" -> \
"f13aaa0b-21d2-478c-b039-74ee2a416f33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459034, 9328, 235, 5, 40, "Input", "ExpressionUUID" -> \
"ffa390b5-f3b0-415c-832d-86e2b69529dd"],
Cell[459272, 9335, 211, 5, 40, "Output", "ExpressionUUID" -> \
"51d8870e-f786-4ea1-804a-9f465620c837"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459520, 9345, 344, 6, 40, "Input", "ExpressionUUID" -> \
"044d79ff-4bae-4778-9ea8-0c0613ff160e"],
Cell[459867, 9353, 483, 8, 40, "Output", "ExpressionUUID" -> \
"082c120e-ba15-47b9-9a56-18144171fb55"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

