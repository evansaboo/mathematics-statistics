(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    817881,      16394]
NotebookOptionsPosition[    791722,      15908]
NotebookOutlinePosition[    799472,      16109]
CellTagsIndexPosition[    799429,      16106]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Projekt 2 Rapport", "Title",
 CellChangeTimes->{
  3.718946313636774*^9, {3.719668385492669*^9, 3.7196683894772463`*^9}, {
   3.720910211964527*^9, 3.720910212513899*^9}, {3.720910300103295*^9, 
   3.7209103053360004`*^9}},ExpressionUUID->"ee64aa5e-899f-4dcf-a137-\
b3c9d5eb6fb7"],

Cell["\<\
Kurskod: IX1501
Datum: 2018-10-02\
\>", "Text",
 CellChangeTimes->{{3.71894631806542*^9, 3.718946331844521*^9}, {
  3.719668392524274*^9, 3.719668403477952*^9}, {3.7208712265243216`*^9, 
  3.7208712270659637`*^9}, {3.720910214721476*^9, 3.7209102150106697`*^9}, {
  3.747465557274802*^9, 
  3.747465560626356*^9}},ExpressionUUID->"7150fad8-fb33-4c90-863a-\
604a1a5d7ee2"],

Cell["\<\
Evan Saboo, saboo@kth.se
Perttu J\[ADoubleDot]\[ADoubleDot]skel\[ADoubleDot]inen , perttuj@kth.se\
\>", "Text",
 CellChangeTimes->{{3.7189463643705454`*^9, 3.7189463822791023`*^9}, {
  3.719683019602792*^9, 3.7196830569334865`*^9}, {3.747464312417004*^9, 
  3.7474643452739105`*^9}},ExpressionUUID->"88b18865-8627-443e-84b5-\
0d4359eb9469"],

Cell[CellGroupData[{

Cell["Uppgift 1: Distribution Parameters", "Subchapter",
 CellChangeTimes->{{3.718946411436574*^9, 3.718946419088299*^9}, {
  3.7196683653666553`*^9, 3.7196683787735806`*^9}, {3.7208599873922977`*^9, 
  3.7208599910643625`*^9}},ExpressionUUID->"0a5119bd-70da-47b1-99b2-\
3b454c673d51"],

Cell[CellGroupData[{

Cell["Sammanfattning", "Section",
 CellChangeTimes->{{3.719668360694542*^9, 3.7196683625540123`*^9}, {
  3.719683080005926*^9, 
  3.719683082262252*^9}},ExpressionUUID->"73423096-2919-4b20-82ea-\
b2644532926e"],

Cell[CellGroupData[{

Cell["Uppgift", "Subsection",
 CellChangeTimes->{{3.719668823822117*^9, 
  3.7196688264316235`*^9}},ExpressionUUID->"cd665067-5522-4615-a06e-\
835ff2a7dc7d"],

Cell["I denna uppgift gjorde vi f\[ODoubleDot]ljande:", "Text",
 CellChangeTimes->{{3.7208600801227264`*^9, 3.7208601383600903`*^9}, {
  3.747464459736784*^9, 
  3.747464465546101*^9}},ExpressionUUID->"f441a524-5ccf-42c0-9097-\
b598e4c07770"],

Cell[CellGroupData[{

Cell["Estimerade \[Mu] och \[Sigma] fr\[ARing]n delvis slumpad data.", "Item",
 CellChangeTimes->{{3.7208601582829876`*^9, 3.7208601810185304`*^9}, 
   3.720860495159649*^9, {3.720871720801921*^9, 3.7208717264686995`*^9}, {
   3.72087188373605*^9, 3.7208719064872155`*^9}, {3.7474644708555627`*^9, 
   3.747464470925564*^9}},ExpressionUUID->"9a851a11-4453-4520-8b89-\
f743ec6e0399"],

Cell["\<\
Testa de tre f\[ODoubleDot]ljande modellerna till den slumpade datan och v\
\[ADoubleDot]lj ut den som b\[ADoubleDot]st representerar den slumpade datan.\
\>", "Item",
 CellChangeTimes->{
  3.7208601505950933`*^9, {3.7208601875969934`*^9, 3.720860224755149*^9}, {
   3.720860380388136*^9, 3.7208604172650256`*^9}, 
   3.747464480309022*^9},ExpressionUUID->"6031bad0-40a8-47f1-afb4-\
068f75ed2200"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "a"}], " ", "x"}]]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered",
 CellChangeTimes->{
  3.7208602392558913`*^9},ExpressionUUID->"0c1a27e5-66e7-4186-a4af-\
7e7ce3df656e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered",\
ExpressionUUID->"e5fca679-8788-46e7-accf-cf475b564c1c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "b"}], ")"}], 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered",\
ExpressionUUID->"fba67ea8-de9f-4892-99b2-8bcd97bafade"],

Cell["\<\
Ber\[ADoubleDot]kna ett \[OpenCurlyDoubleQuote]Confidence Interval\
\[CloseCurlyDoubleQuote] p\[ARing] 95% f\[ODoubleDot]r de valda konstanterna \
i den valda modellen. Intervallet f\[ARing]r inte avvika mer \[ADoubleDot]n \
10% fr\[ARing]n mellanv\[ADoubleDot]rdet, e.g. \[Mu] (1\[PlusMinus]0.05).\
\>", "Item",
 CellChangeTimes->{{3.720860280383002*^9, 3.720860377528613*^9}, {
  3.7208604429382205`*^9, 
  3.7208604932376757`*^9}},ExpressionUUID->"67bc725f-57f5-40b1-9c41-\
2d5c02f563e6"]
}, Open  ]],

Cell["Den slumpade datan h\[ADoubleDot]mtades fr\[ARing]n filen \
\[OpenCurlyDoubleQuote]Projekt2.m\[CloseCurlyDoubleQuote].", "Text",
 CellChangeTimes->{{3.720871915222041*^9, 3.7208719363012476`*^9}, {
  3.7474645037436647`*^9, 
  3.7474645349558053`*^9}},ExpressionUUID->"4172e431-5c14-418a-b203-\
80a01b55ae21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resultat", "Subsection",
 CellChangeTimes->{{3.719668827900448*^9, 3.7196688313849974`*^9}, 
   3.719684958135974*^9},ExpressionUUID->"6467dae8-3faf-42a7-bd93-\
7a8076d81ace"],

Cell[CellGroupData[{

Cell["Estimering av \[Mu] och \[Sigma]:", "Subsubsection",
 CellChangeTimes->{{3.719668985414158*^9, 3.7196689952896585`*^9}, {
  3.7208590483149843`*^9, 3.720859081285428*^9}, {3.7208596704697847`*^9, 
  3.7208596771732564`*^9}, {3.7208605519281883`*^9, 3.7208605522094517`*^9}, {
  3.747464547373267*^9, 
  3.747464548956832*^9}},ExpressionUUID->"ea146864-0e5e-48ec-9543-\
c8926a1a7a01"],

Cell[TextData[{
 "Vi b\[ODoubleDot]rjade med att anv\[ADoubleDot]nda formlerna \
f\[ODoubleDot]r ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]],
  EmphasizeSyntaxErrors->True,
  FontSize->14,ExpressionUUID->"31c357e4-7fe7-49bc-adf3-16a45f81c65d"],
 " och s f\[ODoubleDot]r att estimera f\[ODoubleDot]rv\[ADoubleDot]ntnings- \
och avvikelsev\[ADoubleDot]rdena. Vi verifierade sedan v\[ARing]ra resultat \
med inbyggda versionerna f\[ODoubleDot]r \[OpenCurlyDoubleQuote]Mean\
\[CloseCurlyDoubleQuote] och \[OpenCurlyDoubleQuote]StandardDeviation\
\[CloseCurlyDoubleQuote].\n\nDatat som anv\[ADoubleDot]ndes f\[ODoubleDot]r \
detta var genererat fr\[ARing]n distribuering 0 med sample size 1000 med hj\
\[ADoubleDot]lp av \
\[OpenCurlyDoubleQuote]randomNumber\[CloseCurlyDoubleQuote] funktionen.\n\n\
Formlerna f\[ODoubleDot]r utr\[ADoubleDot]kning av ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]],
  EmphasizeSyntaxErrors->True,
  FontSize->14,ExpressionUUID->"b61c2eb0-9036-4f12-a50b-d703fa7e2856"],
 " och s var f\[ODoubleDot]ljande:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["x", "_"], "=", 
     RowBox[{
      FractionBox["1", "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubscriptBox["x", "i"]}]}]}], ",", " ", 
    RowBox[{"s", "=", 
     SqrtBox[
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", "-", "1"}]], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "n"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["x", "i"], "-", 
           OverscriptBox["x", "_"]}], ")"}], "2"]}]}]]}]}], TraditionalForm]],
   "Input",
  EmphasizeSyntaxErrors->True,
  FontSize->14,ExpressionUUID->"f3fe89f9-62a4-4408-bd93-65de3e0de482"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]],
  EmphasizeSyntaxErrors->True,
  FontSize->14,ExpressionUUID->"6a46dbf7-417a-41ba-a31f-a64ba6c2002a"],
 " = 5.20267\ns = 3.35004"
}], "Text",
 CellChangeTimes->{{3.7208596798452682`*^9, 3.720859824899585*^9}, {
  3.7208598610420637`*^9, 3.7208599291236844`*^9}, {3.7208719495831785`*^9, 
  3.7208719500050755`*^9}, {3.7474646001761513`*^9, 3.7474647607771845`*^9}, {
  3.7474647934509*^9, 
  3.747464884003972*^9}},ExpressionUUID->"f602c6f6-221c-4cf8-bb7f-\
0313590dc4f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testa de tre modellerna:", "Subsubsection",
 CellChangeTimes->{{3.7196696374645977`*^9, 3.719669649715214*^9}, {
  3.7208605419433007`*^9, 3.7208605501624727`*^9}, {3.720871976615814*^9, 
  3.7208719772720985`*^9}},ExpressionUUID->"297ac78e-12dc-4ef8-92c9-\
6d02a1569b46"],

Cell[TextData[{
 "Vi anv\[ADoubleDot]nder oss av \
\[OpenCurlyDoubleQuote]ProbabilityDistribution\[CloseCurlyDoubleQuote] och \
\[OpenCurlyDoubleQuote]EstimatedDistribution\[CloseCurlyDoubleQuote] f\
\[ODoubleDot]r att estimera v\[ARing]ra matematiska funktioner som \
distributionsmodeller gentemot v\[ARing]r data. De olika kurvorna beter sig \
olika i j\[ADoubleDot]mf\[ODoubleDot]relse med v\[ARing]r \
datam\[ADoubleDot]ngd \[DoubleStruckX], och det g\[ADoubleDot]ller att hitta \
den modell som best passar in p\[ARing] \[DoubleStruckX].\n\
F\[ODoubleDot]ljande grafer visar modellernas beteende i j\[ADoubleDot]mf\
\[ODoubleDot]relse med datam\[ADoubleDot]ngden:\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{
     RowBox[{"-", "a"}], "*", "x"}]], TraditionalForm]],ExpressionUUID->
  "e3018f5a-4143-4c1d-b594-cb02dab35cd7"],
 "\n",
 Cell[BoxData[
  GraphicsBox[{{}, {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
        0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
F2m++ldjKtW/EvhMbrU1NaCa9TslWM07o/E8VY3LVA9LUKZ39Y78WjXrf0qQ
ociP8r1dDQXVxxLkdfw2LfFxNeuHSvCxY55gQnQ1plC9LMH2FXl1W99Vs/6o
BEUzDBd4k/oC1c8S8F+cmNwyu5r1SyWI4M14U0tqCdXTEowI1/56W1jN+qcS
dL17PetoVTUmUn0thbDj9ht2tdWsnyqFOuCbegepg6jelpJZ/diXy/xq1l+V
osLiY88kqxoIqP6W4s/z94VcmxrWb5UiwtPG4u+oGoylelwK37MDtYWTa1j/
VYoGz39Pyx1qcIbqcylmdGt/zX9qDevHSvFTz/pNunMNaqlel2KI/nED+fwa
1p+Vomld4azxa2owkup3KVo5NRkc96th/VopsgZs7D/pZA1OUj0vxcb5jbLc
kBrWv5WiUWs8MDW0BlVU38tgGXmu9MDHGtbPlSHsyOSuaxNrMIzqfRnslAnV
PH4N6+/K4NdxhdzkRw38qf6XwSHTInp4u1rW75VhUO9CR/9utSinPCjDQ08H
x+E9aln/Vwb7hJ3HfUbXworyoQyG00PsL8yvZf1gGe7XxKpCXGtxhPKiDCOW
bXlgsbOW9YdlEEuso+MO1KKY4qMMJ4Ye7GbtU8v6xTIEt/vtY3i4FgMpT8oQ
P+3ANNcrtax/LAPXu2xkzwe1OEj5Uk76z6n9jn6oZf1kOQKUhvZVGbXIp7wp
R8873zvniWtZf1kOec9l7U5/rUVfyp9yiNv6nxn5t5b1m+VYnZs59pIhD/sp
j8pRsbLe2qo9j/Wf5Sj4nHl/kCkP2ZRP5Xha8Oh3Zg8e60fJ76cumzloFA+9
Ka/KId3iXFIxhsf603J8NxriNGgCD3vpdi4nfDphX7SQx/rVcuzqVXEldAkP
6ZRn5P4672nns5PH+tcKGE+2Mul7mocelG8VuPgs5fuNMzzWz1ZALjON9bjE
w07Kuwq4pYnvB93ksf62AqOawse2j+IhmfKvAhFqif/aaB7rdyuwcu3T4vQy
HrpRHlZAv0LuPq+cx/rfCiw1NdYX1vGwjfKxAi9+LZwVqeCxfrgC/GcLdseS
+gPlZQUGxR4sHtLAY/1xBXY9LvDwIXVnyk/yeXrWA1d/5bF+uQKXXi0OfULq
zZSnFfhcfe5a9C8e658r0WSlejWrkYd3lK+VuDNi+ONDTTzWT1dicW5g0DyD
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
2Qc++wtvbJIyP1UC886//ZK3SjGD8lyCfgq7GZt3SJm/KkH9KYtd43ZL0UB5
Tu53YNLciP1S5rdKULLN1nPeQSnCKM8lMFqTeNad1M3+K3kuOzOpuZ8UTpTn
UkzzdvAZf1rK/FgpbCK9vp0KkqKe8lyKBf9ej94dLGX+rBSxi/Ze4oRKcY3y
XAoPRQ9hv2dS5tdKsaule5/LL6RwpDyXosXAcfvPv5Yy/1aK1aY3S3a8l0JN
eS5FtWO3TUbJUubnkutqDT9MJfUVynMp0g5fOGOdKmX+Lrl+URvTpBopHCjP
pTB13tt9qETK/F4pXBeOz/JQSqGkPCefd0i+5tRPKfN/pfD7r9DuDqkvUZ5L
sXxn9qKgRinzg6WQ7Od0+NBCxr6PKsXbq4b9JQYy5g9LMQX8vqfbyCCnPJei
vCBk0/r2MuYXS/F08ZXd/3rKcJHyXIo2j3cOOjxQxvxjKQ69OfzKbagMkynP
pUg6d8PezlbG/GSyPpOGDrsyUgYp5bkUWz+un+M+Vsb8ZfL7ef2G/yN1COW5
FCn6PUUPpsuY3ywF79G8tbtnyGBHeU7u63Y/ddxyGfOfZajf4ZGevU4GMeW5
DHHeT15L3WTMj5Yh/+OJj1fcZQimPJdhcfDxmC3bZMyflsH5xtLbVdtlmEB5
LsPK89dXdDsiY361DAOXj/swyV8GIeW5DCffe7vNOy9j/jX5HCv/3yW3ZQik
PJdB4Tc21/WJjPnZMszN+Xk2OFqGcZTnMrhEH5qvfCZj/jZ5Lvuz061eyMCn
PJfBp3DKtbukbva7ZRjer8zO7aUMZynPZfhzOrbp+CsZ87/J/V0zUO+NkWEM
5bkMhrPSthyKkzE/XAbf/tqc06Ru/v6xDEcC9GoeJciYPy6D6/pzgUPSZfiP
8lyGtTdU3ZyKZMwvl2F9m0sHckg9ivKcrHvkt3WjuDLmn8vwMZS7L7hWhhrK
cxneOp3U38GXMT+dXLfBZeYuqQyn6OOS9+TkuzlDIWP+ugy2NikLe9XLMILy
nKznksaM9t9lzG+Xo95mrcVJUnMpz+W4MqhfdDsDOfPf5Zi4bVBPTks5TlCe
yzHA693kBlI3+/FyBE7tVs1rJ4ct5bkcL950Sd5E/l2zP0/+btykfI9ucnAo
z0ltvymgTy858+vlOPT8v6D9veUIoDyXQ7ypW/YrUjf79+R+zDU9Jg+Uw4by
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
3ldVmEt5rsHSb70S+lxTsTxTgyeJQb7y6yp8pzzXwFHGXXr0lorlmxpM6PJd
/Z7UdyjPNTh7OxSm91Us79TghseywHOpKsymPNfgRN3sdbx0Fcs/NbAyPTTR
Mk+Fr5TnGgx593qnHTnHzXkouf4bx3smxSrcojzX4JXef5YPyLluzkc1uHY+
zsCDo4Iz5bkGzq9bfx3NU7G8VAOHiXvWjyXn/jOVKw3m91h14Q+pm/NTDQbP
ENgMF6sQTnlO3t++mUlajYrlqfVIetRqcMdPKsygPK/HReGSz+bknDfnq/W4
3oo3qrKzGg2U5/XwN9hQuKCnmuWt9Wi9ocyqoJcaYZTn9fiStmZPD3M1y1/r
YbRRYfhggBpOlOf1OLBlmuuY2WqWx9Zjl7ym64AVatRTntfjqV/Y9+xVapbP
1sMu68bNMHKur1Ge18MiMW25o7ua5bX1mDEumbNpD9nHlOf12Dvr8/kL5Nw2
57f1ZC54n2gVroaa8rwekWH53z+Rc9qc59Zj5yOfuX3vq3GF8rweA4JtJ6yL
VLN8tx6Vn7rv83+mhgPleT0Swj4/CCXntDnvrYeBWUO0V7YaSsrzehz7+fO2
Q7Wa5b/1GL7vn3U5OaeXKM/rMW+MfrqxVM3y4Hrs79rhfT6p7SnP6yHJiD1k
8F3N8uF63D5b/KlXoxpyyvN6rHkyVr2+pYblxfWYa7Zp9ZcuGlykPK/HGHvr
kKAeGpYf1yPFxn1qtbkGkynPtZA1XQs810/D8mQtFoulpZFWZF9Qnmvxdebh
O2lDNSxf1mJYqmV/HxsNQijPtcjpkuCSN0zD8mYtdoz5uPjYRA3sKM+1KLhn
c6XlZA3Ln7WoiBl5fwM512LKcy1GDjw0IWaxhuXRWoSFJBl/W61BMOW5FsG/
RsyesEPD8mktZjg7dY0+SM4J5bkW3C6zwieSc9qcV2sR2v9XUWtyToWU51q0
GlI8/3G5huXXWpjED1bsbNQgkPJci5v/TfFy+6dhebYWAtdg7eyO9RhHea6F
R1uewdxO9Szf1sKZ4/7+C9mXfMpzLaL76vd3n1/P8m4t+sV+Xeyxqh5nKc+1
ODxsedD4zfUs/9biwrN1jRbFZF0oz7WITb7ZIpxXz/JwLWZGB/58Xl8PHuW5
Fp/nFpgsb6ll+bgWpfNPNMwg7/0/ynMtUv/bfevpYi3Ly7UotHhVuYk81yjK
cy1MM9bdq4vUsvy8Af8Dla3Z/g==
        "]]}, {}, {}}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{}, 
     StyleBox[
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}], 
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6], 
       Dashing[{0, Small}]], StripOnInput -> False]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Automatic, Automatic}]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.7208689388200755`*^9, 3.720869015325017*^9, 
   3.7208694755999126`*^9, 3.7208696000142937`*^9, 3.720869658906253*^9, 
   3.720870003309136*^9, 3.7208707999765234`*^9},ExpressionUUID->
  "f2b4d303-89c6-4870-abb6-79cba7224dc1"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "*", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "3b6d77e6-fe31-4900-b74d-69fd7f036fc6"],
 "\n",
 Cell[BoxData[
  GraphicsBox[{{}, {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
        0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
CfXrJehStLLleSZu0BMkcH//4m5XITOvJD9JMDBq5OiYegnVFyRo+vvxSHlL
KdgkX0kw8/OkG826SKneIMH2heKyoq5SHCPphlmvUuWbG92lVH+Q4MC7TQ+C
+0jhSPIZs17Dfnz17yuleoQEZWHv+SWDpSgl+U0CSWv3/7oOl1J9Qor4Ufte
XJothS/Jd1I84PPD1i2WUr1Cip1xTes9V0vhQPKfFF/unjQmb5NS/UKKZhdq
u/zxkqKE5EMpPBJ6TRuxQ0r1DOZ1n8fBm5j4MMmPUuxwfDVFdUpK9Q0pro3w
abPaX4o+JF9KcePepv7TAqVU72B+L2pdvfmiFEUkf0oR7Nqo+0kmbtA/mHGE
+8wYGyKFD8mnUkzzmxbaPlRK9RApejVJbbnkoZR+v0EK10nezZyfS6k+IkXe
8mAWN1+KApJvmftf73RGWCeleokUm5wbdVUMkOEAyb9S3FYdKV0wSkb1Eymu
PnNK8p8kQw+Sj6UYs+KV60smbtBTpEi8cmsmGzLkkfwsRctj3ldGu8qoviKF
Ke7Br/5zZPAm+ZqZF6/9Q50XyKjeIoXXANzq4SFDN5K/pXiz8PjvU0zcoL8w
6/f+c/T61TLkkHwuxQuhvmkEEzfoMVK0V/6qvbpBhr0kv8twenBX78UbZVSf
kcEkPFs5ZLsMXUi+Z66T5nmu/U4Z1WtkzLqfv3tstwxZJP/LUOa979CoIzKq
3zCfX/Fw9yUm3k14IMNCj785Hn4yqufIMH+iIWTveRk6ET7I8DLhaum9QBnV
d2TwbR8hKGRiFuGFDLs6jErxDZJRvUcG6eiJ4csvybCT8EOGiSXnt2UGy6j+
w8yLnTmhXYgM9oQnMszsVOSx8qGM6kEyREc9/REeKaPfZ5Ehxm5eR/cYGdWH
mHH+GzviUZIMXoQ3Mqg8xmY0T5FRvYi5b+W6QS1TZWhP+CODpNf0g9OYuEE/
kiH4zA99OUtGv58jw91j+z59z5JRPUmGozOs+/8rlMGT8EmG1Y17Ne0vl1F9
iRnXqAdzQn7KYEd4JcPY1mmNhzWTU72JGde6YdpjbeR4T/glw+vcbiHeneVU
f5KBHTuL/7WrHFsJz5j77GxcurC3nOpRcri8+Tt83iA52hC+yRF/XzGvx3A5
1afkiHb1W+g0Wo5kwjs5Tu/La85zllO9So7ImrGrAyfJsZnwT47f7epFq5fJ
qX4lR2zTyUGq9XLYEh7K4eS3OOOTv5zqWXLMn1ArYZ2VI5HwUY7CkBVjJEFy
qm8x46m+3TM0RI6NhJdyuOXattI9kVO9S45x/zltafVcjpaEn3Lsia6b2yZC
TvUvOayWJK1OjGKuQ3jK/I6yThAzcYMeJsc9TsRb6yQ5/f6SHGsnnH9zMlNO
9TE5wtf8u/ozV47mhLdynGBfep/CllO9TM5wZ8DAZD7znIS/csy7Mby8j1lO
9TM5elWNX7zEWsFc17Jh5BA3fXeoto2C6mlyrBS8rLRpp0BTwmc5et7udvG+
vYLqa3LYp3SOih+oQAzhtRwLE3qGZQ9TUL2NWZcNX487TlRgNeE3M77EzaWN
Zimo/ma5X1It31cBG8JzBbr0X/mjJEhB9TgmRmWHtDsKvCE8Zz5363+ebUMV
VJ9TYPq0oHNzIxTwIDxXYMS+HZdDIxVUr1Og1ctfb32iFLAmPFfg2ts9TXtF
K6h+p8DUtWvdxjHxK8JzBVao7eLVSQqq5ymwwK9iICeNeZ3wXIHnOc8CatMV
VN9T4Py8tyc5pQpYkf5fgdmdtzgfqVBQvU+BlP+ltxjFUyCa8FyBid98yv8J
FFT/U+B/xeO3OcoVcCc8V2Dx6Zuo/qygeqACPQzSZnXfFfT7agqEn1o6qKO1
kuqDCqRLl/OONlMikvCcmWdxvcP7XkqqFzLPV7+eG9tXiaWE5wp8T3v8s4WD
kuqHCgR6Pqg+PVWJ34TnCsD3gnL/NCXVExUY+LvZB9/ZSkQQnivg2zshPoGJ
G/RFBRwWLArf667EYsJzBdbrk76sXaGkeqMCj/4e5/fcpEQ94bkCYS9tLz3d
oaT6I3N/le1IBROHE54rYbqz7u/SQ0qqRyoxY0xk05u+SiwkPFdC/OZn48XH
lVSfVCLv+ZTNHk+U+B/huRKa0B+yXS+UVK9U4nBSzZucDCWeEp4rUfLf09b/
mLhBv1Ti/YW1Q0/nKrGA8FyJR9cqUp7nK6meqYRW5NzZWKTED8JzJTY97b4j
ka2k+qYSbQ75DVzFVyKM8JwZ58v+MSKBkuqdSijGj/JWiJWYR3iuxOnrA/cF
qZVU/1RiCGvhf6c+KfGN8FyJjWfiPs/7rKR6qBKXN/wZp/2ppN9PVGLdl+17
L/1PSfVRJVxOtf3Spk6JOYTnSlz9eFk8zlpF9VIlEpxGfHdoqsIXwnMlHtyI
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
D/ysQ3vCcx1ONJ8w7scXHfWPdGjc580Y8w8d0sh21qFf1DaHjfU66icx4xB2
vhLAxJ6E58z8tuM1Flvpqb+kh/7Xi4t3bPSwIzzXY0lcrztDm+up36THafGp
vCN2erwnPNfjY8DWu3Xt9NR/0uNlrkPUxe56bCU812Op24V3Ib301I/Sw4Z1
a4O0rx5tCM/1KJiwUfzKUU/9Kebvzj2umjNMj2TCcz2++Tyt8B+lp36VHp6h
D5uFTdBjM+G5Htvu50wLmKmn/pUePZrkhs+ZpYct4bkeG4+OFGQs0lM/Sw+E
JnwVbdAjkfBcD3Py762bN+upv6XHHOvWZ6fvYP6O8FyP21fUl9336anfxfyd
jeMNHhO3JDzX40jWiqRJB/XU/2LeD537fO8xPeIJz/W4aZ9tN/WEnvpheqR3
jFs7IkBP/39ID3aj0lFNAvXUH9ND57nP+cAVPZoTnuvxcwoOD36qp34ZM//+
gdVREXrEEp7r8fB99p+SKD31z/TItDf7ro3VYy3huR4bZi97PzxFT/00PZzm
vVReTtWjKeG5ATnjhrWoTdNTf82AiWPinK9/1COG8NyAfjuDjvpy9NRvM8Dv
nHNkOTOO1YTnBlRGngsoV+mp/2ZAxwNb1oh+MOtMeG7A2HOLVxmZuMGPM2Ck
YWHk3Do93hCeGxARFVW0r5GB+nMGsBsHun5lYg/CcwNqnD2kuU0M1K8zIH9W
YtDBpgZYE54b8DvS9W2rtgbq3xnQKHDEl7pOBrwiPDfgJu8kx5oZd4OfZ8BC
/sGAN10NWEF4bsDidrcnpPU1UH/PgEvzfzrudjDA6pTlgQ1IK3N/vs3JQP0+
A558cmNlORsQTXhuQM+XiiZJzHM1+H/M/Xz7Xbk6wwB3wnMDen+f8dxjloH6
gcz9Umd17etqwF/CcwOaBFX2kLsZqD9ogE3H/VzhIgMiCc8NKGm73fxluYH6
hQbMmNos78EKA5YSnhtwN3VTosNGA/UPDXgqPtR2HBP/Jjw3oPUu0yPRbgP1
Ew0Ij3fp/pGZlwjCcyPmlknWPjhooP6iEfr+3WZHMPFiwnMjWpeMMrmdMFC/
0Yjj96XXd580oJ7w3IhqzpJ9vS8aqP9ohPvLDX9X3WbuQ3huhKZg9q7shwbq
RxqRfqXToA1xzDoQnhthNUlQd5SZlwZ/0ogn3j6/dmUY8D/CcyOMGzqwzzLP
0eBXGlH54UgdfjDPSXhuhG5mWvLCnwbqXxqh2tBe8N9vAxYQnhsRf/qsr5qJ
G/xMI8M/ZTPBXwN+EJ4b0SX55+XqxkbqbxpR4uL0uIeNEWGE50ZcuikTmFoY
qd9pRLjkyBbRUCPmEZ4bsen+qU8eI4zU/zSiqGJXcrOxRnwjPDfC53Dk1lnM
PDT4oUbcXrjp7YKJRjwiPDdCOmX0V9dpRuqPGrHUOETQbboRcwjPjejp/S15
whwj9UuNELmMKp8714gvJF0ZEduaO7vHPCP1T43oPL5iTtBCIx4QnhtxztNb
WczMY4OfasLVx0+/tltrxGzCcxMyjkZpPPyM1F81IS9/zYc+J434RHhuwrst
2n+V543UbzXhc1r3JusDjbhHeG6CeM2lwS+ZuMF/NeE+u1nmdmYeZxKem3Dp
ouNb9yQj9WNNeJ5UVjk2xwgT4bkJI2r3plbmGak/a8LGCwbbS2VG3CU8N4F/
50VSb66R+rUmZB7eGdC+xojphOcmnLUq/bfzp5H6tyYc71J4dm4zEwyE5ybE
XHr4+WUbE/VzTegrjUznM/FtwnMTjF8975V0MFF/lxnPi5BuT7uYMJXw3ISn
FR1eTGSes8HvNUExc/fTDyNN0BGem3Bgclh4u+km6v+a0CQvc92umSaEEJ4z
z8865CqZb6J+sAm3+GzOlQUmTCE8N6HX9kVnXFabqD9swki/J2mKdSZoCM9N
GCv41Ve13UT9YhPG9dmQn+Bjwg3Cc+b1OyNq7h41Uf+YeY5hS6x8/UxwITw3
Y608a9e2ABP1k824IE8ovsDMg4rw3AzXFt1jjwWaqL9sxuSMris+XTThGuG5
mTk/R8UdLpmo32xG3EhFkO0tEyYSnpsxw7THwYmZtwb/2Ywx11zEmWHMPBGe
mxFRcN51dLSJ+tFmOA7+LW72zoQrhOdmjFw3wmdFuon602bUT7oRZFVkgjPh
uRmH57rt28AzUb/ajItfO+05IzJBRnhuxvbBKz9625mpf22G7OGQ36+HmBFM
eG7GiGb7bR1GmKmfbYbth+9HW08wYxzhuRntcr/3TmPiBn/bDNX+VlrJJjMk
hOdm5K8c92HQZjP1u80YmPdvzncvM4IIz81gje7ws5u3mfrfZlzPXxvxJZqZ
B8JzM6QP7ZftfmemfrgZAu70IHGyGWLCczOmt5vOqsoyU3+cGU/FnxWvmc8F
Ep6b0WGN0/3WEjP1y83YPdB7TLrJjFGE52bYXOvixf9hpv75J/wfh2jJ7w==

        "]]}, {}, {}}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{}, 
     StyleBox[
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}], 
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6], 
       Dashing[{0, Small}]], StripOnInput -> False]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Automatic, Automatic}]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.7208689398982563`*^9, 3.7208690179345255`*^9, 
   3.720869475914118*^9, 3.720869600252463*^9, 3.7208696592254753`*^9, 
   3.7208700035382977`*^9, 3.720870800267729*^9},ExpressionUUID->
  "77079e14-5e0f-4ed6-b320-3ef71267ffb0"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", 
     RowBox[{"x", "+", "b"}], ")"}], "*", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "a89a63d4-6bae-4b78-84ba-727900d35349"],
 "\n",
 Cell[BoxData[
  GraphicsBox[{{}, {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
       LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
        0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
/dZQ//wz/gelfwAU
        "]]}, {}, {}}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{}, 
     StyleBox[
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}], 
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6], 
       Dashing[{0, Small}]], StripOnInput -> False]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Automatic, Automatic}]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.720868941195202*^9, 3.720869020075259*^9, 
   3.7208694762013206`*^9, 3.7208696005997086`*^9, 3.720869659518682*^9, 
   3.7208700039155645`*^9, 3.7208708008101125`*^9},ExpressionUUID->
  "84ffbeb3-b151-4c59-b5a1-3ae96fadb955"],
 "\n\nVi ans\[ARing]g att den sista modellen, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", 
     RowBox[{"x", "+", "b"}], ")"}], "*", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "fbffc90d-2e74-4fa4-b7d2-7b42aec8547a"],
 ", gav en funktion som b\[ADoubleDot]st \
\[ODoubleDot]verrensst\[ADoubleDot]mmde med \[DoubleStruckX]. \nKonstanterna \
a och b fick de estimerade v\[ADoubleDot]rdena 0.5052 respektive 2.3404."
}], "Text",
 CellChangeTimes->{{3.7208719685372763`*^9, 3.720871971443676*^9}, {
  3.7208720279778266`*^9, 3.720872066208397*^9}, {3.7208721243363805`*^9, 
  3.7208721267271285`*^9}, {3.7208722275021515`*^9, 3.720872238502716*^9}, {
  3.7208724326010685`*^9, 3.720872931634963*^9}, {3.720873077763973*^9, 
  3.7208731024354186`*^9}, {3.720873134872236*^9, 3.7208731974788055`*^9}, {
  3.720887124410872*^9, 3.7208871702287726`*^9}, {3.720887256911767*^9, 
  3.7208873332047477`*^9}, {3.747464943441019*^9, 3.7474649770053844`*^9}, {
  3.747465038972645*^9, 3.747465038972645*^9}, {3.7474654791641417`*^9, 
  3.7474655366556425`*^9}, {3.747466005196553*^9, 
  3.747466015789849*^9}},ExpressionUUID->"163409c9-7fad-4aa4-8e49-\
3571ca0dbb0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ber\[ADoubleDot]kna \[OpenCurlyDoubleQuote]Confidence Interval\
\[CloseCurlyDoubleQuote]", "Subsubsection",
 CellChangeTimes->{
  3.719669934260833*^9, {3.7208605552877355`*^9, 
   3.7208605645850863`*^9}},ExpressionUUID->"2f930b85-b437-4052-868c-\
c216df6ffdc9"],

Cell["\<\
M\[ARing]let h\[ADoubleDot]r \[ADoubleDot]r att hitta de gr\[ADoubleDot]nsv\
\[ADoubleDot]rden f\[ODoubleDot]r a och b som ger ett \
\[OpenCurlyDoubleQuote]coinfidence interval\[CloseCurlyDoubleQuote] d\
\[ADoubleDot]r intervallets l\[ADoubleDot]ngd inte \[ODoubleDot]verstiger 10% \
av deras mittv\[ADoubleDot]rden.
Vi anv\[ADoubleDot]nde v\[ADoubleDot]rdena f\[ODoubleDot]r a och b \
fr\[ARing]n den f\[ODoubleDot]reg\[ARing]ende uppgiften som hj\[ADoubleDot]lp \
f\[ODoubleDot]r att hitta gr\[ADoubleDot]nsv\[ADoubleDot]rdena, och anv\
\[ADoubleDot]nde metoden i sektion 2.2.3.2 f\[ODoubleDot]r att manuellt r\
\[ADoubleDot]kna ut intervallen f\[ODoubleDot]r a och b. D\[ARing] de f\
\[ODoubleDot]rsta intervallen var st\[ODoubleDot]rre \[ADoubleDot]n \
b\[ARing]das mittv\[ADoubleDot]rden \[ODoubleDot]kade vi v\[ARing]rt \
samplesize f\[ODoubleDot]r att f\[ARing] ett mindre intervall. Vi beh\
\[ODoubleDot]vde \[ADoubleDot]ven estimera a och b p\[ARing] nytt och fick de \
till:
a = 0.4970
b = 3.2144
Med den nya samplesizen fick vi nya intervall som b\[ARing]da l\[ARing]g inom \
10% av vardera mittv\[ADoubleDot]rden.

De nya intervallen blev f\[ODoubleDot]ljande:
a: {0.479054,0.514946}
b: {3.19643,3.23232}
\
\>", "Text",
 CellChangeTimes->{{3.720873367680896*^9, 3.7208734167302723`*^9}, {
  3.7208734530990667`*^9, 3.7208734794812746`*^9}, {3.720879461559981*^9, 
  3.720879526391433*^9}, {3.7208862148304806`*^9, 3.7208862380504303`*^9}, {
  3.7208864788165226`*^9, 3.7208865209280577`*^9}, {3.7208865740302095`*^9, 
  3.720886615141701*^9}, {3.7208869351413584`*^9, 3.7208870150731745`*^9}, {
  3.720887056196471*^9, 3.720887116197672*^9}, {3.7474655686299543`*^9, 
  3.7474656767808247`*^9}, {3.7474657276247454`*^9, 3.7474658993201885`*^9}, {
  3.7474659510208387`*^9, 
  3.7474660365929832`*^9}},ExpressionUUID->"03bcb37d-20cc-401c-b3e5-\
bcfb7f08ee1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kod", "Section",
 CellChangeTimes->{{3.71968308557257*^9, 
  3.719683085906913*^9}},ExpressionUUID->"95680a21-109c-4e8d-953c-\
0ce9d7d38baf"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Once", "[", 
  RowBox[{"Get", "[", 
   RowBox[{"\"\<Project2.m\>\"", ",", "\"\<IX1501\>\""}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7208598065548925`*^9, 3.720859807258056*^9}, 
   3.7476332012381907`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"89a95ce5-bfdc-4c96-bdec-035d179310b9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Point estimates for ",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],ExpressionUUID->
  "96b4f7bc-2d2c-42c1-aac1-48814e06d84a"],
 " and ",
 Cell[BoxData[
  FormBox["\[Sigma]", TraditionalForm]],ExpressionUUID->
  "9292c6a3-44a5-4c30-95f2-75a8e246e6ec"]
}], "Subsubsection",
 CellChangeTimes->{{3.71955456579865*^9, 3.7195545681581445`*^9}, {
  3.747466575771942*^9, 
  3.7474665911320677`*^9}},ExpressionUUID->"31dd2a80-60f8-4bc8-bf17-\
812e81d87d20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "  ", "=", " ", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"0", ",", "n"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.746605580499049*^9, {3.746609916901572*^9, 3.746609918739422*^9}, {
   3.7466099830134077`*^9, 3.7466099838072853`*^9}, {3.74661015433045*^9, 
   3.746610182562934*^9}, 3.7466102950708475`*^9, 3.746613963018067*^9, 
   3.7470697992652636`*^9, 3.7470700188033075`*^9, 3.7476331663008337`*^9, 
   3.747633264337367*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"e6da2176-1da6-42e6-a3ee-2ede01599ec0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xu", "=", " ", 
  RowBox[{
   RowBox[{"Total", "[", "r", "]"}], " ", "*", " ", 
   RowBox[{"1", "/", 
    RowBox[{"Length", "[", "r", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.746603690849842*^9, 3.7466037160342474`*^9}, {
  3.746608962816404*^9, 3.7466089959242597`*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"86118183-68aa-4d85-8677-7d1e9878c682"],

Cell[BoxData["5.263864377545695`"], "Output",
 CellChangeTimes->{3.7466037301956453`*^9, 3.746604097193655*^9, 
  3.7466055852914653`*^9, 3.746609033300478*^9, 3.7466099223013186`*^9, 
  3.746609985772564*^9, 3.7466101629108267`*^9, 3.7466102053351994`*^9, 
  3.7466103006368265`*^9, 3.7466139681005754`*^9, 3.7466142004529333`*^9, 
  3.746616146698103*^9, 3.7466162325695515`*^9, 3.746616312798684*^9, 
  3.7466163438088856`*^9, 3.7466164347577343`*^9, 3.746616777566614*^9, 
  3.746616903501928*^9, 3.746621095862278*^9, 3.7474630575422363`*^9, 
  3.7476330644961576`*^9, 3.7476331265220084`*^9, 3.7476350550323553`*^9, 
  3.747638111151273*^9},
 CellLabel->
  "Out[592]=",ExpressionUUID->"98b0b125-a7e9-451f-82ba-46d5a503309f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "u_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"u", "-", "Xu"}], ")"}], "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.7466037639243364`*^9, 3.746603764270441*^9}, {
  3.746609007174424*^9, 3.7466090093076305`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"128ad7d7-e5b1-46f6-a11a-1e55cbd71b39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "r", "]"}], " ", "-", " ", "1"}], ")"}]}], 
     ")"}], "*", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"f", ",", " ", "r"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7466089995257645`*^9, 3.7466090009684105`*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"1adbc8c8-0fcd-4bcf-aee1-6acf6eebf16d"],

Cell[BoxData["3.3964511272466034`"], "Output",
 CellChangeTimes->{
  3.746603769358655*^9, 3.746604097238537*^9, 3.7466055853912*^9, 
   3.746609033369955*^9, 3.7466099223440514`*^9, 3.7466099858214345`*^9, 
   3.746610162997596*^9, 3.7466102055536146`*^9, 3.74661030072858*^9, 
   3.746613968145455*^9, 3.7466142004788647`*^9, 3.7466161467270164`*^9, 
   3.746616232596446*^9, 3.746616312823618*^9, 3.7466163438358135`*^9, 
   3.746616434779676*^9, 3.7466167775895524`*^9, 3.7466169035198793`*^9, 
   3.74662109588023*^9, 3.7474630576047297`*^9, 3.7476330645561094`*^9, {
   3.7476364919918795`*^9, 3.7476364970132027`*^9}, {3.747638116015562*^9, 
   3.7476381230978675`*^9}},
 CellLabel->
  "Out[595]=",ExpressionUUID->"b1102933-30cb-4c90-9470-fad73325f0cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Mean", "[", "r", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "r", "]"}]}], "Input",
 CellChangeTimes->{{3.746603749407057*^9, 3.746603779671295*^9}},
 CellLabel->
  "In[673]:=",ExpressionUUID->"3860a9ff-9922-42bb-981f-a4d2e3cf1363"],

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"randomNumber", "[", 
   RowBox[{"0", ",", "1000"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.746603780094077*^9, 3.7466040972664614`*^9, 
  3.746605585418128*^9, 3.746609033396882*^9, 3.746609922370978*^9, 
  3.746609985847364*^9, 3.746610163026519*^9, 3.746610205577551*^9, 
  3.7466103007525167`*^9, 3.746613968174378*^9, 3.746614200497321*^9, 
  3.7466161467459655`*^9, 3.7466162326114335`*^9, 3.746616312839616*^9, 
  3.7466163438517714`*^9, 3.746616434795634*^9, 3.7466167776055098`*^9, 
  3.746616903534845*^9, 3.7466210958941927`*^9, 3.7474630576203675`*^9, 
  3.747633064584066*^9},
 CellLabel->
  "Out[673]=",ExpressionUUID->"cd019ac0-8668-412c-bc22-fc020ab5c378"],

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"randomNumber", "[", 
   RowBox[{"0", ",", "1000"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.746603780094077*^9, 3.7466040972664614`*^9, 
  3.746605585418128*^9, 3.746609033396882*^9, 3.746609922370978*^9, 
  3.746609985847364*^9, 3.746610163026519*^9, 3.746610205577551*^9, 
  3.7466103007525167`*^9, 3.746613968174378*^9, 3.746614200497321*^9, 
  3.7466161467459655`*^9, 3.7466162326114335`*^9, 3.746616312839616*^9, 
  3.7466163438517714`*^9, 3.746616434795634*^9, 3.7466167776055098`*^9, 
  3.746616903534845*^9, 3.7466210958941927`*^9, 3.7474630576203675`*^9, 
  3.7476330645920296`*^9},
 CellLabel->
  "Out[674]=",ExpressionUUID->"1293dc23-5677-4f71-8ba9-6df3c65aedfd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing different models", "Subsubsection",
 CellChangeTimes->{{3.7195545805526333`*^9, 3.7195545825371113`*^9}, {
  3.7474666401868467`*^9, 
  3.7474666450170646`*^9}},ExpressionUUID->"c8e275c2-d9b7-4e53-b3f0-\
3ab05673f30a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", "[", 
   RowBox[{"pf_", ",", " ", "assum_", ",", " ", "r_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", " ", "pdf", ",", " ", "D", ",", " ", "myDist", ",", " ", 
      RowBox[{"a", " ", "=", " ", "assum"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"Integrate", "[", 
       RowBox[{"pf", ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}], " ", 
        ",", " ", 
        RowBox[{"Assumptions", " ", "\[Rule]", "  ", "a"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"1", "/", "i"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pdf", "[", "x_", "]"}], " ", ":=", " ", 
      RowBox[{"c", "*", "pf"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"D", "[", "a_", "]"}], " ", ":=", " ", 
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        RowBox[{"pdf", "[", "x", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}], ",", 
        " ", 
        RowBox[{"Assumptions", " ", "\[Rule]", " ", "a"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myDist", " ", "=", " ", 
      RowBox[{"EstimatedDistribution", "[", 
       RowBox[{"r", ",", " ", 
        RowBox[{"D", "[", "a", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ProbabilityPlot", "[", 
      RowBox[{"r", ",", " ", "myDist"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7466044756860285`*^9, 3.746604492574947*^9}, {
  3.746604620991843*^9, 3.746604966339212*^9}, {3.746605014555368*^9, 
  3.7466051083865814`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"69775ec8-9f6f-4937-87d3-041cfc8db761"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "*", "x"}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
     RowBox[{"Assumptions", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"a", " ", ">", " ", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{"1", " ", "/", " ", "i"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdf", " ", "=", " ", 
   RowBox[{"c", "*", 
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"xbar", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "*", "pdf"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", " ", "\[Rule]", "  ", 
     RowBox[{"{", 
      RowBox[{"a", " ", ">", " ", "0"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", " ", "/", " ", "Xu", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"xbar", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", "a"}], " ", "=", 
      RowBox[{
       RowBox[{">", " ", "a"}], " ", "=", " ", 
       RowBox[{"1", "/", "xbar"}]}]}]}], ",", " ", 
    RowBox[{
    "d\[ADoubleDot]r", " ", "xbar", " ", "\[ADoubleDot]r", " ", "Xu", " ", 
     "vi", " ", "r\[ADoubleDot]knat", " ", "ovan"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.747634857596122*^9, 3.747634929000726*^9}, 
   3.7476356066988726`*^9, {3.7476356585655775`*^9, 3.747635725903618*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"d2969d3f-4dc8-4f8b-932f-8ca7aa0a0d64"],

Cell[BoxData[
 FractionBox["1", "a"]], "Output",
 CellChangeTimes->{{3.747635704364396*^9, 3.74763573287031*^9}, 
   3.747637153719832*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"26366df1-ad70-44c5-b66e-9ff2aa1f7e1b"],

Cell[BoxData["0.1945473036727307`"], "Output",
 CellChangeTimes->{{3.747635704364396*^9, 3.74763573287031*^9}, 
   3.747637153723827*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"4353f9b4-32dc-4c0a-9520-e8a5fff01122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"dist", "[", 
    RowBox[{
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "*", "x"}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"a", ">", "0"}], "}"}], ",", " ", "r"}], "]"}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"pdf", 
      RowBox[{"(", "x", ")"}]}], "\[Proportional]", " ", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}], ",", " ", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7466051138034983`*^9, 3.7466051415755672`*^9}, {
  3.7466052250574503`*^9, 3.746605256656598*^9}, {3.7466052868689227`*^9, 
  3.746605298062162*^9}, {3.7466053539788356`*^9, 3.74660539052711*^9}, {
  3.7474668071176963`*^9, 3.7474668201251907`*^9}},
 CellLabel->
  "In[677]:=",ExpressionUUID->"b3eaebea-7e51-47b3-b8fd-d6b56b976135"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.7466053037768726`*^9, {3.746605379883073*^9, 3.7466053915093193`*^9}, 
   3.746605586642396*^9, 3.7466090344500685`*^9, 3.7466099229395494`*^9, 
   3.7466099863048224`*^9, 3.746610164017373*^9, 3.7466102123523564`*^9, 
   3.7466103019880075`*^9, 3.7466139689019394`*^9, 3.74661420081349*^9, 
   3.74661614704716*^9, 3.7466162329355383`*^9, 3.7466163131098523`*^9, 
   3.746616344122048*^9, 3.746616435057932*^9, 3.7466167791892757`*^9, 
   3.746616903811101*^9, 3.746621096154496*^9, 3.7474630780190544`*^9, 
   3.7476330846492343`*^9},
 CellLabel->
  "Out[677]=",ExpressionUUID->"58372901-e5bd-4b4e-9d2d-8f67743e8726"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i1", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"\[ExponentialE]", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
     RowBox[{"Assumptions", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"a", " ", ">", " ", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", " ", "=", " ", 
   RowBox[{"1", " ", "/", " ", "i1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdf1", " ", "=", " ", 
   RowBox[{"c1", "*", "x", "*", 
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"xbar1", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "*", "pdf1"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", " ", "\[Rule]", "  ", 
     RowBox[{"{", 
      RowBox[{"a", " ", ">", " ", "0"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"2", " ", "/", " ", "Xu", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"xbar", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", "/", "a"}], " ", "=", 
      RowBox[{
       RowBox[{">", " ", "a"}], " ", "=", " ", 
       RowBox[{"2", "/", "xbar"}]}]}]}], ",", " ", 
    RowBox[{
    "d\[ADoubleDot]r", " ", "xbar", " ", "\[ADoubleDot]r", " ", "Xu", " ", 
     "vi", " ", "r\[ADoubleDot]knat", " ", "ovan"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.746605176155999*^9, 3.7466051904162188`*^9}, {
  3.746605396094891*^9, 3.7466053980491676`*^9}, {3.747466755267557*^9, 
  3.747466767687421*^9}, {3.747635747131259*^9, 3.747635776388186*^9}, {
  3.747635816562688*^9, 3.7476358619538584`*^9}, {3.7476371256453395`*^9, 
  3.7476371501246357`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"233b4c58-58ad-4573-8bb2-dc63d67887f1"],

Cell[BoxData[
 FractionBox["2", "a"]], "Output",
 CellChangeTimes->{
  3.746605143819029*^9, 3.746605197770692*^9, 3.746605399124672*^9, 
   3.746605587845253*^9, 3.7466090357074895`*^9, 3.7466099237523737`*^9, 
   3.746609986934145*^9, 3.746610165227157*^9, 3.746610221006869*^9, 
   3.746610303329729*^9, 3.7466139695811243`*^9, 3.7466142011515856`*^9, 
   3.7466161473433685`*^9, 3.746616233223768*^9, 3.746616313393095*^9, 
   3.746616344434213*^9, 3.746616435347159*^9, 3.7466167799133396`*^9, 
   3.7466169041152883`*^9, 3.746621096443723*^9, 3.7474630787457895`*^9, {
   3.747635768878204*^9, 3.7476357775106707`*^9}, {3.7476358309033422`*^9, 
   3.7476358516875753`*^9}, {3.7476371331153584`*^9, 3.747637156192529*^9}},
 CellLabel->
  "Out[165]=",ExpressionUUID->"28ea1772-baa5-47e5-a900-6a8c21d922d8"],

Cell[BoxData["0.3890946073454614`"], "Output",
 CellChangeTimes->{
  3.746605143819029*^9, 3.746605197770692*^9, 3.746605399124672*^9, 
   3.746605587845253*^9, 3.7466090357074895`*^9, 3.7466099237523737`*^9, 
   3.746609986934145*^9, 3.746610165227157*^9, 3.746610221006869*^9, 
   3.746610303329729*^9, 3.7466139695811243`*^9, 3.7466142011515856`*^9, 
   3.7466161473433685`*^9, 3.746616233223768*^9, 3.746616313393095*^9, 
   3.746616344434213*^9, 3.746616435347159*^9, 3.7466167799133396`*^9, 
   3.7466169041152883`*^9, 3.746621096443723*^9, 3.7474630787457895`*^9, {
   3.747635768878204*^9, 3.7476357775106707`*^9}, {3.7476358309033422`*^9, 
   3.7476358516875753`*^9}, {3.7476371331153584`*^9, 3.747637156196537*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"c9dc41a8-dc26-4d91-935a-a6042f55c396"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", " ", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.7476367544452505`*^9, 3.7476367571176834`*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"3841475d-bc8b-4e2b-9591-eaddaf4758a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i2", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"(", 
       RowBox[{"x", " ", "+", " ", "b"}], ")"}], "*", 
      RowBox[{"\[ExponentialE]", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
     RowBox[{"Assumptions", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", " ", ">", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ">", "0"}], "}"}]}], " ", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"1", " ", "/", " ", "i2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdf2", " ", "=", " ", 
   RowBox[{"c2", "*", "x", "*", 
    RowBox[{"(", 
     RowBox[{"x", "+", "b"}], ")"}], "*", 
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"xbar2", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "*", "pdf2"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", " ", "\[Rule]", "  ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", " ", ">", " ", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ">", "0"}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.747635870861963*^9, 3.7476358768659353`*^9}, {
   3.747635917739332*^9, 3.7476359771479635`*^9}, {3.7476360476617594`*^9, 
   3.747636098673607*^9}, {3.7476367314000387`*^9, 3.7476367365693035`*^9}, 
   3.747639615259227*^9},
 CellLabel->
  "In[607]:=",ExpressionUUID->"0872fc31-efaf-46d9-845f-b8dcc16c697b"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "3"], 
    RowBox[{"2", "+", 
     RowBox[{"a", " ", "b"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7476359782864428`*^9, 3.747636074394046*^9, 3.747636115139611*^9, 
   3.7476367676556025`*^9, {3.747638081905453*^9, 3.7476380953654923`*^9}, 
   3.7476396267082844`*^9},
 CellLabel->
  "Out[608]=",ExpressionUUID->"d71b4f61-f609-4ce4-a20e-ac38307b930c"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"6", "+", 
     RowBox[{"2", " ", "a", " ", "b"}]}], 
    RowBox[{
     RowBox[{"2", " ", "a"}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", "b"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7476359782864428`*^9, 3.747636074394046*^9, 3.747636115139611*^9, 
   3.7476367676556025`*^9, {3.747638081905453*^9, 3.7476380953654923`*^9}, 
   3.7476396278252277`*^9},
 CellLabel->
  "Out[610]=",ExpressionUUID->"e74a515c-22b4-4fb8-9ac2-e91710ff927b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sigma", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"pdf2", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "Xu"}], ")"}], "^", "2"}], ")"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", " ", "\[Rule]", "  ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", " ", ">", " ", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ">", "0"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747636012480759*^9, 3.7476360400201607`*^9}, {
  3.7476361457149267`*^9, 3.747636153332775*^9}, {3.747636261346062*^9, 
  3.7476362624125166`*^9}, {3.7476365932647004`*^9, 3.7476365982381353`*^9}, {
  3.747637303699464*^9, 3.74763731541984*^9}, {3.7476381505139003`*^9, 
  3.7476381679792795`*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"d04086a5-5a77-4148-b8f0-c3476ac923a5"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"24.`", "\[VeryThinSpace]", "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"55.41653637038905`", "\[VeryThinSpace]", "-", 
        RowBox[{"21.05545751018278`", " ", "b"}]}], ")"}]}], "+", 
     RowBox[{"27.708268185194527`", " ", 
      SuperscriptBox["a", "3"], " ", "b"}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "63.16637253054835`"}], "+", 
        RowBox[{"6.`", " ", "b"}]}], ")"}]}]}], 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"a", " ", "b"}]}], ")"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7476373165063543`*^9, 3.7476380991889486`*^9, 
  3.747638134172633*^9, 3.747638169021282*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"80852f04-f114-402d-bb63-a4026f352695"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"xbar2", " ", "\[Equal]", " ", "Xu"}], " ", "&&", " ", 
   RowBox[{"sigma", "\[Equal]", " ", 
    RowBox[{"S", "^", "2"}]}], " ", "&&", " ", 
   RowBox[{"a", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"b", ">", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7476362661236076`*^9, 3.7476362682726545`*^9}, {
   3.7476363448303757`*^9, 3.7476363791804857`*^9}, {3.747636502845577*^9, 
   3.7476365299012756`*^9}, 3.7476366351126733`*^9, 3.7476368983490124`*^9, 
   3.7476375088598623`*^9, {3.7476380645581374`*^9, 3.747638072969537*^9}, {
   3.7476381389257894`*^9, 3.7476381571196833`*^9}, {3.747638786803449*^9, 
   3.747638806229252*^9}},
 CellLabel->
  "In[606]:=",ExpressionUUID->"5826c547-33c7-4684-bfa7-e27e3ebcd615"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"b", "\[Rule]", "2.4811326397939286`"}], ",", 
    RowBox[{"a", "\[Rule]", "0.49742805481337904`"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7476380755975103`*^9, 3.7476381726884775`*^9, 
  3.7476388072441416`*^9},
 CellLabel->
  "Out[606]=",ExpressionUUID->"614755c6-fe23-4cef-b6cd-0ad8daf4dbad"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7476375159463944`*^9, 3.747637564138012*^9}, 
   3.7476379988985147`*^9, {3.7476380575269413`*^9, 
   3.7476380596918106`*^9}},ExpressionUUID->"cfb92555-abfb-4c22-b186-\
6e6d92929db2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Quiet", "[", 
  RowBox[{"dist", "[", 
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ">", "0"}], "}"}], ",", " ", "r"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"pdf", 
      RowBox[{"(", "x", ")"}]}], "\[Proportional]", " ", 
     SuperscriptBox["xe", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}], ",", " ", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], " ", "*)"}]}]}], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"6ff4916c-3ad3-4ea9-940a-4bc702767c32"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
d1rF7A==
       "]]}, {}, {}}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7476357812537107`*^9, 3.747635821871408*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"572ca79d-3ccb-49fd-a839-22684837d293"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i3", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"x", "+", "b"}], ")"}], "*", 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", " ", ">", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"b", ">", "0"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.746603792323202*^9, 3.7466037931992583`*^9}, {
   3.7466038394276237`*^9, 3.7466038396575603`*^9}, 3.746603878882267*^9, {
   3.7466039209475718`*^9, 3.746603921117826*^9}, {3.746605488622881*^9, 
   3.7466055041284804`*^9}, {3.746616047347705*^9, 3.746616056859276*^9}, {
   3.746616223483808*^9, 3.7466162270891695`*^9}, {3.7466167176587768`*^9, 
   3.7466167235749598`*^9}, 3.74763768632281*^9},
 CellLabel->
  "In[600]:=",ExpressionUUID->"b57fbf61-7611-49e1-a8e5-4e4052f99044"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "+", 
     RowBox[{"a", " ", "b"}]}], 
    SuperscriptBox["a", "3"]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.747637763763321*^9, 3.7476382066218953`*^9},
 CellLabel->
  "Out[600]=",ExpressionUUID->"783baca1-08a3-4ce1-8ac8-f5398c0314e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i4", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{"(", 
      RowBox[{"x", " ", "+", " ", "b"}], ")"}], "*", 
     RowBox[{"\[ExponentialE]", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", " ", ">", " ", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ">", "0"}], "}"}]}], " ", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7476377524026537`*^9, 3.7476377525265207`*^9}},
 CellLabel->
  "In[601]:=",ExpressionUUID->"a483af02-aaf6-406c-a865-a0f0b552bdb2"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "+", 
     RowBox[{"a", " ", "b"}]}], 
    SuperscriptBox["a", "3"]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7466038441340775`*^9, 3.746603880782479*^9, 3.746603921928876*^9, 
   3.746604097392124*^9, 3.746605506168702*^9, 3.7466055881748857`*^9, 
   3.746609036038604*^9, 3.7466099239779415`*^9, 3.7466099872592688`*^9, 
   3.746610165546946*^9, 3.7466102214177685`*^9, 3.746610303634424*^9, 
   3.746613969879448*^9, 3.74661420132213*^9, 3.7466161520697327`*^9, 
   3.746616233341454*^9, 3.7466163135327215`*^9, 3.7466163445509014`*^9, 
   3.746616435463847*^9, 3.7466167844851465`*^9, 3.7466169087967715`*^9, 
   3.74662110116712*^9, 3.7474630839412465`*^9, 3.747466088226981*^9, {
   3.7476376798674*^9, 3.747637704862008*^9}, 3.747637755262676*^9, 
   3.747638213903617*^9},
 CellLabel->
  "Out[601]=",ExpressionUUID->"fd52df67-ac4c-433d-90a8-62a682daafb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c3", "=", 
  RowBox[{"1", "/", "i3"}]}]], "Input",
 CellChangeTimes->{{3.7476376875251713`*^9, 3.7476376884200687`*^9}, {
  3.747637824833735*^9, 3.7476378287846413`*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"8a5077c1-d931-4508-a92b-832ae26cd523"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "3"], 
    RowBox[{"2", "+", 
     RowBox[{"a", " ", "b"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.746603964733941*^9, 3.7466040974140654`*^9, 3.746605516232588*^9, 
   3.7466055881938357`*^9, 3.7466090360635386`*^9, 3.7466099240647116`*^9, 
   3.7466099872852163`*^9, 3.746610165570882*^9, 3.746610221442704*^9, 
   3.7466103036583652`*^9, 3.7466139699123588`*^9, 3.746614201413884*^9, 
   3.7466161521555166`*^9, 3.7466162333564134`*^9, 3.7466163135486794`*^9, 
   3.746616344566859*^9, 3.7466164354827957`*^9, 3.746616784582856*^9, 
   3.746616908878553*^9, 3.746621101249874*^9, 3.7474630840705633`*^9, 
   3.747466090480409*^9, {3.7476376799592805`*^9, 3.747637706467864*^9}, 
   3.7476382168656125`*^9},
 CellLabel->
  "Out[602]=",ExpressionUUID->"c86f620c-087a-4d6c-ac8f-963c52aac465"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pdf3", "[", "x_", "]"}], ":=", 
   RowBox[{"c3", " ", "x", 
    RowBox[{"(", 
     RowBox[{"x", "+", "b"}], ")"}], "*", 
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.746604034516016*^9, 3.746604039927228*^9}, {
   3.746605531706896*^9, 3.7466055344287033`*^9}, 3.7476376916796217`*^9, {
   3.7476378560000925`*^9, 3.747637861540701*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"ef049bc9-4f99-4049-b35c-6458dce61489"],

Cell[CellGroupData[{

Cell[BoxData["c3"], "Input",
 CellChangeTimes->{{3.7476378414635143`*^9, 3.7476378416354465`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"5927c506-246a-40dd-bf07-b6cc8e52c6b3"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "3"], 
    RowBox[{"2", "+", 
     RowBox[{"a", " ", "b"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7476376815411654`*^9, 3.7476378049722633`*^9, 
  3.7476378419269094`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"5d9ac52a-5a1a-4662-b487-582e179d4e75"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "[", 
   RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"pdf3", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", " ", ">", " ", "0"}], "}"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"b", ">", "0"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.746604353255726*^9, {3.7466055471189413`*^9, 3.74660555057749*^9}, {
   3.7466056943269386`*^9, 3.746605699157112*^9}, {3.746616000088053*^9, 
   3.7466160076069584`*^9}, {3.746616216113514*^9, 3.7466162215948644`*^9}, {
   3.746616726701601*^9, 3.7466167338395195`*^9}, {3.746620928811478*^9, 
   3.746620942293812*^9}, 3.747637858029415*^9},
 CellLabel->
  "In[604]:=",ExpressionUUID->"e2d8e63b-dd2f-4923-878c-5418deb3bc49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myDist", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"r", ",", 
    RowBox[{"\[ScriptCapitalD]", "[", 
     RowBox[{"a", ",", " ", "b"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.746604181241079*^9, 3.746604182743187*^9}, {
   3.7466055543517995`*^9, 3.746605554686903*^9}, {3.746605705306754*^9, 
   3.7466057316656446`*^9}, {3.7466209461710296`*^9, 3.746620946271744*^9}, 
   3.7476377903957386`*^9, 3.7476378689068527`*^9},
 CellLabel->
  "In[611]:=",ExpressionUUID->"c31be174-e61a-4fa7-9ca8-dff47f542c35"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.041769118245895735`", " ", "\[FormalX]", " ", 
    RowBox[{"(", 
     RowBox[{"2.111540073446412`", "\[VeryThinSpace]", "+", "\[FormalX]"}], 
     ")"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.5039488621398245`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "True", "}"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7476378696938295`*^9, 3.7476382335909405`*^9, 
  3.7476397764592857`*^9},
 CellLabel->
  "Out[611]=",ExpressionUUID->"25b678f6-93a9-42df-92a6-210926bcf764"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Quiet", "[", 
  RowBox[{"ProbabilityPlot", "[", 
   RowBox[{"r", ",", "myDist"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"pdf", 
      RowBox[{"(", "x", ")"}]}], "\[Proportional]", " ", 
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{"x", "+", "b"}], ")"}], 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", " ", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.746604183929531*^9, {3.746605561588162*^9, 3.746605566425677*^9}, {
   3.74746665696017*^9, 
   3.747466743504318*^9}},ExpressionUUID->"4b62812b-29d2-477b-bf47-\
971c11fb6678"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
/dZQ//wz/gelfwAU
       "]]}, {}, {}}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7466042115497265`*^9, 3.7466043643238916`*^9, {3.746605568096711*^9, 
   3.746605594342899*^9}, 3.746605741466158*^9, 3.7466090424095106`*^9, 
   3.7466099261237707`*^9, 3.746609988985611*^9, 3.746610171728898*^9, 
   3.7466102803827105`*^9, 3.746610310958766*^9, 3.7466139716666665`*^9, 
   3.746614202395995*^9, 3.7466161530959883`*^9, 3.7466162344624567`*^9, 
   3.7466163145380335`*^9, 3.7466163455472383`*^9, 3.74661643642029*^9, 
   3.746616785416627*^9, 3.7466169096933746`*^9, 3.746621102107581*^9, 
   3.7474630851482897`*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"fdf81ef0-5b01-401f-8ee9-c3190590bca4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computing a 95% confidence interval", "Subsubsection",
 CellChangeTimes->{{3.719554597073284*^9, 3.7195545984483523`*^9}, {
  3.7474668329598064`*^9, 
  3.747466838860433*^9}},ExpressionUUID->"a0ccf128-c8ae-4f60-8c3d-\
fe64015f6881"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "ber\[ADoubleDot]knat", " ", "i", " ", "f\[ODoubleDot]reg\[ARing]ende", 
    " ", "uppgift", " ", "f\[ODoubleDot]r", " ", "de", " ", "tre", " ", 
    "modellerna"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", " ", "0.5052135937734896`"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B", " ", "=", " ", "2.3403811737974873`"}], "\[VeryThinSpace]", 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.746610935796175*^9, 3.746610983270959*^9}, {
  3.7466138557612133`*^9, 3.7466138715170736`*^9}, {3.7466167512729354`*^9, 
  3.746616753502972*^9}, {3.746616946771248*^9, 3.746616953427452*^9}, {
  3.7474631249417934`*^9, 3.7474631365954275`*^9}, {3.7474668594455614`*^9, 
  3.7474668864110193`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"2ebd2b30-6790-4f2d-9963-51e30d303b5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q", " ", "=", " ", 
  RowBox[{"Quantile", "[", 
   RowBox[{
    RowBox[{"StudentTDistribution", "[", 
     RowBox[{"n", "-", "1"}], "]"}], ",", " ", "0.975"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7466089048497133`*^9, 3.7466089205427804`*^9}, {
   3.7466090606337833`*^9, 3.746609061869746*^9}, {3.746609222803791*^9, 
   3.7466092401179757`*^9}, {3.7466094012305813`*^9, 3.7466094022137027`*^9}, 
   3.7474630437139535`*^9, {3.747463791003679*^9, 3.747463793055251*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"26fd0e36-9fbf-41bf-a82f-2cc7502e43c3"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*SuperscriptBox[\\\"0.0038398374628425547`\\\", \\\"499.5`\\\"]\
\\) is too small to represent as a normalized machine number; precision may \
be lost.\"",2,387,37,26067981213643921295,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.747463085257657*^9, 3.747463183429407*^9, 
  3.7474638025293875`*^9},
 CellLabel->
  "During evaluation of \
In[387]:=",ExpressionUUID->"dbe736e7-ad59-4436-b45d-68daea09832a"],

Cell[BoxData["1.9623414611333494`"], "Output",
 CellChangeTimes->{
  3.7466089212907014`*^9, {3.746609042444418*^9, 3.746609068829528*^9}, {
   3.7466092247340384`*^9, 3.746609240452713*^9}, 3.7466094027500243`*^9, 
   3.746609926154204*^9, 3.746609989012538*^9, 3.7466101717608137`*^9, 
   3.7466102806001463`*^9, 3.7466103109886856`*^9, 3.7466139718112807`*^9, 
   3.7466142024969463`*^9, 3.7466161531628094`*^9, 3.746616234488387*^9, 
   3.7466163145669565`*^9, 3.746616345575163*^9, 3.7466164364512076`*^9, 
   3.7466167854874372`*^9, 3.7466169666321497`*^9, 3.7466211021385117`*^9, 
   3.7474630853357863`*^9, 3.7474631834698944`*^9, 3.74746380256065*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"2f8b2885-606b-4ae7-9f85-1592a3aeeba3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cia", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A", " ", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"S", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"A", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"S", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"cib", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"B", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"S", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"B", " ", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"S", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7466095168142147`*^9, 3.746609531990571*^9}, {
  3.746611003624658*^9, 3.74661105369701*^9}, {3.746613867693857*^9, 
  3.746613869271963*^9}, {3.7466167563064528`*^9, 3.7466167627352653`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"d396db4f-2c2b-4c23-81dc-96b801d69614"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.29732796217342117`", ",", "0.7130992253735581`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.746609512147581*^9, 3.746609549885507*^9, 3.746609926216037*^9, 
   3.7466099890673914`*^9, 3.746610171813671*^9, 3.7466102806559815`*^9, 
   3.7466103111342964`*^9, {3.746611045923061*^9, 3.7466110541975174`*^9}, 
   3.7466139718412004`*^9, 3.7466142025129037`*^9, 3.746616153175775*^9, 
   3.7466162345053415`*^9, 3.746616314581917*^9, 3.7466163455911207`*^9, 
   3.7466164364671645`*^9, 3.7466167854984083`*^9, 3.746616966645115*^9, 
   3.7466211021494694`*^9, 3.747463085382666*^9, 3.747463186724786*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"e46e494b-641b-4305-83fe-bdf59542c3b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.132495542197419`", ",", "2.5482668053975557`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.746609512147581*^9, 3.746609549885507*^9, 3.746609926216037*^9, 
   3.7466099890673914`*^9, 3.746610171813671*^9, 3.7466102806559815`*^9, 
   3.7466103111342964`*^9, {3.746611045923061*^9, 3.7466110541975174`*^9}, 
   3.7466139718412004`*^9, 3.7466142025129037`*^9, 3.746616153175775*^9, 
   3.7466162345053415`*^9, 3.746616314581917*^9, 3.7466163455911207`*^9, 
   3.7466164364671645`*^9, 3.7466167854984083`*^9, 3.746616966645115*^9, 
   3.7466211021494694`*^9, 3.747463085382666*^9, 3.747463186724786*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"e625d745-65c2-49e6-8465-d0bf665062bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cilen", "=", 
  RowBox[{
   RowBox[{"cia", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
   RowBox[{
   "cia", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]], "Input",
 CellChangeTimes->{
  3.746611081366386*^9, {3.746611134732354*^9, 3.746611149028058*^9}, {
   3.747466922587186*^9, 
   3.7474669254495373`*^9}},ExpressionUUID->"3b7c4281-714b-4090-ab55-\
1c76a4edf399"],

Cell[BoxData["0.4157712632001369`"], "Output",
 CellChangeTimes->{3.7466096334283266`*^9, 3.7466099262419662`*^9, 
  3.7466099890923233`*^9, 3.746610171930358*^9, 3.7466102806819086`*^9, 
  3.74661031116473*^9, 3.746611150225596*^9, 3.7466139718761063`*^9, 
  3.7466142025319004`*^9, 3.74661615319273*^9, 3.746616234522297*^9, 
  3.7466163145998683`*^9, 3.7466163456110673`*^9, 3.7466164364891057`*^9, 
  3.7466167855811872`*^9, 3.7466169666610727`*^9, 3.7466211021624346`*^9, 
  3.747463085413908*^9, 3.7474631889724*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"f6097d88-c94a-421a-ba66-612dcff84982"],

Cell[BoxData["0.4157712632001367`"], "Output",
 CellChangeTimes->{3.7466096334283266`*^9, 3.7466099262419662`*^9, 
  3.7466099890923233`*^9, 3.746610171930358*^9, 3.7466102806819086`*^9, 
  3.74661031116473*^9, 3.746611150225596*^9, 3.7466139718761063`*^9, 
  3.7466142025319004`*^9, 3.74661615319273*^9, 3.746616234522297*^9, 
  3.7466163145998683`*^9, 3.7466163456110673`*^9, 3.7466164364891057`*^9, 
  3.7466167855811872`*^9, 3.7466169666610727`*^9, 3.7466211021624346`*^9, 
  3.747463085413908*^9, 3.7474631889724*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"dc706f54-bef2-4799-85ed-657ae5023642"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"margin", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nnewA", "=", 
  RowBox[{"Ceiling", "[", 
   RowBox[{"margin", "*", "n", "*", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["cilen", 
       RowBox[{"A", "/", "10"}]], ")"}], "2"]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7466140104736094`*^9, 3.7466140142850013`*^9}, 
   3.746614066658476*^9, {3.7474632887773657`*^9, 3.7474632895130596`*^9}, {
   3.747463319880041*^9, 3.7474633672159295`*^9}, 
   3.7474669278242006`*^9},ExpressionUUID->"bd614522-b944-46cd-9553-\
042783241e74"],

Cell[BoxData["135454"], "Output",
 CellChangeTimes->{3.7474633731616096`*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"bdb2cad5-c423-4c36-8af1-8d77d61cba58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nnewB", " ", "=", " ", 
  RowBox[{"Ceiling", "[", 
   RowBox[{"margin", "*", "n", "*", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["cilen", 
       RowBox[{"B", "/", "10"}]], ")"}], "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747463321504382*^9, 3.747463331446145*^9}, {
   3.7474633695951157`*^9, 3.747463370395074*^9}, 
   3.747466930079901*^9},ExpressionUUID->"6791a2e2-b5af-4791-8ebf-\
abf55c971070"],

Cell[BoxData["6312"], "Output",
 CellChangeTimes->{{3.7466140338269916`*^9, 3.7466140698264384`*^9}, 
   3.746614202551832*^9, 3.7466161532096853`*^9, 3.7466162345402484`*^9, 
   3.746616314618818*^9, 3.746616345631014*^9, 3.74661643651005*^9, 
   3.7466167855951495`*^9, 3.7466169666750355`*^9, 3.7466211021773944`*^9, 
   3.747463085445156*^9, 3.747463375468137*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"b096224c-95db-4316-8d41-4699aa28a572"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "vi", " ", "v\[ADoubleDot]ljer", " ", "nnewA", " ", "som", " ", 
    "v\[ARing]r", " ", "nya", " ", "samplesize", " ", "d\[ARing]", " ", "den",
     " ", "\[ADoubleDot]r", " ", "st\[ODoubleDot]rre", " ", "\[ADoubleDot]n", 
    " ", "nnewB"}], ",", " ", 
   RowBox[{
   "d\[ARing]", " ", "en", " ", "st\[ODoubleDot]rre", " ", "sample", " ", 
    "size", " ", "ger", " ", "ett", " ", "b\[ADoubleDot]ttre", " ", 
    "konfidensintervall"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.747466942692609*^9, 3.747467024070773*^9}, {
  3.7474670954092054`*^9, 
  3.74746710115471*^9}},ExpressionUUID->"58a7ba21-58fe-41ee-bdac-\
2f9abe8fb3db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckX]", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"0", ",", " ", "nnewA"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.746610338533972*^9, 3.746610354521702*^9}, 
   3.747463441123249*^9},
 CellLabel->
  "In[375]:=",ExpressionUUID->"88d3d5c8-06a8-4700-95c5-065f5f194cb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"StandardDeviation", "[", "\[DoubleStruckX]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.746613995441617*^9},
 CellLabel->
  "In[376]:=",ExpressionUUID->"561c5080-7948-4eb4-af8f-90dace47a38e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mydist1", " ", "=", " ", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"\[DoubleStruckX]", ",", 
    RowBox[{"\[ScriptCapitalD]", "[", 
     RowBox[{"a", ",", " ", "b"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7466112377507343`*^9, 3.7466112687143383`*^9}, {
  3.7466164002609615`*^9, 3.746616428764784*^9}, {3.7466167041498923`*^9, 
  3.746616705917168*^9}, {3.7466209535407414`*^9, 3.7466209536853647`*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"7d09b4cf-cb73-43a6-adac-91c0c154e2f6"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.03412422783111627`", " ", "\[FormalX]", " ", 
    RowBox[{"(", 
     RowBox[{"3.214374188993377`", "\[VeryThinSpace]", "+", "\[FormalX]"}], 
     ")"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4969999004189031`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "True", "}"}], ",", 
      RowBox[{"{", "True", "}"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.74661232781454*^9, 3.7466137618287134`*^9, 
  3.746613972332613*^9, 3.7466148695237355`*^9, 3.746616612665102*^9, 
  3.74661778222668*^9, 3.746622207873989*^9, 3.747463107174202*^9, 
  3.74746354655442*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"ad66cbd9-6a8a-4ecb-a8d2-34dab43fc18f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newA", "=", "\[VeryThinSpace]", "0.4969999004189031`"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newB", "=", "3.214374188993377`"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7466113846236734`*^9, 3.7466113954017296`*^9}, {
  3.7466222391321945`*^9, 3.7466222446679287`*^9}, {3.7474635579411173`*^9, 
  3.747463573029521*^9}},
 CellLabel->
  "In[378]:=",ExpressionUUID->"3dd325ef-0fbf-409f-92ef-b30aea1c8209"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ciaNew", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"newA", " ", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnewA", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"newA", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnewA", "]"}]}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.746610366452422*^9, 3.74661036691514*^9}, {
   3.7466114032954865`*^9, 3.7466114264818563`*^9}, 3.747463597624437*^9, 
   3.7474638622424088`*^9},
 CellLabel->
  "In[389]:=",ExpressionUUID->"04fb670b-9288-429e-a0ac-4fdfaf9fa000"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4790542143454016`", ",", "0.5149455864924045`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7466139723874683`*^9, 3.74661661269203*^9, 3.746617782388236*^9, 
   3.746622250012639*^9, 3.7474631073044224`*^9, {3.7474635951701393`*^9, 
   3.7474636040686646`*^9}, 3.747463868232705*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"8d3f4735-8159-43e1-9204-518a270766c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cibNew", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"newB", " ", "-", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnewA", "]"}]}], ")"}]}]}], ",", " ", 
    RowBox[{"newB", " ", "+", " ", 
     RowBox[{"q", "*", 
      RowBox[{"(", 
       RowBox[{"s", "/", 
        RowBox[{"Sqrt", "[", "nnewA", "]"}]}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7466114065222716`*^9, 3.7466114355572753`*^9}, {
  3.7474636010766153`*^9, 3.7474636110658054`*^9}, {3.747463865420473*^9, 
  3.7474638710357466`*^9}, {3.7474639959576683`*^9, 3.7474639989637*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"59dd27f4-d095-40ad-80ae-8b779c9fa183"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.196428502919875`", ",", "3.2323198750668785`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7466028457265196`*^9, 3.7466106606946235`*^9, 3.746613972419141*^9, 
   3.746616612704995*^9, 3.7466177823982105`*^9, 3.7466222529846935`*^9, 
   3.747463107320043*^9, {3.747463601598777*^9, 3.747463611846949*^9}, {
   3.7474638661799374`*^9, 3.747463871401761*^9}, 3.7474640174668813`*^9},
 CellLabel->
  "Out[396]=",ExpressionUUID->"36473c1d-6ca2-4242-bbee-7c8c2358acb2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Vi", " ", "ser", " ", "nu", " ", "att", " ", "b\[ARing]da", " ", 
   "intervallen", " ", "\[ADoubleDot]r", " ", "inom", " ", "10", "%", " ", 
   "av", " ", "deras", " ", "mittv\[ADoubleDot]rden"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.74746715704576*^9, 
  3.74746716867417*^9}},ExpressionUUID->"cb528321-8779-4ac0-b417-\
22b05d5ac8de"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uppgift 2: Which Distribution?", "Subchapter",
 CellChangeTimes->{{3.718946411436574*^9, 3.718946419088299*^9}, {
  3.7196683653666553`*^9, 3.7196683787735806`*^9}, {3.7196713033143406`*^9, 
  3.719671325964136*^9}, {3.7208599680944324`*^9, 
  3.7208599773605328`*^9}},ExpressionUUID->"f14f02a7-0158-4e48-adeb-\
d2954efdc20e"],

Cell[CellGroupData[{

Cell["Sammanfattning", "Section",
 CellChangeTimes->{{3.719668360694542*^9, 3.7196683625540123`*^9}, {
   3.719673717668996*^9, 3.7196737813415847`*^9}, 3.7196762868518353`*^9, 
   3.719676319245088*^9, {3.7196830880550013`*^9, 3.719683090511759*^9}, {
   3.719685069929411*^9, 
   3.7196850706979227`*^9}},ExpressionUUID->"c47fff70-e266-4498-97b6-\
71e3684815af"],

Cell[TextData[{
 "I denna uppgift ska vi anv\[ADoubleDot]nda de \[ODoubleDot]vriga f\
\[ODoubleDot]rdelningarna",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], 
   TraditionalForm]],ExpressionUUID->"673a1351-a771-4609-ae0c-05575da4454f"],
 " i randomNumber funktionen och svara p\[ARing] f\[ODoubleDot]ljande fr\
\[ARing]gor: "
}], "Text",
 CellChangeTimes->{{3.720871726331826*^9, 3.720871740132596*^9}, {
  3.720872028981311*^9, 3.7208721021690636`*^9}, {3.747467193445445*^9, 
  3.7474672330106163`*^9}},ExpressionUUID->"416957a0-c650-4e90-b1e0-\
22aef694925b"],

Cell[CellGroupData[{

Cell["\<\
Anv\[ADoubleDot]nd r\[ADoubleDot]ta linjens metod f\[ODoubleDot]r att best\
\[ADoubleDot]ma en distributionsmodell f\[ODoubleDot]r var och en av f\
\[ODoubleDot]rdelningarna.\
\>", "Item",
 CellChangeTimes->{
  3.719672064542618*^9, {3.719672156894164*^9, 3.719672172537967*^9}, {
   3.720860589398858*^9, 3.720860592102124*^9}, {3.720860789332514*^9, 
   3.7208608263846164`*^9}, {3.7208670765699987`*^9, 3.72086707716378*^9}, {
   3.7474672431799746`*^9, 
   3.7474672464355884`*^9}},ExpressionUUID->"2dc2eef8-5136-4f82-9d18-\
34dd63229c60"],

Cell["Estimera parametrarna f\[ODoubleDot]r de olika \
distributionsmodellerna", "Item",
 CellChangeTimes->{
  3.7196720851471777`*^9, {3.72086083339505*^9, 3.7208608538411617`*^9}, {
   3.7208613466153297`*^9, 
   3.7208613519749794`*^9}},ExpressionUUID->"409bd9dc-2f13-4dd6-8dea-\
b997e0022e2a"],

Cell["\<\
Ber\[ADoubleDot]kna 95% konfidensintervaller f\[ODoubleDot]r parametrarna. \
Intervallet b\[ODoubleDot]r inte vara l\[ADoubleDot]ngre \[ADoubleDot]n 10% \
av dess medelv\[ADoubleDot]rde (mean).\
\>", "Item",
 CellChangeTimes->{
  3.719672113915433*^9, {3.7196722304844227`*^9, 3.719672234251953*^9}, {
   3.719682805251218*^9, 3.719682826455241*^9}, 3.720861333614661*^9, {
   3.720867031975301*^9, 3.7208670377555084`*^9}, 3.7208680135254984`*^9, {
   3.7208716890985055`*^9, 3.720871705933406*^9}, {3.7474672719563074`*^9, 
   3.747467279755292*^9}},ExpressionUUID->"0116234b-448b-4189-9f40-\
88d1aa400932"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resultat", "Subsection",
 CellChangeTimes->{{3.719668827900448*^9, 3.7196688313849974`*^9}, 
   3.719684958135974*^9},ExpressionUUID->"32e81a9f-4e7f-4876-b94d-\
b6fc9f59fd15"],

Cell[CellGroupData[{

Cell["Best\[ADoubleDot]m f\[ODoubleDot]rdelningsmodell", "Subsubsection",
 CellChangeTimes->{{3.719668985414158*^9, 3.7196689952896585`*^9}, {
   3.7208590483149843`*^9, 3.720859081285428*^9}, {3.7208596704697847`*^9, 
   3.7208596771732564`*^9}, {3.7208605519281883`*^9, 
   3.7208605522094517`*^9}, {3.720867115305837*^9, 3.7208671206186123`*^9}, {
   3.720867185605689*^9, 3.7208671858869557`*^9}, {3.7208719675064974`*^9, 
   3.720871978861516*^9}, {3.720873578873127*^9, 3.720873584232933*^9}, 
   3.720898012263592*^9},ExpressionUUID->"bcf69dd8-9a72-45de-8272-\
7ca7a68e2570"],

Cell[TextData[{
 "F\[ODoubleDot]r att hitta den r\[ADoubleDot]tta \
f\[ODoubleDot]rdelningsmodellen f\[ODoubleDot]r varje f\[ODoubleDot]rdelning \
testade vi f\[ODoubleDot]ljande f\[ODoubleDot]rdelningsmodeller och tog den \
som var n\[ADoubleDot]rmast r\[ADoubleDot]ta linjen f\[ODoubleDot]r varje f\
\[ODoubleDot]rdelning.\n\n\[LineSeparator]1. Den f\[ODoubleDot]rsta f\
\[ODoubleDot]rdelningen passade bra till alla tre varianter av exponentialf\
\[ODoubleDot]rdelningen (exponent-, gamma- och \
weibullf\[ODoubleDot]rdelningarna), men passade gammaf\[ODoubleDot]rdelningen \
b\[ADoubleDot]st.. \n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1: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
2L8swvbrLA6WSC0LnIZ2SVf6t1zFofqRhrtvT0TYbeTgS7jlAdMQYdyvu+HJ
oXqShi0pC65t38LBPcvTZadhw4WJh5KYcb2+pCHT/3uKtw8Hc5jNtcjqMxqq
nGpHneZQvfmMYbzvw6cFcqD/ZZnwZ8yVbQr+E8Sh+vMZO9OnX9UHc3D9MznA
8Mstt+Pd4FA9Yj5v2yCnKJGDqZbp8j7DeH7gy2/MuF6fPsM8aYnPEyEHcsvl
OqZjf1Uk+0chh+pVOpz9n7TcoOfgokWOnNKRvLjgTlgth+pXOmDXbXj+Vw7G
k/IhHXuPuzwZ9I1D9Swdd7SzG7ObZqHUIgeF6RiyzcFGOyyL6htzv8sxpy5P
yMIZy3Fm6hLp1h4z8mdkUb1joV+bY9LhC7NgazmOTN3gsGxNy/IVWVT/WPBs
xlnayi0LBaS8YDirUIk7e2RRPWTBcekNN2/fLByzHIdyhmNLBlX6Xc+i+shC
3vxvu9feyMIAy3ZmOPS7YYxmcUgW1csMDAuPXvbkbhZyLNvPPQMjDvT/duBp
FtXPDMx27DC+YXEW/rMs76MMJB/p2L9/ZRbVU4Yj3s3NK6VZ6GF5ffIMjPmR
d7BJbRbV10xEnfgv1s0qG+mWxxuYibI2a7NuMeN6vc2EVa/VUd2ss7Fzq+Un
E8G/0g/yemVT/c3E7nk/o/n9stGJKZ4YhcUv9n81ArtsqseZ8HW6VNV9ZjYS
v1g2dCb438f8yZyTTfWZOdeDl7cZMD8bngmWC7IxZvadtU4ns6leM+c0oMhX
cyobrU9ZBIoNFfdQzvKAbKrfbATfrBn4+kY24hZYDggbrxyDZgwIyaZ6zkZu
7MkR53Ozsc5S3ZnZCHwztFtiXTbVdw4GFLHHz22bg8Yi5riN5eDx1xNTm9vk
UL3n4MCRLQH+A3LwyrKdvTlY/XmyfcMROVT/OfC/imEXR+fAieCRA5tfpxaw
xuRQHnBw8Fnz31fH5eCXZTmYfZrUe8iTrfNyKB+yUDfHeoJpfg6eWKY7OQtJ
ryfPxcIcyossXL8TcOfU7hwssVzuSBZeLHfoG+STQ/mRBavNHxZxfHPwheAh
C3MmP23d9FIO5UkWVPtzShSXc3DPIu+/srC046p+TcJzKF+yES8vePvzXQ7m
WOR5ejYe+7iGzH2fQ3nD7IN+taqf6TnQW+TVLxu5bcusxPk5lD/ZUBwUT9pR
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
2FkOGA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
Vc1c2+q3Jhxd+uiTxKgJ9YTnTYhpf6nL8UFNtJ5rgnU3vfYDjJswgfC8Cc0P
i0ceZNpt9V0Tut6dv66vRRP8CM+b0O7Mkahp1k203mvCizH5C8/Ob0IN4XkT
RlQGX2y3oInWf03QCZ53oZLpdwzhOfN+8oAruw820XqwCR4p+oLP3k04QXje
hKjg4bV7mPu01YdN4K5wW3H7WRMqCM+bMF31oXDCyyZaL7Kxddr4uZlvmjCK
8JyNnwZeZanJTbR+ZOPz6etDp7CacITwnA3j9d7ed+VNtJ5kIzlxyCmHdmyU
EJ6z8SXEn5M/kE3rSza+zrYN7z+FjeGE52y0xDwWmtiyab3JRsRHg46r5rPh
RXjOxtT0h14SOzatP9no5DNT828bGwWE52yEn7w6dD/Tb1s9ysalzCXTnt5i
YzDhORuPX+pJZ2SzaX3Kxq4uO79FFrGZddICmAN5Xv7Kl8zn2upVDlKe9ui9
TshGDuE5B1kRnL9jW9i0fuXgotk3g5X/cTCQ8JyDqdMOz+o3kkPrWQ48O1ms
KDXhYB/hOQdFXhbh7ydyaH3LfM+C+3jMUg4yCM85mJcctkm4n0PrXQ5GX2ro
cucAB/0Jzzlw2mXh8ewsh9a/HAjq6tzMHnOwm/Ccg6q6aS87h3JoPcxBwxtO
1focDlIJzzmo2bAh7Fgeh9bHHEiCq78NKuagD+F5M+S57AsNLA6tl5tRkXAj
8BPT3kl43gz3EVsK/ok5tH5uhsXzMdM8FRwkEZ43Y61axyDpB4fW0804nLap
5MVPDnoQnjfjuU207g7mvm31dTPSWowdb//mYCvheTOmjD2V171PM623m7Gv
4mVCYd9mJBCeN2N7ZEF2xbBmWn83o2noizEym2Z0JTxvRr8NymV/bZtpPd6M
r+vGuMXtasZGwvNmvEicl+lxspnW51y8McNzpW8z6sh556JzoeKc45NmWq9z
4enqP1L4ohmnyfnnghVrdrlXdDOt37mIWtzPqSG1GeNJPOCi3Um26cymZlrP
c5F+0xOcb82oJfGBizn8CdvOf2+m9T0X33rKnmz50QxfEi+4cDpwRyhgxtFW
73NRtCbtycjuXIwl8YOL9llPbZf24NL6n4usW8887Y24qCbxhAtRp9WiqCFc
qgdwkblj2vaD5lzqd3Oh3Mv2S2LG0aYPcMF97/li+BwuTEm84WLLOLubf+25
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
2e4T3y74qKH++Uf8D9V94AE=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1: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
bV2kpfl5M/4PG5KSyg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          PointBox[CompressedData["
1:eJwtm3dcjV8cx7M3ScjOzviZRYRPdnZWNhWSkCQrocyQUZKQZERWKiHtvcet
brt7u3uPrAbJ77nH6Z/7OvU85znnPOd839/v53Mbbn943d62enp6snZ6erpP
vcGbMh9MWYuWV19LVtlbw9O+R3R/D1fatoVeB8PPB8zc8OusU7zbHUd4zjvX
1LL8JP27C/TahTzgLTiN04bhS/nubvBcF+iScvM0vf4kPI+vOLDP8yJOycdM
7fzWA5bLLlz4w/Kh93tCr3Cy8ZUbNzGnbs2Ne87n4bk3PmlKwS14kP4uQk/m
YadwvI34Zd3bTrhyGbaTKk7uifdFC+nfG3qpOa7Xht7BnOjs44mPryHkyYjU
55384UGe5wNeuJtX9Tx/xA+9pFwbcxMhbW3S26/1Ryt5/m2ErGEXZtncRXC6
cYSroy/0xjp0np92F/PIePzgeSL6hLdBALjN5IHg9evH3YAAnCXj80fIWdd7
H23uYehkzqiOXneRHNDDKL1tIBLJeAMQ8ncRp/z9fezcY6HrEXpeKxTe7R6g
lXQXiJDUM7N3T3uA4PvkB7bjv7FylQ8wj8znASxfDH48uO9DcAsb1wtDH4IX
y069kPsQZ8n8ghAya3CeKechhra36flf1CMYD5h3T24fhEQy32AYe+cFlwx6
hJ2zSIewjLNYrDcyBH/J/EOQ3OpkF10bgjUzr863FYdAr9dEY23ZEzwm6/EE
yWaJyyc4PIV2bQzT4xPYmr15Enb8KUDW5ymmBMRMVT9+ilsHpb9ffX2K5OI+
7O0vn6KOrNczGP95lXus9ikmX+lXVdj4jOm/oLdA/hTnyPo9h6XZok/erU9R
9GTxp+9/nmPK5tlV782fYRhZz1BYXzZN6XzgGQ4zq2XU/gVYBbI/o44+QxJZ
3xfgbek8mvvoGXpVPHOZ2/Ul9JZMydkV/Ay7yHq/RP3Gc7IBE57jvW66+mHQ
P/1qqsgvFH/J+oeh/nPj3RGhoVij667fKyQvHG/jpgrFY/I6XsFyKi/wUYcX
0OqWe/BreG7tf7qq5QVAlpNpX76RP3PlS9xiVo814g30jY0il9S+RB15X2/g
aaE541ofhsnbb6X+NHkLTw+Lr7LGVzhH3t9bGLcu2tA74DWKmN4GTn4Ha59I
v52r3mAYeZ/vEOHR3t2z51sc9lV7wCwcyQ2hNl/7v0USeb/hqO8279Uyh3fo
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
jR3L0YPwtgIlWzrk5bmW0/y6AuHVZsvVTNuO8LcCTima9Odu5TTfrsCPhgPm
/t7l+Eh4XAHDl+PWHQ4pp/l3BZY3KI/MiyxHF8LnCgi6RJnrFZbTfLwCHXsO
eXCVmdcOwusKrHxrdeExM69/+XkFHK614Vg2liOS8LsC0WeKcp79Kqf5OjO+
Pa/1KlrL0YHwvBJ7AqweTx5cQfP3SqyzGHPoxvgKbCE8r4SJS5awyKyC5vOV
MF12TmFkXoF3hOeVeD36+xIN0/6X31ciQLCHY7qsAm1e6zqshFHBz20+Kyto
vl+Jp7F7xKM2VWAj4TnT/8pX7zvYVtD8vxLpyW/MbzpW4BXheSUK2wfnJzHt
f/VAJT4lz5pmy6zjH8LzSuj/J/U1PV1B64NKJNf1qB9yrQJrCc+Z8fapCuTd
qaD1QiUMlsl/zGXWNZTwvAoBxjdqRwZX0PqhCiaXr37f+7ICzYTnVbAOuyAz
SKmg9UQVwrse9H2QUYFVhOdVMFi4fMD+kgpaX1Rh3iuTpPUVFXhCeF4Fq1H3
z3WoqqD1RhXM7/mmlwgq8JPwvAolVoLYXY0VtP6ogn/FyNbXvSuxjPC8CrzY
CXmThlbSeqQKlweW+5ybVYlHhOdV8JvR4/2oeZW0PqnCtcj8O/MtK/GV8LwK
5z2+Dp13qJLWK1VoTSjr+c29EosJz6th7Mx/P9GzktYv1ei6eUrCT+Y93Cc8
r0b25A+Rd0MqaT1TjVavmyOsiyqhJjxnruec9PbQVNL6phoBF9oeeNZUifmE
59Uo/NtrVEqvKlrvVMOk2/vMfGad7xKeV2PR7vGbVgypovVPNURRH31Es6og
JzyvxiifaQuvrami9VA1MqcNt3dj1nku4Xk13FYOu/LFoYrWR9WIsH0zb5hT
FXwJz6vhaLecE+dVReulGsw7H2O/5H0VxITnNTgo8x505mMVrZ9q8K086JBv
QhVmEZ7XwPXLHPdGVRWtp2pgc2JwyeqvVbhBeF6DkOlmYZENVbS+qkG1o1be
bkA1+ITnNdiQ8GFI8qZqWm/VIKz4gHm33dUwIzyvwcBuq7zNmHX6V3/VQN+m
e9Njpn2V8LwGTY3/CT6crKb1WA0ctrQMKP5QDQ4JVzVw7LOh9dSXalqf1eDm
n2zBcmE1phKeM/MJNbE1F1XTeq0W3I7u6wd3rsElwvNaBE3u9p3du4bWb7Uw
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
6/E/Vrzdjg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"WeibullDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.7208531951510353`*^9, 3.7208538448105297`*^9, 
   3.7208689446172495`*^9, 3.720869478535988*^9, 3.7208696028893394`*^9, 
   3.7208696620534735`*^9, 3.7208700061621532`*^9, 3.7208718791250277`*^9},
  ExpressionUUID->"8f048691-387a-4a00-ad6f-1cf071a190db"],
 "\n\n2.  Den andra f\[ODoubleDot]rdelningen passade b\[ADoubleDot]st med den \
geometriska f\[ODoubleDot]rdelningen. \n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1:eJwtVAtQlFUYXR3AxWyhrXwQOiHkI0dQEwWRzjC4qJAaqAsaUiKg8SphB63I
WgUFdEFSoEzaUUGT8cFD0UGi3FFDUVRaXHkJ7LLv3f9CSibP7v2nb+bOnTNz
/3u+75xzf4/YLyLiJwoEgnV0sb25x/mFnNzBB3zVwLtEIlKK7iLK/0pjRsPv
WLdLr30/rAlj6r3mOYsbobzhdlRW9gDRBarBedEPob787Y+3pjxC4GTNmS8D
W+AQFHvzp02PkdGgdPPpUuOXt78JGfu1BRdX93791iUNTq8MqJjqrIYtE74x
dW1Y0j252ZTeirn8hZ1Im7dZs830BHEJrJ7h+OPo46vin4KnF/ZA61kXtcnc
Btmx6Q5SUS/u7U4NWZTegaDP9I9md/Tixd4bg4kTusDYVvdqocr5Linvh2eo
GGhZF+vah3dExvcOinuwPtaVjtiHa8Uyt6sdPeg/dydsea4e0uuaqS5lvfi8
0E47NMBZKMz9K1ELv1zGYMA/f7vKQnx0cJSKFlaXGsGJFFnV/Tps1pX/fOtd
ExxKgx2TLvVheF9iveyYCSlPScWDnXooCSMww7pkjc8qdwMGeD4zQopOXJE0
GRBE1Vg7xYJD567ZImVGgNfTgoashHGXaSaIeUMs0A7M9X6zxoTl7PhEK+6+
UC6dtsYMobwo+HCyFVsK9idoW81Y3OXlJC+y4vCH4YqwaAvkrJ3pNjidysn1
77BA0MoEteGCalL96Qgr5i8WXnDfasNW94zAIyorIhQlqeIDNujjfS3CBTaU
SWqfj6ptUPWOrvU7YoNnZdquQrsNFlXpVonBBo9sa/j1WXY0F+yRxPvbkc4H
wo7TOaGTnmTbMdOHNWRHbUDBG11NduwWH/jj3ik7xGMhttuvcZjR1vxyo84O
zSbFsx4JhxTWrgOHssD6RWPnOdxkcfLiUFm5o/CimkMxs38hB7Oyrt0wxMEy
fJ46zEE60LdCMJPgOLMvhkNVebLX+gACE03Hq30cBmcNF8+WEuwM6N6gKOHg
2B2XfT+FIJ7FoZGDInRPVMl+gj4+Pxwe/pmYer6MID/ZSBk4vJ7pp0urJtjB
4vaKg+TYncjtDQTaDUwwgjUXpbUVjQRH+EASDNecTfv+McEy/n0RTF929oxL
G0EPsyeY4EzOivnyboKrpSwgBCdiTqpOmAnypjJBCPQS93C5nWApsyeOwClx
Y1PWcwJn3m8CT2SN3B8kqGF2ZBIEhRbPUQwR5DA7sgmqPo30PTlMsC2ODUxQ
/+C35q9GCJbw+SD4aHXsWu9Rgkl8ngk8tK+2F48RdDI7yuk549WjH4/Te/j3
SxDz/EppEcUHqXuSWoIb+WF57RR/wv8vCM61pu/UUbyomg1EdU6ww0Kx44JD
dCIC39uBWYTidpruyRqCypXjQ/9SfJlOF0B1iKzymzFCcRYbz0i/13CdoxRv
4dsjSKoT549T7M2ue0kg4KsfE/7f/wNchoJr
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxF03lQjGEcB/CV3RVDKOQem5ihEIZc9XV0qGblXIuJnDlyG+No0EHYMq6i
SYp0OVI5IhRmpSlTyRGtUGvb+32xJUe13uepmfeZeeedzx/v8/5+39/zSNZs
X7jeRiAQ+HAPebsYREEV5+M8vRSh2n9ZufDIYyIVke88V2sqnVR/CnFxVV9/
Q7QI2+0jn5ZeeQGNxD5hisoVn53F4XFzypB0MF6bM0KKazs8ulWnViKgSaCM
yQ7BUeOCB0OPvsGNiad7DnA6gm30+3fw+tkUaPx9FovUaYnKYR/wa2OycMit
VHyi+6mwQBXv5SbNQ1HpFe/7llp0HulwWdpYiEObH+851/8rYhLSfvs4lKBk
b2HywHF1+OgWmPFs3Wv0yfatO9CnHmyqc9HJ2Gq4n5gVrKmsxys/mWqh5DPI
373vq5HzUNu7aGk95sde4Er6hihJkKMyRIOdpPwdGuRLvJs9BugwO5gEoEGr
7kyDeokBIRvIakCFb7fF+/ubkG9pfbtP3wC5LELst8mMmvJmriUtfPTCfr2W
McgqDuBK0EHmsvu6oIVBGs1HB//3BdX69SxKaf16XJt8w1GdwSIxgSw9Ommc
amUVLIwjx9veHGzAbP2B6eIGFvbyqXdL9howWuxeFveTRSwZ1w8D5pZH3/T/
w0JB2nUyIuWR/FlRCwtbLk1FqBGi/KFV+9pYCF2i+30sN0Lh6h4ttbIIp3ma
kL5BpM3hfBiTVhb4mSAYJjbVcs7kppOzy4Qnt67m/+CcTus3oeT5NNe/nP/S
AZqwdtTw262c59HATXD0lA+0ci6j/Zlh1zQji7ixSrqml9yMY6c7fyW+RPs1
42JkWCPxIKHMbkyeGT0Uln/EW0l5QgaBLxPbiB3pfBls8T1uJZ5JxuXBIPPq
B+rz5jCuAwZ1iy3UDjQvBgKbFmodOc6HGEQo26h7j8lLYjMYnEqxUk+j54VB
rrrdPW1IYAyUze1eS+8Dg/TWdtcHkgPEQm5t9+oCv+42LiyqOnyP2704gIWl
w13pPFgI6PqOO7s2njGH8T5O7wvvCbXkQvDuQuJJ4v2JnjfeuSSebN4rSPuF
vN1Iu8W8RfQ88K5JJQPmfXvw8nXTv/COIuVreS+j5fAeS7Zr5t2p4/0fel83
9w==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1:eJw1lAtQVFUYxwk2BIYYNIwExwS3UkiMmVYihX/ESyEK0hCQCVywEBkeO8gg
ZUqCKyICAYPS4IIYShGuuEAiMkhI0AMWlIfR4q77YF/3HgQcJnlM996mO3Pn
zNx7zzn/8/t+33UTZnxy2NLCwiKMudnx/2u56elohFAKuXut+x+eN7Gw8jDX
8MY9FJwUjCVc7EHNJfYaBN9Q3Ra5dgCr7GtvOXaf2hU1ZzsMwWede+0tH0Bk
0UQy7o/CqSVUlec0jvcVt79wHBrD4j7199/1TWL6QmXspSuT4Kbb/I1Iqzr/
opApdGVXvMqLnsZos2e5+10F9rOfb1biljLK0MFTIqR9nkmkwoLy08Ytziro
l9jAT8DXK/e86fwEbQM53RIXNWLV08rVF9X4aWNc8q7HakwluoSPaNTgT/3z
dWqXBj8Ef1B7U6bBxh0KvnW+Frf/Kjhel6NFj8SFeaJDanZSeImnDsmOMb6y
AR36JoIzDjzUQcFOz56BKOi9kOGsGZyuCixOm5nBStlOnw6eHg/c2Q30cHjq
LOkr0aMx089uokEPgbRIWveSAWEMjZZQA+bCZ4IMBQa48qIdtrcacPZPV4n3
ggHOHC8jtIvpblbxRhi58xnx8p3Ni4ouI77tfbY1vtSIK5FXW32dTUjSypkd
jVgf668qPGqCbT4byASXd7sqPTpNOMikz+k2YfUWrT5rZYaX+JVHQ4sm5B87
I1wKNeObVJa4GZWHdGXjYjOaGNpSkRk1j44FHfnFjCghC8CMo83zNivPzfjY
pyggUWvG4HTAl+NeFBpYXNYUVEKXy4IECvXkWn+4D4W7Ueu3RZ+n8IyxyTGG
wohAOJrRTmETx5tCc2ppRbuCgmjd6Z7f6iks5ckMcZY0+tnj9VLgyT5ae45P
I5ATikbp2Ab/9CAavVx9aGyXbxv2EtJIK6e+goCGrabw5OwJGgEM7Uw/GnK3
/Iqxahomjh8Nu702Vqs3aDix5cyhofHbUC/up9HN2OoppnHCsagm9wUCPxaX
hEZW5PMtxesIujYVmqJ+pnFdWXYm152gvDqdSUyDX2aTtt+b4HPODxrSgry3
vEHQyeppoPHj75ba1z4k8OX6geCgver82zEEJQw9ObPOmiwvW1ESgX0zKyjB
8Zg1Y6pTBCqGTlUgwdWIyKqUIoJitlz7CIxVh6n4coLEUlYAgrDH/jcGLhII
bNgFCBbC3+G1SQjsuPoTTKgjcj0aCWSiFIYQwes7e647dBDYsLrVElzeA4/5
OwSKIbYjCcadtv56v4+gldWvhcA1Yba/e4BAzFQnuJ3gnlgj0w8TxHM+Ecxk
JlfOTxJYe7JCEUztlh4K0DFjAys8wbWl5SNDFIGU6z+C7rjBEWtCUMj1C0HC
BYz7zBHEcXEIDlRJdfbLBDs4PwnmGr1TBlcJ/vs3zeJfKjpm0Q==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          PointBox[CompressedData["
1:eJwtlAtQVFUcxoFqIyhKIizHYHkIAgWCIgLSN0VGwiDxCoYByg0KGx4+kIQh
y5bnEhEVoBJjCA6mgsQ7xRWEQaZaQCIWxF3ksQ92997DI0aQtO650525c+fM
Pef//77f+c6xE2VEJJsYGRmFci/9LrpEla+priJq7kJ1v7AZg37KxNMa6f/j
HoytV10ezxrA47ETC06eg1jbW9FrbiZDqmbj56VRGY4aXL72PHsHMzlWTUEz
o8hs+KLa6+QYpOe2eCgcx5E+cHnPK7vkCPEpfvND1QSC+2Qt/dJJFHGjEfsp
ZN7JLFYL72FrXJL/dJgCLY1vBz2VoAT/d12JtfOSqpt+9xHRZZOvD7+PyhrP
D97ZPYNjKeVMLmZgY6IQ29nPQkvlhM4i/OnfV4L/nYWX6RWu5BwyrpmZNw7N
YZzKN51HZchYiUP5PNYjqcF5iI6nFOYGqbAyGip6IVaFyf60PdnLKqTz/lTo
cGodHvpODf+2wSzpOTV623bscnbRQMTrU8PG17LTrkOD5iBKQIOKHZLuSD8t
3OLLbq1u10LhKYzb36HFQ76fFm059vp81wX8RBoGQnwWYLMor86rWsBtYfPR
lPIF2FoKDF2PFvCWd+K1/c/qsOEV7VKWoMMb02GlVek6jNdZzaZ26uBHcY7o
4J458d4v5no8J687HGCmx7JM1Nsep4dy/eSn3Zl6OCgCiaxej4Ke32r3dejx
ZdEPie/q9GhcooYNSDJ2vZruZkA0z9eAvOizuvwUAyK5bpZiA1RNSbKhWgMa
uOryOgOWb0vMC+QGOE3RBga8um/+2/lnGOTwG26Amc3hG7a+DB48ooFh4GE8
X3MomUEIHxAGEbXtwqVvGAzyfhmkC8eDZtsZDKxu54gxcA2Jivn4LgMSTgUx
yH5+s3H9Pwz6qfwVrm6esvTmVhaBPB8W8Q87npjyY2EtpgZZFAwIgq1jWFRw
6fBOZNGwKSGk7AgLq1hfbgdZKA9te0kkYfH9LdqQhe31g6sXa1lYvt5SQxpY
ZLlKKnM7WWj448DintrYY9s0i3KKo4dF542+1xyXWPjz/FkE+U07PmlCoOLz
z0J4YPP6+CaCMv6AcLqOb6Q1Cgl8qVxu3t3UK3ur3Aks+P0iiC3Kd6jzJ+ii
8dpCENMtuBQTSeCzkz4EbGZfpUcKwYyj4FRFIMHB66Wq+iMEJdaTQw+4eRfF
4jhxDoE3n3eCE8Pd7YvlBGbc7JJUgrgAY8s/ThO0Udq5BNlnFMPaSwTFegqY
IOPlLOLdTJBIj18pwecJL37l3k6wU0EbErT8lSzdLSUwfd+CEsKva3K58wCB
gus+d4HAtlFwykFGUMjniyBLJmg9MEIQT3Fz6yz+bj7WOEHgSfFy6xbrWn4U
ThEI3Ao5B5yOFEFrqoJgiuKQE4R9JAk4M0PQzF8IBM5pTUKiJsindjQElZ8s
f/bnMueLl0Og8TofM/WYgN5l3G2G/wANyIlz
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.720853199819336*^9, 3.720853846567785*^9, 
   3.720868944648502*^9, 3.7208694785840206`*^9, 3.720869602942377*^9, 
   3.7208696621205206`*^9, 3.720870006202182*^9, 3.7208718791620655`*^9},
  ExpressionUUID->"d5ba5829-2c02-496c-b8ba-83e58ce16ee3"],
 "\n\n4. Normalf\[ODoubleDot]rdelningsmodellen var den enda som passade till \
den fj\[ADoubleDot]rde f\[ODoubleDot]rdelningen.\n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
4I4avGZpQgXNpyuxtmxM4sOkCnQnvK3E8GKTnv/VVtD8uhIrbBp2BXyrwAbC
30p4cZ8fmsmM05pvV2Jc4jf+zV8VeE94XImTPdL1q40qaf5didXDbXrmDKtE
Z8LnSvSOLNv6YWQlzccrYXIowEhhUYl1hNeVkKj1hf+YebTm55XY+Wn9hl9u
lYgm/K7EmAgPs/M7K2m+XokHARHma05WogPheRVibnUfH+JfSfP3KlxYUTm9
8TIzD8LzKkwJ2ZR/IqeS5vNVmPfpSqZBcSVeE55X4bVGf/Q+RSXN76uwIvLj
1NmaSrR9peuwCjsT23qXfauk+X4VksRP7gT3rsJKwvMqiP9L7FhtUkXz/yq8
zIqINGbGfUl4XoXvfs0jLP6rovVAFeY+9En1sanCH8Jz5tXlQWzg0ipaHzD9
G9hmO5+uwjLC8yrkGEf+CmfarfVCFfaP3/Zk8OUqhBGeVyPD/86JBVeraP1Q
Dc1SzxlmYVX4QXhejTBr1qW1qVW0nqhGz4MBvfXNq7GI8LwaR5TP+g60rqb1
RTVujngy661DNR4TnlejYGjvCc+3VdN6oxolr7LmDXtajWbC82rIOp7p7/is
mtYf1XB5NbDd44RqLCA8r0Z9u6RXn6qqaT1SDbcv0tKPfTkIITyvhu27xjmZ
0zi0PmH+3rLrqM9iDhoJz6vx2zCxYM8yDq1XqpHSv3TsSHcO5hCecxDjVt8w
fh+H1i8cjKvKfFXhyUEw4TkHQeotWQt9OLSe4cD7v3d/VjBtNeE5B1f9SnxP
X+XQ+oYDv/NBY6/d52Am4TkHptNbpKnhHFrvcPC7a/29M685uEV4zvQ3+L59
3w8cWv9wMPlKR+4rDgdywnMO+u6oWeml4NB6iIOni+5WL9dyMJ3wnIOkx0H9
f3/h0PqIef948xcDv3FwnfCcA5Mfx9vbM+3WeqkGXtI//M9rayAmPK9Bjn+6
9fzNNbR+qsHJRd2XZvnXYCrheQ0+nPi8+c79GlpP1SApelThxDc1uEp4XgMP
r4DJmUy7tb6qgWn2bMt1n2rAJzyvwcg9szx7ZNTQeqsGKr3qusC8GkwiPK/B
gIf3rHYU1dD6qwYXy9aWKEXMK+F5Dea/+/Il6XcNrcdqEFo1eP7KLrWoI+Gq
Btt8/LLdDWtpfVaDboNXjL88vBaWhOc1uP5+Tku3EbW0XqtFt8UGt6NH1sKf
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
7RXrZ1WKMZ/wXIxXZc5rOnLEVC8V48HCP5FPa8T4QnguRsj0503hTLtVPxVD
oMd5ea6ReR/huRhxi48/t/ompnoqsw8mW32+/BZjLuG5GDfrbhyR/BNTfVUM
IT8pPLKTBA2E58z61p7fPK6LhOqtYnBnWv+z7S3BPcJzMfjz9eymDpJQ/VWC
r4dfV81h2rMJzyUQqH96S0ZIqB4rQadZSdOGjJZAQ3guwaSJH70fzZFQfVaC
xPlPLN8tleAu4bkEx9ipbuY7JFSvlSBIPXu29y4JZhGeS/A+6dTOtvskVL+V
oO3VkLpD/hKoCM8l2PokSjHghoTquRK4+88Y+SdYgtuE5xL4s4oveN2TUH2X
GffInTu9oiWYQXguQQfFuhFfYiVU75XgglXK6WVpEigIzyWwnyseGJ4hofqv
BPq/5zqdy2fmSXguwfOcqM37iiRUD5Zg7pGW9e/KJPT7qMw4nNMa61oJ1Ycl
WHqyv9XReglkhOcSXPNRTxoglFC9WILxtk45a8QS3CA8l2BiF35lrUJC9WNm
X0yK1/5ukMCO8FyCI+ofX/80SqieLEGBZyeu63cJJITnEozxa7/5xU8J1Zcl
qPYy7lrOtAMJzyV4k353M7u7lOrNzHPTNzTSM5TClvBcio5p7O2VQ6RUf5bC
afZYB80oKUSE51J0eRbKPTtGSvVoKU4oBwUEmUpxjfBciqpzR042mUmpPi1F
YOrt7J8WUkwhPJei4HvIjKHjpFSvlqKi0wqTvxOkEBCeSyF2HrKn5yQp1a+l
CE0N+D2IaV8hPJdCu/NwfL6LlOrZUlwYddBh9zopJhOeSzFU1HLo1BYp1bel
ODIzztTwkBQ8wnMp0mfMFdkxr616txSS7/ILa7ykuER4LoX73hGzfnhLqf4t
hWdcrPNh5vfWhOdShJxz6rz4gpTq4VLUqmPOzL8opd8/lmLF4cbdR5l2qz4u
RcnF5W/cXjHzJDyXorqo9sCFSCnVy6UYV+4y/PNbKSYSnjOfnzJHYxIrpfq5
FDO39t5omMyMQ3guhX1Q7ean6VKqp0vh0t++q0OxFOfIcqVoaIH1iXIp1del
mO46Q3adaU8gPJeiLuMUP5wjpXq7DKNjey0cViMFh/BchufnExaHMf226u8y
bBw/UtFVIcVZwnMZ3AXF5hv+SKkeLwMnZttkV6afcYTnMsS+CjKbx/y+VZ+X
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
wTfmORKea+Fx7oqD9V8t9c8b8D8ic7u8
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
            ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"30", ",", "10"}], "}"}]}], ",", 
            RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.720853209195964*^9, 3.720853852059656*^9, 
   3.7208539691508675`*^9, 3.7208689447422533`*^9, 3.720869478710094*^9, 
   3.720869603053443*^9, 3.7208696622235813`*^9, 3.7208700063863115`*^9, 
   3.720871879235106*^9},ExpressionUUID->
  "6ad22eb4-c305-444f-86f0-040f776ffc9b"],
 "\n\n6. Poissonf\[ODoubleDot]rdelningsmodellen passade b\[ADoubleDot]st till \
den sj\[ADoubleDot]tte f\[ODoubleDot]rdelningen.\n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQzX+0bHOLUY39n5UfL/kmBdgf+bGzeXHGBPtdnjxM
2u1t9qeN1z27nrfQvifn+e+VHxfZi932vrLjwwb77D0lkyVYttnPK55deFR/
n/2dn3VZe0oO21c3FR8S2nPCfmNRxsS3Neft50n83bBw6yX72P5DXzVirtsv
LD9zQMrhlv3mue+XH/O+b7/gwdRYT92H9g1ZIAOf2J/ffdl2ocxTqHnP7SOv
zJ50ZsILe5v7/r3T817Zx73f2arj99o+nE9309z3r+1TuJmeM7i+tZfRv6vC
1vjWPvbe3sNnut7ZpwhEWG458c5+z+5HzZM939tvAdv33v4Ys2Zv57r39rfP
fQ9+vPS9/Ye59sKX7723v7m4wJbr+nv7DZHJpps+v7dvnurcnfP8vb15pG76
zd/v7XXbxW6e+w5UV9prs+vfe3tGBhD4YA8ABVqsnA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvePTepG8A8ftf9Vl7SmZnGE/q2CX186vF+x3efIw
abe32Wd8X7ncs+eqfbXIOveHVUvsTz04fddzw0374oyJb2vst9rLCEbXP8u5
a98hdvPc9+DD9hwSr3ul0h7YR1puOVG277x9ME/s7uWvH9rzAk0Tu3nN/suS
GG4z78f27I1Tnbtz7ttfWX3bvKrjif2dnyAHPLbPsFxTeGbZU/sux4SnF5Se
2zdc5E83XPnMXhxk/OOX9ltsXmYkTXpuv+KYt3mn4xt765CeI1dSXkDl39o7
SDGlHVB6ab/9898rFS/f2bOorriieu6l/T0VNqCN7+01E4JnXc54Zd/2OnCH
XOt7+5S9XcrZX17Ztxw4tdB123v7rFgmtdSi1/bhfLqb5r5/b38z6ZH3eq83
9gxg8MEeAJxjnCc=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7bM6bcUSiWP2f1Z+vOSbFGDPk9rdVL/6PJRfYJ/R
pf0n1eCK/a+6rD0lkzvspz2cudZD7YZ9hOWWE2X75ttP2hm6t/nAbXuX7pzn
v1dutP9R1eyawH7fPqB3ep5Q8wH7WT39F4wZH9pXvlQz5Fhzxp5h0Y4Eq5hH
UP4V+/Sr+j8fTn9sf9k3SSDC8o79gdtvZzBsf2KfCzTt46WH9hXft87V2vPU
/vBXjZj+Q0/t36e+2LRj5TP70skSLGF8L+3nnGA3P9v43H5DUcbEtzWv7Yv+
RalEur2wP+5t3umY8NZ+/5Kv7Qo/X9jv9uRh0m5/Zx9lkDNx3+yX9tzXFxfY
cr23j37R5bJS/5X9eveHVSLr3tsfut931WTbK/sbIOnr7+0NsmZvn2bw2l6n
Xezmue/v7Usc7z7WZH1jzwAGH+wB5z6leA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/XDVfrZV4i72f1Z+vOSblGAf/jZf6IVXtn21yDr3
h1Ul9le3F37S+9Zhb3Pfv3d63iT7NslXwnJBC6HyS+yd5mbLtNVutle+/bMu
a88W+7JVh3zfTzhk/yZwh1zr64P2C5STHf4+PGdfaMt1fXHBWfvfPS+fyn6/
Zr9/vpT+XZVr9lnnWdY+UrpvDzJNZN19e0PZvhUb+h/bbyjKmPi25rH9iv+9
Nxhkntu3i9089z34ub16/R/ey/9f2tubxu3y5Hllr+O6NoZP5429FljBa3vN
/G8Lkja8tZdgCePT3fTWXmFj5srste/sHy+dfURhwzt758SPIf/c39tzrJGJ
SrF+b88Uvl757oL3UPvf299Q+nRZ7iJQXBtk4Hv7yarelz++fG/fONW5O+f5
e3sLYetm4W/v7cHS39/bs1z79WfH7/f2DGDwwR4AmEyrsg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.6, 0.4, 0.2], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.6, 0.4, 0.2]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPXUmzwz/YjX7X3VZe0omV9irqRhMFZycar9TrvV1
4I4+e8YFSlzFnn32t3+CFCy231B4wT13/gr7y75JAhGWW+xZ98xzP1q3x97m
vn/v9LxD9jlJ8cFtFqfsc5//Xvnx0ll7zTPz3n9qumIft8uTh0n7uv1Hn/9z
sxvu2O8Am3/PPvxpi3mz4iN7tsapzt05j+0/fYp5fXL6U3ug4naxm8/sJS5u
lK6tfGEPlASa+NK+e9nu5I97Xtk3gJQ/f20vOTvolk/eG/vZRxQ2FGW8tRf4
MzGUaymQBjruRNk7e5uA/zIPqt/Z31UB2fDePqza8PEe7vf2LGF8upvmvrc/
VSN2ITXzvf31xQW2XNff26/6/G3G3SXv7UG2n/v+3n7qn0kNJ0++t2cAgw/2
AOBQmWs=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                   False], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{
   3.7208532127174406`*^9, 3.720853856413746*^9, {3.72085396302355*^9, 
    3.7208539828698273`*^9}, 3.720868944804757*^9, 3.7208694787961674`*^9, 
    3.7208696031535263`*^9, 3.720869662370699*^9, 3.720870006510399*^9, 
    3.720871879323168*^9},ExpressionUUID->
  "9adbfcb9-1d36-4d17-b9c6-ae6ed0e37eb2"]
}], "Text",
 CellChangeTimes->{{3.7208596798452682`*^9, 3.720859824899585*^9}, {
  3.7208598610420637`*^9, 3.7208599291236844`*^9}, {3.720867201684642*^9, 
  3.720867204403531*^9}, {3.7208674309029675`*^9, 3.7208674328405695`*^9}, {
  3.7208719823409786`*^9, 3.720871983388715*^9}, {3.720872136140271*^9, 
  3.7208722079210267`*^9}, {3.7208722905644336`*^9, 3.720872313690674*^9}, {
  3.720872412223323*^9, 3.7208724498999662`*^9}, {3.7208725143906193`*^9, 
  3.7208725182233276`*^9}, {3.720872564791803*^9, 3.720872878328125*^9}, {
  3.7208729583802543`*^9, 3.7208729942015734`*^9}, {3.7208730769275045`*^9, 
  3.7208730953715253`*^9}, {3.7208731371200504`*^9, 3.7208731609739127`*^9}, {
  3.720873202341837*^9, 3.720873404423688*^9}, {3.720873438420394*^9, 
  3.720873538680278*^9}, {3.7208976327882805`*^9, 3.720897724987437*^9}, {
  3.747467312354022*^9, 
  3.7474675906278934`*^9}},ExpressionUUID->"2a6baae6-6f41-444c-b36c-\
7030a9252fd1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Estimera parametrarna", "Subsubsection",
 CellChangeTimes->{{3.7196696374645977`*^9, 3.719669649715214*^9}, {
   3.7208605419433007`*^9, 3.7208605501624727`*^9}, {3.7208735472393184`*^9, 
   3.7208735493938427`*^9}, 3.720879175213763*^9, {3.7208979991513243`*^9, 
   3.7208980104012794`*^9}},ExpressionUUID->"f4b7598b-007d-4311-84b4-\
d960db6ebc9e"],

Cell[TextData[{
 "Genom att anv\[ADoubleDot]nda f\[ODoubleDot]rdelningsmodellerna som passade \
b\[ADoubleDot]st till varje f\[ODoubleDot]rdelning kan vi estimera \
parametrarna med hj\[ADoubleDot]lpa av inbyggda funktionen \
\[OpenCurlyDoubleQuote]EstimateDistribution\[CloseCurlyDoubleQuote].\
\[LineSeparator]Vi estimerade f\[ODoubleDot]ljande parametrar f\[ODoubleDot]r \
varje f\[ODoubleDot]rdelning::\[LineSeparator]\n",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "1"}]], "Input",
  CellChangeTimes->{{3.720898267239463*^9, 3.72089830917212*^9}, {
   3.720898428411684*^9, 3.720898510736493*^9}},ExpressionUUID->
  "a77281b4-1a6f-46ea-b1a3-269159cdd235"],
 ":\n",
 Cell[BoxData[
  RowBox[{"GammaDistribution", "[", 
   RowBox[{"0.9702942883021447`", ",", "0.21625860771800573`"}], "]"}]], 
  "Output",
  CellChangeTimes->{
   3.7208991140718937`*^9, {3.7208994798403096`*^9, 3.7208994846972246`*^9}, 
    3.720900003827488*^9},ExpressionUUID->
  "9016296b-e7b0-440e-9ee7-cea65579d813"],
 "\n\n",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "2"}]], "Input",
  CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
   3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
   3.7208985233774295`*^9}},ExpressionUUID->
  "eb1615c0-67ad-4aa4-8932-06e4d2763322"],
 ":\n",
 Cell[BoxData[
  RowBox[{"GeometricDistribution", "[", "0.0690512360171247`", "]"}]], 
  "Output",
  CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
    3.720899171276777*^9, 3.7209000087659793`*^9},ExpressionUUID->
  "371f73ac-e359-457d-84f7-9a10f67c1985"],
 "\n\n",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "4"}]], "Input",
  CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
   3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
   3.7208985233774295`*^9}},ExpressionUUID->
  "f38891dc-1f81-4101-9c92-7d2a32e42b7b"],
 ":\n",
 Cell[BoxData[
  RowBox[{"NormalDistribution", "[", 
   RowBox[{"2.9827343709816203`", ",", "5.154983546721329`"}], "]"}]], 
  "Output",
  CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
    3.7208986039150763`*^9, 3.720898651662706*^9, 3.720899235572235*^9, 
    3.720900012054307*^9},ExpressionUUID->
  "3f2641ba-c648-4a75-8559-3261bc0b277f"],
 "\n\n",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "6"}]], "Input",
  CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
   3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
   3.7208985233774295`*^9}},ExpressionUUID->
  "14305d26-508a-4eef-8db4-ef801884ace2"],
 ":\n",
 Cell[BoxData[
  RowBox[{"PoissonDistribution", "[", "9.758`", "]"}]], "Output",
  CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
    3.7208986039150763`*^9, 3.7208987087129555`*^9, 3.7208987507875476`*^9, 
    3.7208993120066557`*^9, 3.720900018244691*^9},ExpressionUUID->
  "edb1f348-eae0-41ec-9a9a-568165eb6520"]
}], "Text",
 CellChangeTimes->{{3.7208980681147385`*^9, 3.720898070191227*^9}, {
  3.720898877654931*^9, 3.7208988873748245`*^9}, {3.7209000810858545`*^9, 
  3.7209001620831127`*^9}, {3.7209002088823595`*^9, 3.720900439087206*^9}, {
  3.747467614245282*^9, 
  3.7474676699583592`*^9}},ExpressionUUID->"808e49a6-9a64-44be-a654-\
635636de2e4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ber\[ADoubleDot]kna konfidensintervaller", "Subsubsection",
 CellChangeTimes->{
  3.719669934260833*^9, {3.7208605552877355`*^9, 3.7208605645850863`*^9}, 
   3.7208671831055613`*^9, {3.7208980187571993`*^9, 
   3.72089806229564*^9}},ExpressionUUID->"c439f0d7-35c0-4559-8cae-\
d1efccb0ec49"],

Cell[TextData[{
 "F\[ODoubleDot]r att f\[ARing] ut konfidensintervaller f\[ODoubleDot]r varje \
f\[ODoubleDot]rdelning estimerade vi intervallen f\[ODoubleDot]r dess \
parametrar, vilket var antingen 1 eller 2 styck (beroende p\[ARing] \
distributionsmodellen). Detta gjorde vi med hj\[ADoubleDot]lp av  ",
 Cell[BoxData[
  ButtonBox[Cell[
   "EstimatedDistribution",ExpressionUUID->
    "b0f26a76-57c3-44aa-aaa5-841f00cb3b9a"],
   BaseStyle->Dynamic[
     If[
      CurrentValue["MouseOver"], {
      "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {"Link"}]],
   ButtonData->"paclet:ref/EstimatedDistribution"]],ExpressionUUID->
  "d73261e3-9050-42c9-9449-0a2a2c55b536"],
 " och anv\[ADoubleDot]ndning av inbyggda metoder f\[ODoubleDot]r att \
estimera intervallet som i kapitel 2.2.3.2 i projektbeskrivningen.\n\
\[LineSeparator]Vi kom fram till:\[LineSeparator]",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "1"}]], "Input",
  CellChangeTimes->{{3.720898267239463*^9, 3.72089830917212*^9}, {
   3.720898428411684*^9, 3.720898510736493*^9}},ExpressionUUID->
  "c74ae0d7-2564-4ac6-af49-f57ac0a4d8e5"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "0.9649016163217382`", " ", "<", " ", "\[Alpha]", " ", "<", "1.01956"}], 
   TraditionalForm]],ExpressionUUID->"8d34a611-c698-46ea-b5aa-98b97869a459"],
 "\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "0.21312891600238856`", " ", "<", " ", "\[Beta]", " ", "<", 
    "0.2314114898046231`"}], TraditionalForm]],ExpressionUUID->
  "52f9f6db-3950-4276-812f-515607a5d63d"],
 " \n\n",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "2"}]], "Input",
  CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
   3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
   3.7208985233774295`*^9}},ExpressionUUID->
  "80839401-a713-4051-87e3-7664d93d52d0"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.0631177", " ", "<", " ", "p", " ", "<", "0.0654572"}], 
   TraditionalForm]],ExpressionUUID->"fc12fb17-8bdf-402d-817b-eea049d61df2"],
 "\n\n",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "4"}]], "Input",
  CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
   3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
   3.7208985233774295`*^9}},ExpressionUUID->
  "ba1d2296-09d5-498d-93be-a5aefc1d0907"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "2.966745926337509`", " ", "<", " ", "\[Mu]", " ", "<", 
    "3.1546749359285955`"}], TraditionalForm]],ExpressionUUID->
  "56fdf371-c486-41dc-ad10-d73448bf9c45"],
 "\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "4.922598928281953`", " ", "<", " ", "\[Sigma]", " ", "<", 
    "5.263783108363482`"}], TraditionalForm]],ExpressionUUID->
  "0f7b5198-9dc6-4ecc-b86b-cc146b05936d"],
 " \n\n",
 Cell[BoxData[
  RowBox[{"Distribution", " ", "6"}]], "Input",
  CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
   3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
   3.7208985233774295`*^9}},ExpressionUUID->
  "609097ba-0dd6-4fdb-b77f-bbd21f57ecab"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "9.547351468115098`", " ", "<", " ", "\[Mu]", " ", "<", 
    "10.051315198551569`"}], TraditionalForm]],ExpressionUUID->
  "d4b8a67c-a8b9-479e-9785-beec19971fc9"]
}], "Text",
 CellChangeTimes->{{3.720902751463352*^9, 3.7209027944767447`*^9}, {
  3.7209028541462636`*^9, 3.7209030128632975`*^9}, {3.7209030475167894`*^9, 
  3.7209031296344013`*^9}, {3.720903282024609*^9, 3.720903290704728*^9}, {
  3.7209033283133144`*^9, 3.720903671694278*^9}, {3.7474677181080346`*^9, 
  3.7474677341623344`*^9}, {3.7474677845959897`*^9, 3.747467842711299*^9}, {
  3.747467909926689*^9, 3.7474680014960318`*^9}, {3.74746804171445*^9, 
  3.747468055495423*^9}, {3.747468113573058*^9, 3.7474681343432903`*^9}, {
  3.7474684158944907`*^9, 3.747468422789672*^9}, {3.747469404987802*^9, 
  3.747469404987802*^9}},ExpressionUUID->"57a82bc7-f071-4acd-8e38-\
3b5588a6a6b8"],

Cell["\<\
Genom att repetera utr\[ADoubleDot]ckningen antal g\[ARing]nger s\[ARing] \
fick vi ut intervaller f\[ODoubleDot]r varje parameter inom 10% av dess \
medelv\[ADoubleDot]rde.\
\>", "Text",
 CellChangeTimes->{{3.720903698374149*^9, 3.7209037991964145`*^9}, {
  3.747468464515068*^9, 
  3.7474684962281604`*^9}},ExpressionUUID->"07dd5404-b02c-4af7-8df5-\
98d02e3464b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utr\[ADoubleDot]kning", "Section",
 CellChangeTimes->{{3.719668360694542*^9, 3.7196683625540123`*^9}, {
  3.719676291443717*^9, 3.7196762985592556`*^9}, {3.7209038101051245`*^9, 
  3.720903810318286*^9}},ExpressionUUID->"3d490705-987d-436d-b36f-\
12691b0b03fd"],

Cell[CellGroupData[{

Cell["Best\[ADoubleDot]m f\[ODoubleDot]rdelningsmodell", "Subsubsection",
 CellChangeTimes->{{3.719668985414158*^9, 3.7196689952896585`*^9}, {
   3.7208590483149843`*^9, 3.720859081285428*^9}, {3.7208596704697847`*^9, 
   3.7208596771732564`*^9}, {3.7208605519281883`*^9, 
   3.7208605522094517`*^9}, {3.720867115305837*^9, 3.7208671206186123`*^9}, {
   3.720867185605689*^9, 3.7208671858869557`*^9}, {3.7208719675064974`*^9, 
   3.720871978861516*^9}, {3.720873578873127*^9, 3.720873584232933*^9}, 
   3.720898012263592*^9},ExpressionUUID->"f44243e8-c84f-4819-a70b-\
3906fe05745c"],

Cell[TextData[{
 "F\[ODoubleDot]r hitta den r\[ADoubleDot]tta f\[ODoubleDot]rdelningsmodellen \
f\[ODoubleDot]r varje f\[ODoubleDot]rdelning anv\[ADoubleDot]ndes inbyggda \
funktionen EstimatedDistribution, som tog emot en lista av punkter \
(v\[ARing]r generade slumpvisa punkter) f\[ODoubleDot]r en \
distributionsmodell.\[LineSeparator]Svaret fr\[ARing]n EstimatedDistribution \
lades in i ProbilityPlot funktionen med alla tagna punkter fr\[ARing]n \
randomNumber f\[ODoubleDot]r att j\[ADoubleDot]mf\[ODoubleDot]ra punkterna \
med f\[ODoubleDot]rdelningsmodellen.\[LineSeparator]\nVi hade sju modeller \
att v\[ADoubleDot]lja mellan f\[ODoubleDot]r varje f\[ODoubleDot]rdelning. \
Vissa modeller gick inte att estimera f\[ODoubleDot]r olika \
f\[ODoubleDot]rdelningar medan de fungerade f\[ODoubleDot]r \
\[ODoubleDot]vriga. Resultaten f\[ODoubleDot]r modellerna f\[ODoubleDot]r \
varje f\[ODoubleDot]rdelning kan ses nedan..\[LineSeparator]De sju modellerna \
var normal-, gamma-, exponential-, weibull, geometrisk-, poisson- och \
binomialf\[ODoubleDot]rdelning.\n\[LineSeparator]\n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1: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
2L8swvbrLA6WSC0LnIZ2SVf6t1zFofqRhrtvT0TYbeTgS7jlAdMQYdyvu+HJ
oXqShi0pC65t38LBPcvTZadhw4WJh5KYcb2+pCHT/3uKtw8Hc5jNtcjqMxqq
nGpHneZQvfmMYbzvw6cFcqD/ZZnwZ8yVbQr+E8Sh+vMZO9OnX9UHc3D9MznA
8Mstt+Pd4FA9Yj5v2yCnKJGDqZbp8j7DeH7gy2/MuF6fPsM8aYnPEyEHcsvl
OqZjf1Uk+0chh+pVOpz9n7TcoOfgokWOnNKRvLjgTlgth+pXOmDXbXj+Vw7G
k/IhHXuPuzwZ9I1D9Swdd7SzG7ObZqHUIgeF6RiyzcFGOyyL6htzv8sxpy5P
yMIZy3Fm6hLp1h4z8mdkUb1joV+bY9LhC7NgazmOTN3gsGxNy/IVWVT/WPBs
xlnayi0LBaS8YDirUIk7e2RRPWTBcekNN2/fLByzHIdyhmNLBlX6Xc+i+shC
3vxvu9feyMIAy3ZmOPS7YYxmcUgW1csMDAuPXvbkbhZyLNvPPQMjDvT/duBp
FtXPDMx27DC+YXEW/rMs76MMJB/p2L9/ZRbVU4Yj3s3NK6VZ6GF5ffIMjPmR
d7BJbRbV10xEnfgv1s0qG+mWxxuYibI2a7NuMeN6vc2EVa/VUd2ss7Fzq+Un
E8G/0g/yemVT/c3E7nk/o/n9stGJKZ4YhcUv9n81ArtsqseZ8HW6VNV9ZjYS
v1g2dCb438f8yZyTTfWZOdeDl7cZMD8bngmWC7IxZvadtU4ns6leM+c0oMhX
cyobrU9ZBIoNFfdQzvKAbKrfbATfrBn4+kY24hZYDggbrxyDZgwIyaZ6zkZu
7MkR53Ozsc5S3ZnZCHwztFtiXTbVdw4GFLHHz22bg8Yi5riN5eDx1xNTm9vk
UL3n4MCRLQH+A3LwyrKdvTlY/XmyfcMROVT/OfC/imEXR+fAieCRA5tfpxaw
xuRQHnBw8Fnz31fH5eCXZTmYfZrUe8iTrfNyKB+yUDfHeoJpfg6eWKY7OQtJ
ryfPxcIcyossXL8TcOfU7hwssVzuSBZeLHfoG+STQ/mRBavNHxZxfHPwheAh
C3MmP23d9FIO5UkWVPtzShSXc3DPIu+/srC046p+TcJzKF+yES8vePvzXQ7m
WOR5ejYe+7iGzH2fQ3nD7IN+taqf6TnQW+TVLxu5bcusxPk5lD/ZUBwUT9pR
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
2FkOGA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
Vc1c2+q3Jhxd+uiTxKgJ9YTnTYhpf6nL8UFNtJ5rgnU3vfYDjJswgfC8Cc0P
i0ceZNpt9V0Tut6dv66vRRP8CM+b0O7Mkahp1k203mvCizH5C8/Ob0IN4XkT
RlQGX2y3oInWf03QCZ53oZLpdwzhOfN+8oAruw820XqwCR4p+oLP3k04QXje
hKjg4bV7mPu01YdN4K5wW3H7WRMqCM+bMF31oXDCyyZaL7Kxddr4uZlvmjCK
8JyNnwZeZanJTbR+ZOPz6etDp7CacITwnA3j9d7ed+VNtJ5kIzlxyCmHdmyU
EJ6z8SXEn5M/kE3rSza+zrYN7z+FjeGE52y0xDwWmtiyab3JRsRHg46r5rPh
RXjOxtT0h14SOzatP9no5DNT828bGwWE52yEn7w6dD/Tb1s9ysalzCXTnt5i
YzDhORuPX+pJZ2SzaX3Kxq4uO79FFrGZddICmAN5Xv7Kl8zn2upVDlKe9ui9
TshGDuE5B1kRnL9jW9i0fuXgotk3g5X/cTCQ8JyDqdMOz+o3kkPrWQ48O1ms
KDXhYB/hOQdFXhbh7ydyaH3LfM+C+3jMUg4yCM85mJcctkm4n0PrXQ5GX2ro
cucAB/0Jzzlw2mXh8ewsh9a/HAjq6tzMHnOwm/Ccg6q6aS87h3JoPcxBwxtO
1focDlIJzzmo2bAh7Fgeh9bHHEiCq78NKuagD+F5M+S57AsNLA6tl5tRkXAj
8BPT3kl43gz3EVsK/ok5tH5uhsXzMdM8FRwkEZ43Y61axyDpB4fW0804nLap
5MVPDnoQnjfjuU207g7mvm31dTPSWowdb//mYCvheTOmjD2V171PM623m7Gv
4mVCYd9mJBCeN2N7ZEF2xbBmWn83o2noizEym2Z0JTxvRr8NymV/bZtpPd6M
r+vGuMXtasZGwvNmvEicl+lxspnW51y8McNzpW8z6sh556JzoeKc45NmWq9z
4enqP1L4ohmnyfnnghVrdrlXdDOt37mIWtzPqSG1GeNJPOCi3Um26cymZlrP
c5F+0xOcb82oJfGBizn8CdvOf2+m9T0X33rKnmz50QxfEi+4cDpwRyhgxtFW
73NRtCbtycjuXIwl8YOL9llPbZf24NL6n4usW8887Y24qCbxhAtRp9WiqCFc
qgdwkblj2vaD5lzqd3Oh3Mv2S2LG0aYPcMF97/li+BwuTEm84WLLOLubf+25
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
2e4T3y74qKH++Uf8D9V94AE=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1: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
bV2kpfl5M/4PG5KSyg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          PointBox[CompressedData["
1:eJwtm3dcjV8cx7M3ScjOzviZRYRPdnZWNhWSkCQrocyQUZKQZERWKiHtvcet
brt7u3uPrAbJ77nH6Z/7OvU85znnPOd839/v53Mbbn943d62enp6snZ6erpP
vcGbMh9MWYuWV19LVtlbw9O+R3R/D1fatoVeB8PPB8zc8OusU7zbHUd4zjvX
1LL8JP27C/TahTzgLTiN04bhS/nubvBcF+iScvM0vf4kPI+vOLDP8yJOycdM
7fzWA5bLLlz4w/Kh93tCr3Cy8ZUbNzGnbs2Ne87n4bk3PmlKwS14kP4uQk/m
YadwvI34Zd3bTrhyGbaTKk7uifdFC+nfG3qpOa7Xht7BnOjs44mPryHkyYjU
55384UGe5wNeuJtX9Tx/xA+9pFwbcxMhbW3S26/1Ryt5/m2ErGEXZtncRXC6
cYSroy/0xjp0np92F/PIePzgeSL6hLdBALjN5IHg9evH3YAAnCXj80fIWdd7
H23uYehkzqiOXneRHNDDKL1tIBLJeAMQ8ncRp/z9fezcY6HrEXpeKxTe7R6g
lXQXiJDUM7N3T3uA4PvkB7bjv7FylQ8wj8znASxfDH48uO9DcAsb1wtDH4IX
y069kPsQZ8n8ghAya3CeKechhra36flf1CMYD5h3T24fhEQy32AYe+cFlwx6
hJ2zSIewjLNYrDcyBH/J/EOQ3OpkF10bgjUzr863FYdAr9dEY23ZEzwm6/EE
yWaJyyc4PIV2bQzT4xPYmr15Enb8KUDW5ymmBMRMVT9+ilsHpb9ffX2K5OI+
7O0vn6KOrNczGP95lXus9ikmX+lXVdj4jOm/oLdA/hTnyPo9h6XZok/erU9R
9GTxp+9/nmPK5tlV782fYRhZz1BYXzZN6XzgGQ4zq2XU/gVYBbI/o44+QxJZ
3xfgbek8mvvoGXpVPHOZ2/Ul9JZMydkV/Ay7yHq/RP3Gc7IBE57jvW66+mHQ
P/1qqsgvFH/J+oeh/nPj3RGhoVij667fKyQvHG/jpgrFY/I6XsFyKi/wUYcX
0OqWe/BreG7tf7qq5QVAlpNpX76RP3PlS9xiVo814g30jY0il9S+RB15X2/g
aaE541ofhsnbb6X+NHkLTw+Lr7LGVzhH3t9bGLcu2tA74DWKmN4GTn4Ha59I
v52r3mAYeZ/vEOHR3t2z51sc9lV7wCwcyQ2hNl/7v0USeb/hqO8279Uyh3fo
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
jR3L0YPwtgIlWzrk5bmW0/y6AuHVZsvVTNuO8LcCTima9Odu5TTfrsCPhgPm
/t7l+Eh4XAHDl+PWHQ4pp/l3BZY3KI/MiyxHF8LnCgi6RJnrFZbTfLwCHXsO
eXCVmdcOwusKrHxrdeExM69/+XkFHK614Vg2liOS8LsC0WeKcp79Kqf5OjO+
Pa/1KlrL0YHwvBJ7AqweTx5cQfP3SqyzGHPoxvgKbCE8r4SJS5awyKyC5vOV
MF12TmFkXoF3hOeVeD36+xIN0/6X31ciQLCHY7qsAm1e6zqshFHBz20+Kyto
vl+Jp7F7xKM2VWAj4TnT/8pX7zvYVtD8vxLpyW/MbzpW4BXheSUK2wfnJzHt
f/VAJT4lz5pmy6zjH8LzSuj/J/U1PV1B64NKJNf1qB9yrQJrCc+Z8fapCuTd
qaD1QiUMlsl/zGXWNZTwvAoBxjdqRwZX0PqhCiaXr37f+7ICzYTnVbAOuyAz
SKmg9UQVwrse9H2QUYFVhOdVMFi4fMD+kgpaX1Rh3iuTpPUVFXhCeF4Fq1H3
z3WoqqD1RhXM7/mmlwgq8JPwvAolVoLYXY0VtP6ogn/FyNbXvSuxjPC8CrzY
CXmThlbSeqQKlweW+5ybVYlHhOdV8JvR4/2oeZW0PqnCtcj8O/MtK/GV8LwK
5z2+Dp13qJLWK1VoTSjr+c29EosJz6th7Mx/P9GzktYv1ei6eUrCT+Y93Cc8
r0b25A+Rd0MqaT1TjVavmyOsiyqhJjxnruec9PbQVNL6phoBF9oeeNZUifmE
59Uo/NtrVEqvKlrvVMOk2/vMfGad7xKeV2PR7vGbVgypovVPNURRH31Es6og
JzyvxiifaQuvrami9VA1MqcNt3dj1nku4Xk13FYOu/LFoYrWR9WIsH0zb5hT
FXwJz6vhaLecE+dVReulGsw7H2O/5H0VxITnNTgo8x505mMVrZ9q8K086JBv
QhVmEZ7XwPXLHPdGVRWtp2pgc2JwyeqvVbhBeF6DkOlmYZENVbS+qkG1o1be
bkA1+ITnNdiQ8GFI8qZqWm/VIKz4gHm33dUwIzyvwcBuq7zNmHX6V3/VQN+m
e9Njpn2V8LwGTY3/CT6crKb1WA0ctrQMKP5QDQ4JVzVw7LOh9dSXalqf1eDm
n2zBcmE1phKeM/MJNbE1F1XTeq0W3I7u6wd3rsElwvNaBE3u9p3du4bWb7Uw
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
6/E/Vrzdjg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"WeibullDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
  CellChangeTimes->{
   3.7208531951510353`*^9, 3.7208538448105297`*^9, 3.7208689446172495`*^9, 
    3.720869478535988*^9, 3.7208696028893394`*^9, 3.7208696620534735`*^9, 
    3.7208700061621532`*^9, 3.7208718791250277`*^9, 3.720875448845619*^9, 
    3.7208762830709653`*^9, {3.7208938962282596`*^9, 3.7208939128510103`*^9}, 
    3.720893964552347*^9, 3.720894118036085*^9, {3.7208942960475397`*^9, 
    3.720894302868361*^9}, 3.7208943812394094`*^9, {3.7208944567505136`*^9, 
    3.720894469417482*^9}, {3.7208945104711437`*^9, 3.720894526228578*^9}, 
    3.720894662590969*^9, 3.720894696011142*^9, 3.7208947376250043`*^9, {
    3.7208948765988336`*^9, 3.720894893297638*^9}, 3.7208949794619904`*^9, 
    3.7208960114386134`*^9, 3.720897072061517*^9},ExpressionUUID->
  "54871636-d968-4095-9c60-7a247321f40a"],
 "\[LineSeparator]Vi kunde plotta ut fyra f\[ODoubleDot]rdelningsmodeller f\
\[ODoubleDot]r den f\[ODoubleDot]rsta f\[ODoubleDot]rdelningen. Man kan se \
att tre av dem \[ADoubleDot]r ganska lika varandra men den som \[ADoubleDot]r \
n\[ADoubleDot]rmast r\[ADoubleDot]ta linjen \[ADoubleDot]r gamma f\
\[ODoubleDot]rdelningen.\n\n\n\n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1:eJwtVAtQlFUYXR3AxWyhrXwQOiHkI0dQEwWRzjC4qJAaqAsaUiKg8SphB63I
WgUFdEFSoEzaUUGT8cFD0UGi3FFDUVRaXHkJ7LLv3f9CSibP7v2nb+bOnTNz
/3u+75xzf4/YLyLiJwoEgnV0sb25x/mFnNzBB3zVwLtEIlKK7iLK/0pjRsPv
WLdLr30/rAlj6r3mOYsbobzhdlRW9gDRBarBedEPob787Y+3pjxC4GTNmS8D
W+AQFHvzp02PkdGgdPPpUuOXt78JGfu1BRdX93791iUNTq8MqJjqrIYtE74x
dW1Y0j252ZTeirn8hZ1Im7dZs830BHEJrJ7h+OPo46vin4KnF/ZA61kXtcnc
Btmx6Q5SUS/u7U4NWZTegaDP9I9md/Tixd4bg4kTusDYVvdqocr5Linvh2eo
GGhZF+vah3dExvcOinuwPtaVjtiHa8Uyt6sdPeg/dydsea4e0uuaqS5lvfi8
0E47NMBZKMz9K1ELv1zGYMA/f7vKQnx0cJSKFlaXGsGJFFnV/Tps1pX/fOtd
ExxKgx2TLvVheF9iveyYCSlPScWDnXooCSMww7pkjc8qdwMGeD4zQopOXJE0
GRBE1Vg7xYJD567ZImVGgNfTgoashHGXaSaIeUMs0A7M9X6zxoTl7PhEK+6+
UC6dtsYMobwo+HCyFVsK9idoW81Y3OXlJC+y4vCH4YqwaAvkrJ3pNjidysn1
77BA0MoEteGCalL96Qgr5i8WXnDfasNW94zAIyorIhQlqeIDNujjfS3CBTaU
SWqfj6ptUPWOrvU7YoNnZdquQrsNFlXpVonBBo9sa/j1WXY0F+yRxPvbkc4H
wo7TOaGTnmTbMdOHNWRHbUDBG11NduwWH/jj3ik7xGMhttuvcZjR1vxyo84O
zSbFsx4JhxTWrgOHssD6RWPnOdxkcfLiUFm5o/CimkMxs38hB7Oyrt0wxMEy
fJ46zEE60LdCMJPgOLMvhkNVebLX+gACE03Hq30cBmcNF8+WEuwM6N6gKOHg
2B2XfT+FIJ7FoZGDInRPVMl+gj4+Pxwe/pmYer6MID/ZSBk4vJ7pp0urJtjB
4vaKg+TYncjtDQTaDUwwgjUXpbUVjQRH+EASDNecTfv+McEy/n0RTF929oxL
G0EPsyeY4EzOivnyboKrpSwgBCdiTqpOmAnypjJBCPQS93C5nWApsyeOwClx
Y1PWcwJn3m8CT2SN3B8kqGF2ZBIEhRbPUQwR5DA7sgmqPo30PTlMsC2ODUxQ
/+C35q9GCJbw+SD4aHXsWu9Rgkl8ngk8tK+2F48RdDI7yuk549WjH4/Te/j3
SxDz/EppEcUHqXuSWoIb+WF57RR/wv8vCM61pu/UUbyomg1EdU6ww0Kx44JD
dCIC39uBWYTidpruyRqCypXjQ/9SfJlOF0B1iKzymzFCcRYbz0i/13CdoxRv
4dsjSKoT549T7M2ue0kg4KsfE/7f/wNchoJr
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxF03lQjGEcB/CV3RVDKOQem5ihEIZc9XV0qGblXIuJnDlyG+No0EHYMq6i
SYp0OVI5IhRmpSlTyRGtUGvb+32xJUe13uepmfeZeeedzx/v8/5+39/zSNZs
X7jeRiAQ+HAPebsYREEV5+M8vRSh2n9ZufDIYyIVke88V2sqnVR/CnFxVV9/
Q7QI2+0jn5ZeeQGNxD5hisoVn53F4XFzypB0MF6bM0KKazs8ulWnViKgSaCM
yQ7BUeOCB0OPvsGNiad7DnA6gm30+3fw+tkUaPx9FovUaYnKYR/wa2OycMit
VHyi+6mwQBXv5SbNQ1HpFe/7llp0HulwWdpYiEObH+851/8rYhLSfvs4lKBk
b2HywHF1+OgWmPFs3Wv0yfatO9CnHmyqc9HJ2Gq4n5gVrKmsxys/mWqh5DPI
373vq5HzUNu7aGk95sde4Er6hihJkKMyRIOdpPwdGuRLvJs9BugwO5gEoEGr
7kyDeokBIRvIakCFb7fF+/ubkG9pfbtP3wC5LELst8mMmvJmriUtfPTCfr2W
McgqDuBK0EHmsvu6oIVBGs1HB//3BdX69SxKaf16XJt8w1GdwSIxgSw9Ommc
amUVLIwjx9veHGzAbP2B6eIGFvbyqXdL9howWuxeFveTRSwZ1w8D5pZH3/T/
w0JB2nUyIuWR/FlRCwtbLk1FqBGi/KFV+9pYCF2i+30sN0Lh6h4ttbIIp3ma
kL5BpM3hfBiTVhb4mSAYJjbVcs7kppOzy4Qnt67m/+CcTus3oeT5NNe/nP/S
AZqwdtTw262c59HATXD0lA+0ci6j/Zlh1zQji7ixSrqml9yMY6c7fyW+RPs1
42JkWCPxIKHMbkyeGT0Uln/EW0l5QgaBLxPbiB3pfBls8T1uJZ5JxuXBIPPq
B+rz5jCuAwZ1iy3UDjQvBgKbFmodOc6HGEQo26h7j8lLYjMYnEqxUk+j54VB
rrrdPW1IYAyUze1eS+8Dg/TWdtcHkgPEQm5t9+oCv+42LiyqOnyP2704gIWl
w13pPFgI6PqOO7s2njGH8T5O7wvvCbXkQvDuQuJJ4v2JnjfeuSSebN4rSPuF
vN1Iu8W8RfQ88K5JJQPmfXvw8nXTv/COIuVreS+j5fAeS7Zr5t2p4/0fel83
9w==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1:eJw1lAtQVFUYxwk2BIYYNIwExwS3UkiMmVYihX/ESyEK0hCQCVywEBkeO8gg
ZUqCKyICAYPS4IIYShGuuEAiMkhI0AMWlIfR4q77YF/3HgQcJnlM996mO3Pn
zNx7zzn/8/t+33UTZnxy2NLCwiKMudnx/2u56elohFAKuXut+x+eN7Gw8jDX
8MY9FJwUjCVc7EHNJfYaBN9Q3Ra5dgCr7GtvOXaf2hU1ZzsMwWede+0tH0Bk
0UQy7o/CqSVUlec0jvcVt79wHBrD4j7199/1TWL6QmXspSuT4Kbb/I1Iqzr/
opApdGVXvMqLnsZos2e5+10F9rOfb1biljLK0MFTIqR9nkmkwoLy08Ytziro
l9jAT8DXK/e86fwEbQM53RIXNWLV08rVF9X4aWNc8q7HakwluoSPaNTgT/3z
dWqXBj8Ef1B7U6bBxh0KvnW+Frf/Kjhel6NFj8SFeaJDanZSeImnDsmOMb6y
AR36JoIzDjzUQcFOz56BKOi9kOGsGZyuCixOm5nBStlOnw6eHg/c2Q30cHjq
LOkr0aMx089uokEPgbRIWveSAWEMjZZQA+bCZ4IMBQa48qIdtrcacPZPV4n3
ggHOHC8jtIvpblbxRhi58xnx8p3Ni4ouI77tfbY1vtSIK5FXW32dTUjSypkd
jVgf668qPGqCbT4byASXd7sqPTpNOMikz+k2YfUWrT5rZYaX+JVHQ4sm5B87
I1wKNeObVJa4GZWHdGXjYjOaGNpSkRk1j44FHfnFjCghC8CMo83zNivPzfjY
pyggUWvG4HTAl+NeFBpYXNYUVEKXy4IECvXkWn+4D4W7Ueu3RZ+n8IyxyTGG
wohAOJrRTmETx5tCc2ppRbuCgmjd6Z7f6iks5ckMcZY0+tnj9VLgyT5ae45P
I5ATikbp2Ab/9CAavVx9aGyXbxv2EtJIK6e+goCGrabw5OwJGgEM7Uw/GnK3
/Iqxahomjh8Nu702Vqs3aDix5cyhofHbUC/up9HN2OoppnHCsagm9wUCPxaX
hEZW5PMtxesIujYVmqJ+pnFdWXYm152gvDqdSUyDX2aTtt+b4HPODxrSgry3
vEHQyeppoPHj75ba1z4k8OX6geCgver82zEEJQw9ObPOmiwvW1ESgX0zKyjB
8Zg1Y6pTBCqGTlUgwdWIyKqUIoJitlz7CIxVh6n4coLEUlYAgrDH/jcGLhII
bNgFCBbC3+G1SQjsuPoTTKgjcj0aCWSiFIYQwes7e647dBDYsLrVElzeA4/5
OwSKIbYjCcadtv56v4+gldWvhcA1Yba/e4BAzFQnuJ3gnlgj0w8TxHM+Ecxk
JlfOTxJYe7JCEUztlh4K0DFjAys8wbWl5SNDFIGU6z+C7rjBEWtCUMj1C0HC
BYz7zBHEcXEIDlRJdfbLBDs4PwnmGr1TBlcJ/vs3zeJfKjpm0Q==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          PointBox[CompressedData["
1:eJwtlAtQVFUcxoFqIyhKIizHYHkIAgWCIgLSN0VGwiDxCoYByg0KGx4+kIQh
y5bnEhEVoBJjCA6mgsQ7xRWEQaZaQCIWxF3ksQ92997DI0aQtO650525c+fM
Pef//77f+c6xE2VEJJsYGRmFci/9LrpEla+priJq7kJ1v7AZg37KxNMa6f/j
HoytV10ezxrA47ETC06eg1jbW9FrbiZDqmbj56VRGY4aXL72PHsHMzlWTUEz
o8hs+KLa6+QYpOe2eCgcx5E+cHnPK7vkCPEpfvND1QSC+2Qt/dJJFHGjEfsp
ZN7JLFYL72FrXJL/dJgCLY1vBz2VoAT/d12JtfOSqpt+9xHRZZOvD7+PyhrP
D97ZPYNjKeVMLmZgY6IQ29nPQkvlhM4i/OnfV4L/nYWX6RWu5BwyrpmZNw7N
YZzKN51HZchYiUP5PNYjqcF5iI6nFOYGqbAyGip6IVaFyf60PdnLKqTz/lTo
cGodHvpODf+2wSzpOTV623bscnbRQMTrU8PG17LTrkOD5iBKQIOKHZLuSD8t
3OLLbq1u10LhKYzb36HFQ76fFm059vp81wX8RBoGQnwWYLMor86rWsBtYfPR
lPIF2FoKDF2PFvCWd+K1/c/qsOEV7VKWoMMb02GlVek6jNdZzaZ26uBHcY7o
4J458d4v5no8J687HGCmx7JM1Nsep4dy/eSn3Zl6OCgCiaxej4Ke32r3dejx
ZdEPie/q9GhcooYNSDJ2vZruZkA0z9eAvOizuvwUAyK5bpZiA1RNSbKhWgMa
uOryOgOWb0vMC+QGOE3RBga8um/+2/lnGOTwG26Amc3hG7a+DB48ooFh4GE8
X3MomUEIHxAGEbXtwqVvGAzyfhmkC8eDZtsZDKxu54gxcA2Jivn4LgMSTgUx
yH5+s3H9Pwz6qfwVrm6esvTmVhaBPB8W8Q87npjyY2EtpgZZFAwIgq1jWFRw
6fBOZNGwKSGk7AgLq1hfbgdZKA9te0kkYfH9LdqQhe31g6sXa1lYvt5SQxpY
ZLlKKnM7WWj448DintrYY9s0i3KKo4dF542+1xyXWPjz/FkE+U07PmlCoOLz
z0J4YPP6+CaCMv6AcLqOb6Q1Cgl8qVxu3t3UK3ur3Aks+P0iiC3Kd6jzJ+ii
8dpCENMtuBQTSeCzkz4EbGZfpUcKwYyj4FRFIMHB66Wq+iMEJdaTQw+4eRfF
4jhxDoE3n3eCE8Pd7YvlBGbc7JJUgrgAY8s/ThO0Udq5BNlnFMPaSwTFegqY
IOPlLOLdTJBIj18pwecJL37l3k6wU0EbErT8lSzdLSUwfd+CEsKva3K58wCB
gus+d4HAtlFwykFGUMjniyBLJmg9MEIQT3Fz6yz+bj7WOEHgSfFy6xbrWn4U
ThEI3Ao5B5yOFEFrqoJgiuKQE4R9JAk4M0PQzF8IBM5pTUKiJsindjQElZ8s
f/bnMueLl0Og8TofM/WYgN5l3G2G/wANyIlz
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
  CellChangeTimes->{
   3.720853199819336*^9, 3.720853846567785*^9, 3.720868944648502*^9, 
    3.7208694785840206`*^9, 3.720869602942377*^9, 3.7208696621205206`*^9, 
    3.720870006202182*^9, 3.7208718791620655`*^9, 3.7208754488966675`*^9, 
    3.720876283117999*^9, 3.7208955130193405`*^9, {3.7208955887939262`*^9, 
    3.720895604187045*^9}, 3.720896016341078*^9, 3.7208970741830287`*^9},
  ExpressionUUID->"182a3fc9-8b34-480d-8753-94ee99fd772e"],
 "\[LineSeparator]F\[ODoubleDot]r den andra f\[ODoubleDot]rdelningen kunde \
fick vi ocks\[ARing] fyra modeller. Man kan se att den gemotriska f\
\[ODoubleDot]rdelningen passar in b\[ADoubleDot]st.\n\n\n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
4I4avGZpQgXNpyuxtmxM4sOkCnQnvK3E8GKTnv/VVtD8uhIrbBp2BXyrwAbC
30p4cZ8fmsmM05pvV2Jc4jf+zV8VeE94XImTPdL1q40qaf5didXDbXrmDKtE
Z8LnSvSOLNv6YWQlzccrYXIowEhhUYl1hNeVkKj1hf+YebTm55XY+Wn9hl9u
lYgm/K7EmAgPs/M7K2m+XokHARHma05WogPheRVibnUfH+JfSfP3KlxYUTm9
8TIzD8LzKkwJ2ZR/IqeS5vNVmPfpSqZBcSVeE55X4bVGf/Q+RSXN76uwIvLj
1NmaSrR9peuwCjsT23qXfauk+X4VksRP7gT3rsJKwvMqiP9L7FhtUkXz/yq8
zIqINGbGfUl4XoXvfs0jLP6rovVAFeY+9En1sanCH8Jz5tXlQWzg0ipaHzD9
G9hmO5+uwjLC8yrkGEf+CmfarfVCFfaP3/Zk8OUqhBGeVyPD/86JBVeraP1Q
Dc1SzxlmYVX4QXhejTBr1qW1qVW0nqhGz4MBvfXNq7GI8LwaR5TP+g60rqb1
RTVujngy661DNR4TnlejYGjvCc+3VdN6oxolr7LmDXtajWbC82rIOp7p7/is
mtYf1XB5NbDd44RqLCA8r0Z9u6RXn6qqaT1SDbcv0tKPfTkIITyvhu27xjmZ
0zi0PmH+3rLrqM9iDhoJz6vx2zCxYM8yDq1XqpHSv3TsSHcO5hCecxDjVt8w
fh+H1i8cjKvKfFXhyUEw4TkHQeotWQt9OLSe4cD7v3d/VjBtNeE5B1f9SnxP
X+XQ+oYDv/NBY6/d52Am4TkHptNbpKnhHFrvcPC7a/29M685uEV4zvQ3+L59
3w8cWv9wMPlKR+4rDgdywnMO+u6oWeml4NB6iIOni+5WL9dyMJ3wnIOkx0H9
f3/h0PqIef948xcDv3FwnfCcA5Mfx9vbM+3WeqkGXtI//M9rayAmPK9Bjn+6
9fzNNbR+qsHJRd2XZvnXYCrheQ0+nPi8+c79GlpP1SApelThxDc1uEp4XgMP
r4DJmUy7tb6qgWn2bMt1n2rAJzyvwcg9szx7ZNTQeqsGKr3qusC8GkwiPK/B
gIf3rHYU1dD6qwYXy9aWKEXMK+F5Dea/+/Il6XcNrcdqEFo1eP7KLrWoI+Gq
Btt8/LLdDWtpfVaDboNXjL88vBaWhOc1uP5+Tku3EbW0XqtFt8UGt6NH1sKf
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
7RXrZ1WKMZ/wXIxXZc5rOnLEVC8V48HCP5FPa8T4QnguRsj0503hTLtVPxVD
oMd5ea6ReR/huRhxi48/t/ompnoqsw8mW32+/BZjLuG5GDfrbhyR/BNTfVUM
IT8pPLKTBA2E58z61p7fPK6LhOqtYnBnWv+z7S3BPcJzMfjz9eymDpJQ/VWC
r4dfV81h2rMJzyUQqH96S0ZIqB4rQadZSdOGjJZAQ3guwaSJH70fzZFQfVaC
xPlPLN8tleAu4bkEx9ipbuY7JFSvlSBIPXu29y4JZhGeS/A+6dTOtvskVL+V
oO3VkLpD/hKoCM8l2PokSjHghoTquRK4+88Y+SdYgtuE5xL4s4oveN2TUH2X
GffInTu9oiWYQXguQQfFuhFfYiVU75XgglXK6WVpEigIzyWwnyseGJ4hofqv
BPq/5zqdy2fmSXguwfOcqM37iiRUD5Zg7pGW9e/KJPT7qMw4nNMa61oJ1Ycl
WHqyv9XReglkhOcSXPNRTxoglFC9WILxtk45a8QS3CA8l2BiF35lrUJC9WNm
X0yK1/5ukMCO8FyCI+ofX/80SqieLEGBZyeu63cJJITnEozxa7/5xU8J1Zcl
qPYy7lrOtAMJzyV4k353M7u7lOrNzHPTNzTSM5TClvBcio5p7O2VQ6RUf5bC
afZYB80oKUSE51J0eRbKPTtGSvVoKU4oBwUEmUpxjfBciqpzR042mUmpPi1F
YOrt7J8WUkwhPJei4HvIjKHjpFSvlqKi0wqTvxOkEBCeSyF2HrKn5yQp1a+l
CE0N+D2IaV8hPJdCu/NwfL6LlOrZUlwYddBh9zopJhOeSzFU1HLo1BYp1bel
ODIzztTwkBQ8wnMp0mfMFdkxr616txSS7/ILa7ykuER4LoX73hGzfnhLqf4t
hWdcrPNh5vfWhOdShJxz6rz4gpTq4VLUqmPOzL8opd8/lmLF4cbdR5l2qz4u
RcnF5W/cXjHzJDyXorqo9sCFSCnVy6UYV+4y/PNbKSYSnjOfnzJHYxIrpfq5
FDO39t5omMyMQ3guhX1Q7ean6VKqp0vh0t++q0OxFOfIcqVoaIH1iXIp1del
mO46Q3adaU8gPJeiLuMUP5wjpXq7DKNjey0cViMFh/BchufnExaHMf226u8y
bBw/UtFVIcVZwnMZ3AXF5hv+SKkeLwMnZttkV6afcYTnMsS+CjKbx/y+VZ+X
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
wTfmORKea+Fx7oqD9V8t9c8b8D8ic7u8
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
            ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"30", ",", "10"}], "}"}]}], ",", 
            RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
  CellChangeTimes->{3.720853209195964*^9, 3.720853852059656*^9, 
   3.7208539691508675`*^9, 3.7208689447422533`*^9, 3.720869478710094*^9, 
   3.720869603053443*^9, 3.7208696622235813`*^9, 3.7208700063863115`*^9, 
   3.720871879235106*^9, 3.720875448994742*^9, 3.7208762832230735`*^9, 
   3.7208963489625864`*^9, 3.720897080789695*^9},ExpressionUUID->
  "13482006-e598-48d8-8132-a2d095563b76"],
 "\nEndast normalf\[ODoubleDot]rdelningen passade in f\[ODoubleDot]r den fj\
\[ADoubleDot]rde f\[ODoubleDot]rdelningen.\n\n\n",
 Cell[BoxData[
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQzX+0bHOLUY39n5UfL/kmBdgf+bGzeXHGBPtdnjxM
2u1t9qeN1z27nrfQvifn+e+VHxfZi932vrLjwwb77D0lkyVYttnPK55deFR/
n/2dn3VZe0oO21c3FR8S2nPCfmNRxsS3Neft50n83bBw6yX72P5DXzVirtsv
LD9zQMrhlv3mue+XH/O+b7/gwdRYT92H9g1ZIAOf2J/ffdl2ocxTqHnP7SOv
zJ50ZsILe5v7/r3T817Zx73f2arj99o+nE9309z3r+1TuJmeM7i+tZfRv6vC
1vjWPvbe3sNnut7ZpwhEWG458c5+z+5HzZM939tvAdv33v4Ys2Zv57r39rfP
fQ9+vPS9/Ye59sKX7723v7m4wJbr+nv7DZHJpps+v7dvnurcnfP8vb15pG76
zd/v7XXbxW6e+w5UV9prs+vfe3tGBhD4YA8ABVqsnA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvePTepG8A8ftf9Vl7SmZnGE/q2CX186vF+x3efIw
abe32Wd8X7ncs+eqfbXIOveHVUvsTz04fddzw0374oyJb2vst9rLCEbXP8u5
a98hdvPc9+DD9hwSr3ul0h7YR1puOVG277x9ME/s7uWvH9rzAk0Tu3nN/suS
GG4z78f27I1Tnbtz7ttfWX3bvKrjif2dnyAHPLbPsFxTeGbZU/sux4SnF5Se
2zdc5E83XPnMXhxk/OOX9ltsXmYkTXpuv+KYt3mn4xt765CeI1dSXkDl39o7
SDGlHVB6ab/9898rFS/f2bOorriieu6l/T0VNqCN7+01E4JnXc54Zd/2OnCH
XOt7+5S9XcrZX17Ztxw4tdB123v7rFgmtdSi1/bhfLqb5r5/b38z6ZH3eq83
9gxg8MEeAJxjnCc=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7bM6bcUSiWP2f1Z+vOSbFGDPk9rdVL/6PJRfYJ/R
pf0n1eCK/a+6rD0lkzvspz2cudZD7YZ9hOWWE2X75ttP2hm6t/nAbXuX7pzn
v1dutP9R1eyawH7fPqB3ep5Q8wH7WT39F4wZH9pXvlQz5Fhzxp5h0Y4Eq5hH
UP4V+/Sr+j8fTn9sf9k3SSDC8o79gdtvZzBsf2KfCzTt46WH9hXft87V2vPU
/vBXjZj+Q0/t36e+2LRj5TP70skSLGF8L+3nnGA3P9v43H5DUcbEtzWv7Yv+
RalEur2wP+5t3umY8NZ+/5Kv7Qo/X9jv9uRh0m5/Zx9lkDNx3+yX9tzXFxfY
cr23j37R5bJS/5X9eveHVSLr3tsfut931WTbK/sbIOnr7+0NsmZvn2bw2l6n
Xezmue/v7Usc7z7WZH1jzwAGH+wB5z6leA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/XDVfrZV4i72f1Z+vOSblGAf/jZf6IVXtn21yDr3
h1Ul9le3F37S+9Zhb3Pfv3d63iT7NslXwnJBC6HyS+yd5mbLtNVutle+/bMu
a88W+7JVh3zfTzhk/yZwh1zr64P2C5STHf4+PGdfaMt1fXHBWfvfPS+fyn6/
Zr9/vpT+XZVr9lnnWdY+UrpvDzJNZN19e0PZvhUb+h/bbyjKmPi25rH9iv+9
Nxhkntu3i9089z34ub16/R/ey/9f2tubxu3y5Hllr+O6NoZP5429FljBa3vN
/G8Lkja8tZdgCePT3fTWXmFj5srste/sHy+dfURhwzt758SPIf/c39tzrJGJ
SrF+b88Uvl757oL3UPvf299Q+nRZ7iJQXBtk4Hv7yarelz++fG/fONW5O+f5
e3sLYetm4W/v7cHS39/bs1z79WfH7/f2DGDwwR4AmEyrsg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.6, 0.4, 0.2], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.6, 0.4, 0.2]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPXUmzwz/YjX7X3VZe0omV9irqRhMFZycar9TrvV1
4I4+e8YFSlzFnn32t3+CFCy231B4wT13/gr7y75JAhGWW+xZ98xzP1q3x97m
vn/v9LxD9jlJ8cFtFqfsc5//Xvnx0ll7zTPz3n9qumIft8uTh0n7uv1Hn/9z
sxvu2O8Am3/PPvxpi3mz4iN7tsapzt05j+0/fYp5fXL6U3ug4naxm8/sJS5u
lK6tfGEPlASa+NK+e9nu5I97Xtk3gJQ/f20vOTvolk/eG/vZRxQ2FGW8tRf4
MzGUaymQBjruRNk7e5uA/zIPqt/Z31UB2fDePqza8PEe7vf2LGF8upvmvrc/
VSN2ITXzvf31xQW2XNff26/6/G3G3SXv7UG2n/v+3n7qn0kNJ0++t2cAgw/2
AOBQmWs=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                   False], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
  CellChangeTimes->{
   3.7208532127174406`*^9, 3.720853856413746*^9, {3.72085396302355*^9, 
    3.7208539828698273`*^9}, 3.720868944804757*^9, 3.7208694787961674`*^9, 
    3.7208696031535263`*^9, 3.720869662370699*^9, 3.720870006510399*^9, 
    3.720871879323168*^9, 3.7208754491648574`*^9, 3.7208762833812127`*^9, 
    3.7208971181528254`*^9, 3.7208971527532835`*^9},ExpressionUUID->
  "8da5f112-af8b-4d8c-aa25-e0b05bee1ed7"],
 "\nDen sj\[ADoubleDot]tte f\[ODoubleDot]rdelningen passade b\[ADoubleDot]st \
in med possion f\[ODoubleDot]rdelningen."
}], "Text",
 CellChangeTimes->{{3.720905412892824*^9, 3.720905484205235*^9}, {
  3.720905518754611*^9, 3.7209056145323005`*^9}, {3.7209056503716364`*^9, 
  3.72090580143106*^9}, {3.720905842182873*^9, 3.720906003836114*^9}, {
  3.720906044509029*^9, 3.720906200582616*^9}, {3.7209062419577208`*^9, 
  3.720906856774411*^9}, {3.720906998059033*^9, 3.720907249712514*^9}, {
  3.7209072809667263`*^9, 3.7209074097151546`*^9}, {3.72091009937499*^9, 
  3.720910137925254*^9}, {3.7474663986746225`*^9, 3.7474664034139276`*^9}, {
  3.747468522178686*^9, 
  3.7474687892877383`*^9}},ExpressionUUID->"b4b90f77-da26-4c45-b2de-\
70de2113dc54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ber\[ADoubleDot]kna konfidensintervaller", "Subsubsection",
 CellChangeTimes->{
  3.719669934260833*^9, {3.7208605552877355`*^9, 3.7208605645850863`*^9}, 
   3.7208671831055613`*^9, {3.7208980187571993`*^9, 3.72089806229564*^9}, {
   3.7209074555315366`*^9, 
   3.7209074684486775`*^9}},ExpressionUUID->"f3db26c3-6e18-48ca-9b2e-\
15cdd9e227a5"],

Cell[TextData[{
 "F\[ODoubleDot]r att r\[ADoubleDot]kna ut konfidensintervaller \
f\[ODoubleDot]r f\[ODoubleDot]rdelningarna anv\[ADoubleDot]ndes metoder tagna \
fr\[ARing]n  ",
 Cell[BoxData[
  ButtonBox[Cell[
   "Hypothesis Testing Package",ExpressionUUID->
    "6f00d9a3-02c0-4193-948f-580898739791"],
   BaseStyle->Dynamic[
     If[
      CurrentValue["MouseOver"], {
      "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {"Link"}]],
   ButtonData->"paclet:HypothesisTesting/tutorial/HypothesisTesting"]],
  ExpressionUUID->"1c2de071-24e2-4a57-8724-27ddfd5a543a"],
 ".\[LineSeparator]\nVi skapade tv\[ARing] metoder, en som f\[ARing]r ut tv\
\[ARing] parameter och en som bara f\[ARing]r ut en parameter. Metoderna anv\
\[ADoubleDot]nde ",
 Cell[BoxData[
  ButtonBox[Cell[
   "EstimatedDistribution",ExpressionUUID->
    "93b0e465-40ab-48eb-a4e3-fe2abbc1bca9"],
   BaseStyle->Dynamic[
     If[
      CurrentValue["MouseOver"], {
      "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {"Link"}]],
   ButtonData->"paclet:ref/EstimatedDistribution"]],ExpressionUUID->
  "04105c44-2cb5-41ad-8f70-ec8381eb54e6"],
 " och  CLT (MeanCI metoden) f\[ODoubleDot]r att f\[ARing] ut intervaller f\
\[ODoubleDot]r deras parametrar.\[LineSeparator]Detta upprepas tills CLT ger \
oss intervaller som inte \[ADoubleDot]r l\[ADoubleDot]ngre \[ADoubleDot]n 10% \
av parametrarnas medelv\[ADoubleDot]rden.\[LineSeparator]"
}], "Text",
 CellChangeTimes->{{3.7209094608406286`*^9, 3.720909565789472*^9}, {
  3.7209096293684177`*^9, 3.720909629459487*^9}, {3.720909680961888*^9, 
  3.7209096871779623`*^9}, {3.72090972094584*^9, 3.720909972880707*^9}, {
  3.720910011110747*^9, 3.720910019139415*^9}, {3.720910055047655*^9, 
  3.7209100557591577`*^9}, {3.747468870485814*^9, 
  3.7474690862151194`*^9}},ExpressionUUID->"4ab286f7-ea36-4a1f-afd7-\
859117063b6e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kod", "Section",
 CellChangeTimes->{{3.7196830954970627`*^9, 
  3.7196830958568444`*^9}},ExpressionUUID->"59468890-170f-4afd-8c55-\
90fad536edec"],

Cell[CellGroupData[{

Cell["Uppgift 4", "Subsection",
 CellChangeTimes->{{3.7208626731460896`*^9, 3.7208626807246017`*^9}, {
  3.7208677844389896`*^9, 3.7208677853830123`*^9}, {3.720900336357646*^9, 
  3.720900337427393*^9}},ExpressionUUID->"e1b7dd9b-bb35-48d9-a96e-\
310371049f87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist1", "[", 
   RowBox[{
   "i_", ",", "n_", ",", " ", "a_", ",", " ", "plotName_", ",", " ", 
    "color_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[DoubleStruckX]", ",", " ", "\[ScriptCapitalN]", ",", " ", "plot", ",",
       " ", "\[Mu]", ",", " ", "\[Sigma]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[DoubleStruckX]", "=", 
      RowBox[{"randomNumber", "[", 
       RowBox[{"i", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalN]", "=", 
      RowBox[{"EstimatedDistribution", "[", 
       RowBox[{"\[DoubleStruckX]", ",", "a"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", " ", "=", 
      RowBox[{"ProbabilityPlot", "[", 
       RowBox[{"\[DoubleStruckX]", ",", "\[ScriptCapitalN]", ",", " ", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", "color", "}"}], ",", 
           RowBox[{"{", "plotName", "}"}]}], "]"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[DoubleStruckX]", ",", " ", "plot"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7208944432219677`*^9, 3.7208945196246185`*^9}, {
  3.7208945636669145`*^9, 3.7208945962130547`*^9}, {3.72089472408545*^9, 
  3.7208947313705835`*^9}, {3.7208980988364773`*^9, 
  3.7208981031835413`*^9}},ExpressionUUID->"ee231c1d-f37d-4ce0-8785-\
4679383a33f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.720870780416697*^9, 
  3.7208707874516706`*^9}},ExpressionUUID->"c5ff8cdb-2bf7-46ab-8d34-\
253348f642d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"normalD", " ", "=", " ", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaD", " ", "=", " ", 
   RowBox[{"GammaDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expD", " ", "=", " ", 
   RowBox[{"ExponentialDistribution", "[", "a", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"weibullD", " ", "=", " ", 
    RowBox[{"WeibullDistribution", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"geoD", " ", "=", " ", 
   RowBox[{"GeometricDistribution", "[", "a", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"poissonD", " ", "=", " ", 
   RowBox[{"PoissonDistribution", "[", "a", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binD", " ", "=", " ", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208957579005013`*^9, 3.720895887099628*^9}, {
  3.7208959332212925`*^9, 3.72089595778904*^9}, {3.7208966459179015`*^9, 
  3.7208966692013717`*^9}},ExpressionUUID->"daef4b07-9c8d-4449-92da-\
cf77f547b445"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "1"}], "*)"}]], "Input",ExpressionUUID->\
"b0a601bc-ee6c-4c35-89be-be9d20688ff9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]11", ",", " ", "plot11"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]12", ",", " ", "plot12"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", " ", "gammaD", ",", " ", "\"\<GammaDistribution\>\"", 
     ",", " ", "Red"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]13", ",", " ", "plot13"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", " ", "expD", ",", "\"\<ExponentialDistribution\>\"", 
     ",", " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]14", ",", " ", "plot14"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "1", ",", "n", ",", " ", "weibullD", ",", "\"\<WeibullDistribution\>\"", 
     ",", " ", "Black"}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.720862843811097*^9, {3.7208696419699526`*^9, 3.720869644650848*^9}, {
   3.720869704795085*^9, 3.7208697488081856`*^9}, {3.720869788142991*^9, 
   3.720869822696417*^9}, {3.7208698560780153`*^9, 3.7208698984204483`*^9}, {
   3.720869983644527*^9, 3.72086998718001*^9}, {3.7208937900045705`*^9, 
   3.7208937902107162`*^9}, {3.720893833335558*^9, 3.720893844129161*^9}, {
   3.7208938900429153`*^9, 3.720893908987279*^9}, {3.720893947983096*^9, 
   3.7208941056870055`*^9}, {3.720894603105921*^9, 3.7208946829619207`*^9}, {
   3.720894746026846*^9, 3.720894866360613*^9}, {3.720894899435967*^9, 
   3.7208949167021923`*^9}, {3.7208949486111755`*^9, 3.720894966525855*^9}, 
   3.720895006179263*^9, {3.7208950536121306`*^9, 3.720895098261955*^9}, {
   3.720895136080016*^9, 3.720895159796387*^9}, {3.720895255092497*^9, 
   3.7208953205866475`*^9}, {3.7208954727828784`*^9, 3.720895478284767*^9}, {
   3.7208957258387527`*^9, 3.7208957527488484`*^9}, {3.7208958946599855`*^9, 
   3.720895916915766*^9}, {3.7208968601741886`*^9, 3.72089686517272*^9}, {
   3.720897335315279*^9, 3.7208973360207777`*^9}, {3.720898108258128*^9, 
   3.7208981182501917`*^9}},ExpressionUUID->"c05bd390-a88a-429a-81d3-\
0ee8380d5188"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7209038574175816`*^9, 
  3.720903857554673*^9}},ExpressionUUID->"97da71dd-d4c7-4e97-894a-\
f339edcf5b90"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]21", ",", " ", "plot21"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", " ", "normalD", ",", "\"\<NormalDistribution\>\"", 
     ",", " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]22", ",", " ", "plot22"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", " ", "poissonD", ",", " ", 
     "\"\<PoissonDistribution\>\"", ",", " ", "Red"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]23", ",", " ", "plot23"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", " ", "expD", ",", "\"\<ExponentialDistribution\>\"", 
     ",", " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]24", ",", " ", "plot24"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "2", ",", "n", ",", "geoD", ",", "\"\<GeometricDistribution\>\"", ",", 
     " ", "Black"}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208953289855943`*^9, 3.720895455595727*^9}, {
  3.7208956617244864`*^9, 3.7208956620396976`*^9}, {3.7208959224246583`*^9, 
  3.7208959279445653`*^9}, {3.7208959672487197`*^9, 3.7208959960224104`*^9}, {
  3.7208968870782194`*^9, 3.7208968877957106`*^9}, {3.720898123191271*^9, 
  3.72089813381378*^9}},ExpressionUUID->"45b18a3a-0413-48fa-aaf4-\
103c4e63b0fb"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.720903864242408*^9, 3.7209038663809247`*^9}, {
  3.7474691560545254`*^9, 
  3.7474691562960334`*^9}},ExpressionUUID->"b4329fbe-0f08-40e1-b5e6-\
a1984dd99ddb"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "4"}], "*)"}]], "Input",
 CellChangeTimes->{{3.720903872652342*^9, 
  3.7209038728034725`*^9}},ExpressionUUID->"461730d3-5290-4cdc-92fc-\
6605d75fa449"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]41", ",", " ", "plot41"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "4", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7208962518851957`*^9, 3.7208963395189276`*^9}, {
   3.7208969118217125`*^9, 3.7208969126943235`*^9}, 3.7208981492096643`*^9, 
   3.7209038853052907`*^9},ExpressionUUID->"2ac470a8-0f43-4c48-96dd-\
7e29367bcaae"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7209038821980906`*^9, 3.7209038895462914`*^9}, 
   3.747469168940754*^9},ExpressionUUID->"914b5ceb-08cb-468e-a073-\
5fb488769d3e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "6"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7209038925373983`*^9, 
  3.720903892718526*^9}},ExpressionUUID->"9a44f295-5424-4abf-b1db-\
73aa8f86e811"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]61", ",", " ", "plot61"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "normalD", ",", "\"\<NormalDistribution\>\"", ",", 
     " ", "Blue"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]62", ",", " ", "plot62"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "expD", ",", "\"\<ExponentialDistribution\>\"", ",", 
     " ", "Red"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]63", ",", " ", "plot63"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "geoD", ",", "\"\<GeometricDistribution\>\"", ",", 
     " ", "Green"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]64", ",", " ", "plot64"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "poissonD", ",", "\"\<PoissonDistribution\>\"", ",", 
     " ", "Yellow"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]65", ",", " ", "plot65"}], "}"}], " ", "=", " ", 
   RowBox[{"dist1", "[", 
    RowBox[{
    "6", ",", "n", ",", "gammaD", ",", "\"\<GammaDistribution\>\"", ",", " ", 
     "Brown"}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7208969258281536`*^9, 3.7208970680366898`*^9}, {
  3.7208971290595503`*^9, 3.7208971353710136`*^9}, {3.7208981685813417`*^9, 
  3.720898181502513*^9}},ExpressionUUID->"6d2e5d97-0214-4d96-8a20-\
4ce68eeed802"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.720895566601267*^9, 3.720895595055592*^9}, {
  3.720895656206517*^9, 
  3.7208956599762363`*^9}},ExpressionUUID->"a27310a1-3d0e-493c-81dd-\
16a99b839094"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"GammaDistribution", " ", "for", " ", "Distribution", " ", "1"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.720897166878892*^9, 3.7208971964017825`*^9}, {
  3.7209039164282875`*^9, 
  3.7209039239896483`*^9}},ExpressionUUID->"2d80f39d-720f-481b-8778-\
11e9bd1ec7bd"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot11", ",", "plot12", ",", " ", "plot13", ",", " ", "plot14"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7208531914614253`*^9, 3.720853194505579*^9}, {
  3.72089397001221*^9, 3.720893973590746*^9}, {3.72089411129031*^9, 
  3.7208941171514745`*^9}, {3.7208942489502463`*^9, 3.7208943025631742`*^9}, {
  3.720894655140704*^9, 3.7208946619965515`*^9}, {3.720894871303091*^9, 
  3.7208948757522497`*^9}, {3.720894974216277*^9, 
  3.720894978437273*^9}},ExpressionUUID->"bd22e143-d602-494f-9c6c-\
6d29fefe45e4"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1: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
2L8swvbrLA6WSC0LnIZ2SVf6t1zFofqRhrtvT0TYbeTgS7jlAdMQYdyvu+HJ
oXqShi0pC65t38LBPcvTZadhw4WJh5KYcb2+pCHT/3uKtw8Hc5jNtcjqMxqq
nGpHneZQvfmMYbzvw6cFcqD/ZZnwZ8yVbQr+E8Sh+vMZO9OnX9UHc3D9MznA
8Mstt+Pd4FA9Yj5v2yCnKJGDqZbp8j7DeH7gy2/MuF6fPsM8aYnPEyEHcsvl
OqZjf1Uk+0chh+pVOpz9n7TcoOfgokWOnNKRvLjgTlgth+pXOmDXbXj+Vw7G
k/IhHXuPuzwZ9I1D9Swdd7SzG7ObZqHUIgeF6RiyzcFGOyyL6htzv8sxpy5P
yMIZy3Fm6hLp1h4z8mdkUb1joV+bY9LhC7NgazmOTN3gsGxNy/IVWVT/WPBs
xlnayi0LBaS8YDirUIk7e2RRPWTBcekNN2/fLByzHIdyhmNLBlX6Xc+i+shC
3vxvu9feyMIAy3ZmOPS7YYxmcUgW1csMDAuPXvbkbhZyLNvPPQMjDvT/duBp
FtXPDMx27DC+YXEW/rMs76MMJB/p2L9/ZRbVU4Yj3s3NK6VZ6GF5ffIMjPmR
d7BJbRbV10xEnfgv1s0qG+mWxxuYibI2a7NuMeN6vc2EVa/VUd2ss7Fzq+Un
E8G/0g/yemVT/c3E7nk/o/n9stGJKZ4YhcUv9n81ArtsqseZ8HW6VNV9ZjYS
v1g2dCb438f8yZyTTfWZOdeDl7cZMD8bngmWC7IxZvadtU4ns6leM+c0oMhX
cyobrU9ZBIoNFfdQzvKAbKrfbATfrBn4+kY24hZYDggbrxyDZgwIyaZ6zkZu
7MkR53Ozsc5S3ZnZCHwztFtiXTbVdw4GFLHHz22bg8Yi5riN5eDx1xNTm9vk
UL3n4MCRLQH+A3LwyrKdvTlY/XmyfcMROVT/OfC/imEXR+fAieCRA5tfpxaw
xuRQHnBw8Fnz31fH5eCXZTmYfZrUe8iTrfNyKB+yUDfHeoJpfg6eWKY7OQtJ
ryfPxcIcyossXL8TcOfU7hwssVzuSBZeLHfoG+STQ/mRBavNHxZxfHPwheAh
C3MmP23d9FIO5UkWVPtzShSXc3DPIu+/srC046p+TcJzKF+yES8vePvzXQ7m
WOR5ejYe+7iGzH2fQ3nD7IN+taqf6TnQW+TVLxu5bcusxPk5lD/ZUBwUT9pR
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
2FkOGA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1: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
Vc1c2+q3Jhxd+uiTxKgJ9YTnTYhpf6nL8UFNtJ5rgnU3vfYDjJswgfC8Cc0P
i0ceZNpt9V0Tut6dv66vRRP8CM+b0O7Mkahp1k203mvCizH5C8/Ob0IN4XkT
RlQGX2y3oInWf03QCZ53oZLpdwzhOfN+8oAruw820XqwCR4p+oLP3k04QXje
hKjg4bV7mPu01YdN4K5wW3H7WRMqCM+bMF31oXDCyyZaL7Kxddr4uZlvmjCK
8JyNnwZeZanJTbR+ZOPz6etDp7CacITwnA3j9d7ed+VNtJ5kIzlxyCmHdmyU
EJ6z8SXEn5M/kE3rSza+zrYN7z+FjeGE52y0xDwWmtiyab3JRsRHg46r5rPh
RXjOxtT0h14SOzatP9no5DNT828bGwWE52yEn7w6dD/Tb1s9ysalzCXTnt5i
YzDhORuPX+pJZ2SzaX3Kxq4uO79FFrGZddICmAN5Xv7Kl8zn2upVDlKe9ui9
TshGDuE5B1kRnL9jW9i0fuXgotk3g5X/cTCQ8JyDqdMOz+o3kkPrWQ48O1ms
KDXhYB/hOQdFXhbh7ydyaH3LfM+C+3jMUg4yCM85mJcctkm4n0PrXQ5GX2ro
cucAB/0Jzzlw2mXh8ewsh9a/HAjq6tzMHnOwm/Ccg6q6aS87h3JoPcxBwxtO
1focDlIJzzmo2bAh7Fgeh9bHHEiCq78NKuagD+F5M+S57AsNLA6tl5tRkXAj
8BPT3kl43gz3EVsK/ok5tH5uhsXzMdM8FRwkEZ43Y61axyDpB4fW0804nLap
5MVPDnoQnjfjuU207g7mvm31dTPSWowdb//mYCvheTOmjD2V171PM623m7Gv
4mVCYd9mJBCeN2N7ZEF2xbBmWn83o2noizEym2Z0JTxvRr8NymV/bZtpPd6M
r+vGuMXtasZGwvNmvEicl+lxspnW51y8McNzpW8z6sh556JzoeKc45NmWq9z
4enqP1L4ohmnyfnnghVrdrlXdDOt37mIWtzPqSG1GeNJPOCi3Um26cymZlrP
c5F+0xOcb82oJfGBizn8CdvOf2+m9T0X33rKnmz50QxfEi+4cDpwRyhgxtFW
73NRtCbtycjuXIwl8YOL9llPbZf24NL6n4usW8887Y24qCbxhAtRp9WiqCFc
qgdwkblj2vaD5lzqd3Oh3Mv2S2LG0aYPcMF97/li+BwuTEm84WLLOLubf+25
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
2e4T3y74qKH++Uf8D9V94AE=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1: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
bV2kpfl5M/4PG5KSyg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          PointBox[CompressedData["
1:eJwtm3dcjV8cx7M3ScjOzviZRYRPdnZWNhWSkCQrocyQUZKQZERWKiHtvcet
brt7u3uPrAbJ77nH6Z/7OvU85znnPOd839/v53Mbbn943d62enp6snZ6erpP
vcGbMh9MWYuWV19LVtlbw9O+R3R/D1fatoVeB8PPB8zc8OusU7zbHUd4zjvX
1LL8JP27C/TahTzgLTiN04bhS/nubvBcF+iScvM0vf4kPI+vOLDP8yJOycdM
7fzWA5bLLlz4w/Kh93tCr3Cy8ZUbNzGnbs2Ne87n4bk3PmlKwS14kP4uQk/m
YadwvI34Zd3bTrhyGbaTKk7uifdFC+nfG3qpOa7Xht7BnOjs44mPryHkyYjU
55384UGe5wNeuJtX9Tx/xA+9pFwbcxMhbW3S26/1Ryt5/m2ErGEXZtncRXC6
cYSroy/0xjp0np92F/PIePzgeSL6hLdBALjN5IHg9evH3YAAnCXj80fIWdd7
H23uYehkzqiOXneRHNDDKL1tIBLJeAMQ8ncRp/z9fezcY6HrEXpeKxTe7R6g
lXQXiJDUM7N3T3uA4PvkB7bjv7FylQ8wj8znASxfDH48uO9DcAsb1wtDH4IX
y069kPsQZ8n8ghAya3CeKechhra36flf1CMYD5h3T24fhEQy32AYe+cFlwx6
hJ2zSIewjLNYrDcyBH/J/EOQ3OpkF10bgjUzr863FYdAr9dEY23ZEzwm6/EE
yWaJyyc4PIV2bQzT4xPYmr15Enb8KUDW5ymmBMRMVT9+ilsHpb9ffX2K5OI+
7O0vn6KOrNczGP95lXus9ikmX+lXVdj4jOm/oLdA/hTnyPo9h6XZok/erU9R
9GTxp+9/nmPK5tlV782fYRhZz1BYXzZN6XzgGQ4zq2XU/gVYBbI/o44+QxJZ
3xfgbek8mvvoGXpVPHOZ2/Ul9JZMydkV/Ay7yHq/RP3Gc7IBE57jvW66+mHQ
P/1qqsgvFH/J+oeh/nPj3RGhoVij667fKyQvHG/jpgrFY/I6XsFyKi/wUYcX
0OqWe/BreG7tf7qq5QVAlpNpX76RP3PlS9xiVo814g30jY0il9S+RB15X2/g
aaE541ofhsnbb6X+NHkLTw+Lr7LGVzhH3t9bGLcu2tA74DWKmN4GTn4Ha59I
v52r3mAYeZ/vEOHR3t2z51sc9lV7wCwcyQ2hNl/7v0USeb/hqO8279Uyh3fo
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
jR3L0YPwtgIlWzrk5bmW0/y6AuHVZsvVTNuO8LcCTima9Odu5TTfrsCPhgPm
/t7l+Eh4XAHDl+PWHQ4pp/l3BZY3KI/MiyxHF8LnCgi6RJnrFZbTfLwCHXsO
eXCVmdcOwusKrHxrdeExM69/+XkFHK614Vg2liOS8LsC0WeKcp79Kqf5OjO+
Pa/1KlrL0YHwvBJ7AqweTx5cQfP3SqyzGHPoxvgKbCE8r4SJS5awyKyC5vOV
MF12TmFkXoF3hOeVeD36+xIN0/6X31ciQLCHY7qsAm1e6zqshFHBz20+Kyto
vl+Jp7F7xKM2VWAj4TnT/8pX7zvYVtD8vxLpyW/MbzpW4BXheSUK2wfnJzHt
f/VAJT4lz5pmy6zjH8LzSuj/J/U1PV1B64NKJNf1qB9yrQJrCc+Z8fapCuTd
qaD1QiUMlsl/zGXWNZTwvAoBxjdqRwZX0PqhCiaXr37f+7ICzYTnVbAOuyAz
SKmg9UQVwrse9H2QUYFVhOdVMFi4fMD+kgpaX1Rh3iuTpPUVFXhCeF4Fq1H3
z3WoqqD1RhXM7/mmlwgq8JPwvAolVoLYXY0VtP6ogn/FyNbXvSuxjPC8CrzY
CXmThlbSeqQKlweW+5ybVYlHhOdV8JvR4/2oeZW0PqnCtcj8O/MtK/GV8LwK
5z2+Dp13qJLWK1VoTSjr+c29EosJz6th7Mx/P9GzktYv1ei6eUrCT+Y93Cc8
r0b25A+Rd0MqaT1TjVavmyOsiyqhJjxnruec9PbQVNL6phoBF9oeeNZUifmE
59Uo/NtrVEqvKlrvVMOk2/vMfGad7xKeV2PR7vGbVgypovVPNURRH31Es6og
JzyvxiifaQuvrami9VA1MqcNt3dj1nku4Xk13FYOu/LFoYrWR9WIsH0zb5hT
FXwJz6vhaLecE+dVReulGsw7H2O/5H0VxITnNTgo8x505mMVrZ9q8K086JBv
QhVmEZ7XwPXLHPdGVRWtp2pgc2JwyeqvVbhBeF6DkOlmYZENVbS+qkG1o1be
bkA1+ITnNdiQ8GFI8qZqWm/VIKz4gHm33dUwIzyvwcBuq7zNmHX6V3/VQN+m
e9Njpn2V8LwGTY3/CT6crKb1WA0ctrQMKP5QDQ4JVzVw7LOh9dSXalqf1eDm
n2zBcmE1phKeM/MJNbE1F1XTeq0W3I7u6wd3rsElwvNaBE3u9p3du4bWb7Uw
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
6/E/Vrzdjg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"WeibullDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7474692017711177`*^9, 
  3.7474692018023605`*^9}},ExpressionUUID->"026c4c54-04ed-41c1-8d7d-\
f496d9ea7c83"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "GeometricDistribution", " ", "for", " ", "Distribution", " ", "2"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.720897207644708*^9, 3.720897225773522*^9}, {
  3.720903930329114*^9, 
  3.7209039319302444`*^9}},ExpressionUUID->"16e80010-9dd8-4086-9797-\
6423f8ba9f3c"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot21", ",", "plot22", ",", " ", "plot23", ",", " ", "plot24"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7208531976828256`*^9, 3.72085319831326*^9}, {
  3.7208954664574223`*^9, 3.7208954674591208`*^9}, {3.72089550383885*^9, 
  3.72089551257502*^9}, {3.7208956012249784`*^9, 
  3.7208956034825754`*^9}},ExpressionUUID->"363439bd-2c0a-43ed-808f-\
193564bd6364"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1:eJwtVAtQlFUYXR3AxWyhrXwQOiHkI0dQEwWRzjC4qJAaqAsaUiKg8SphB63I
WgUFdEFSoEzaUUGT8cFD0UGi3FFDUVRaXHkJ7LLv3f9CSibP7v2nb+bOnTNz
/3u+75xzf4/YLyLiJwoEgnV0sb25x/mFnNzBB3zVwLtEIlKK7iLK/0pjRsPv
WLdLr30/rAlj6r3mOYsbobzhdlRW9gDRBarBedEPob787Y+3pjxC4GTNmS8D
W+AQFHvzp02PkdGgdPPpUuOXt78JGfu1BRdX93791iUNTq8MqJjqrIYtE74x
dW1Y0j252ZTeirn8hZ1Im7dZs830BHEJrJ7h+OPo46vin4KnF/ZA61kXtcnc
Btmx6Q5SUS/u7U4NWZTegaDP9I9md/Tixd4bg4kTusDYVvdqocr5Linvh2eo
GGhZF+vah3dExvcOinuwPtaVjtiHa8Uyt6sdPeg/dydsea4e0uuaqS5lvfi8
0E47NMBZKMz9K1ELv1zGYMA/f7vKQnx0cJSKFlaXGsGJFFnV/Tps1pX/fOtd
ExxKgx2TLvVheF9iveyYCSlPScWDnXooCSMww7pkjc8qdwMGeD4zQopOXJE0
GRBE1Vg7xYJD567ZImVGgNfTgoashHGXaSaIeUMs0A7M9X6zxoTl7PhEK+6+
UC6dtsYMobwo+HCyFVsK9idoW81Y3OXlJC+y4vCH4YqwaAvkrJ3pNjidysn1
77BA0MoEteGCalL96Qgr5i8WXnDfasNW94zAIyorIhQlqeIDNujjfS3CBTaU
SWqfj6ptUPWOrvU7YoNnZdquQrsNFlXpVonBBo9sa/j1WXY0F+yRxPvbkc4H
wo7TOaGTnmTbMdOHNWRHbUDBG11NduwWH/jj3ik7xGMhttuvcZjR1vxyo84O
zSbFsx4JhxTWrgOHssD6RWPnOdxkcfLiUFm5o/CimkMxs38hB7Oyrt0wxMEy
fJ46zEE60LdCMJPgOLMvhkNVebLX+gACE03Hq30cBmcNF8+WEuwM6N6gKOHg
2B2XfT+FIJ7FoZGDInRPVMl+gj4+Pxwe/pmYer6MID/ZSBk4vJ7pp0urJtjB
4vaKg+TYncjtDQTaDUwwgjUXpbUVjQRH+EASDNecTfv+McEy/n0RTF929oxL
G0EPsyeY4EzOivnyboKrpSwgBCdiTqpOmAnypjJBCPQS93C5nWApsyeOwClx
Y1PWcwJn3m8CT2SN3B8kqGF2ZBIEhRbPUQwR5DA7sgmqPo30PTlMsC2ODUxQ
/+C35q9GCJbw+SD4aHXsWu9Rgkl8ngk8tK+2F48RdDI7yuk549WjH4/Te/j3
SxDz/EppEcUHqXuSWoIb+WF57RR/wv8vCM61pu/UUbyomg1EdU6ww0Kx44JD
dCIC39uBWYTidpruyRqCypXjQ/9SfJlOF0B1iKzymzFCcRYbz0i/13CdoxRv
4dsjSKoT549T7M2ue0kg4KsfE/7f/wNchoJr
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxF03lQjGEcB/CV3RVDKOQem5ihEIZc9XV0qGblXIuJnDlyG+No0EHYMq6i
SYp0OVI5IhRmpSlTyRGtUGvb+32xJUe13uepmfeZeeedzx/v8/5+39/zSNZs
X7jeRiAQ+HAPebsYREEV5+M8vRSh2n9ZufDIYyIVke88V2sqnVR/CnFxVV9/
Q7QI2+0jn5ZeeQGNxD5hisoVn53F4XFzypB0MF6bM0KKazs8ulWnViKgSaCM
yQ7BUeOCB0OPvsGNiad7DnA6gm30+3fw+tkUaPx9FovUaYnKYR/wa2OycMit
VHyi+6mwQBXv5SbNQ1HpFe/7llp0HulwWdpYiEObH+851/8rYhLSfvs4lKBk
b2HywHF1+OgWmPFs3Wv0yfatO9CnHmyqc9HJ2Gq4n5gVrKmsxys/mWqh5DPI
373vq5HzUNu7aGk95sde4Er6hihJkKMyRIOdpPwdGuRLvJs9BugwO5gEoEGr
7kyDeokBIRvIakCFb7fF+/ubkG9pfbtP3wC5LELst8mMmvJmriUtfPTCfr2W
McgqDuBK0EHmsvu6oIVBGs1HB//3BdX69SxKaf16XJt8w1GdwSIxgSw9Ommc
amUVLIwjx9veHGzAbP2B6eIGFvbyqXdL9howWuxeFveTRSwZ1w8D5pZH3/T/
w0JB2nUyIuWR/FlRCwtbLk1FqBGi/KFV+9pYCF2i+30sN0Lh6h4ttbIIp3ma
kL5BpM3hfBiTVhb4mSAYJjbVcs7kppOzy4Qnt67m/+CcTus3oeT5NNe/nP/S
AZqwdtTw262c59HATXD0lA+0ci6j/Zlh1zQji7ixSrqml9yMY6c7fyW+RPs1
42JkWCPxIKHMbkyeGT0Uln/EW0l5QgaBLxPbiB3pfBls8T1uJZ5JxuXBIPPq
B+rz5jCuAwZ1iy3UDjQvBgKbFmodOc6HGEQo26h7j8lLYjMYnEqxUk+j54VB
rrrdPW1IYAyUze1eS+8Dg/TWdtcHkgPEQm5t9+oCv+42LiyqOnyP2704gIWl
w13pPFgI6PqOO7s2njGH8T5O7wvvCbXkQvDuQuJJ4v2JnjfeuSSebN4rSPuF
vN1Iu8W8RfQ88K5JJQPmfXvw8nXTv/COIuVreS+j5fAeS7Zr5t2p4/0fel83
9w==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1:eJw1lAtQVFUYxwk2BIYYNIwExwS3UkiMmVYihX/ESyEK0hCQCVywEBkeO8gg
ZUqCKyICAYPS4IIYShGuuEAiMkhI0AMWlIfR4q77YF/3HgQcJnlM996mO3Pn
zNx7zzn/8/t+33UTZnxy2NLCwiKMudnx/2u56elohFAKuXut+x+eN7Gw8jDX
8MY9FJwUjCVc7EHNJfYaBN9Q3Ra5dgCr7GtvOXaf2hU1ZzsMwWede+0tH0Bk
0UQy7o/CqSVUlec0jvcVt79wHBrD4j7199/1TWL6QmXspSuT4Kbb/I1Iqzr/
opApdGVXvMqLnsZos2e5+10F9rOfb1biljLK0MFTIqR9nkmkwoLy08Ytziro
l9jAT8DXK/e86fwEbQM53RIXNWLV08rVF9X4aWNc8q7HakwluoSPaNTgT/3z
dWqXBj8Ef1B7U6bBxh0KvnW+Frf/Kjhel6NFj8SFeaJDanZSeImnDsmOMb6y
AR36JoIzDjzUQcFOz56BKOi9kOGsGZyuCixOm5nBStlOnw6eHg/c2Q30cHjq
LOkr0aMx089uokEPgbRIWveSAWEMjZZQA+bCZ4IMBQa48qIdtrcacPZPV4n3
ggHOHC8jtIvpblbxRhi58xnx8p3Ni4ouI77tfbY1vtSIK5FXW32dTUjSypkd
jVgf668qPGqCbT4byASXd7sqPTpNOMikz+k2YfUWrT5rZYaX+JVHQ4sm5B87
I1wKNeObVJa4GZWHdGXjYjOaGNpSkRk1j44FHfnFjCghC8CMo83zNivPzfjY
pyggUWvG4HTAl+NeFBpYXNYUVEKXy4IECvXkWn+4D4W7Ueu3RZ+n8IyxyTGG
wohAOJrRTmETx5tCc2ppRbuCgmjd6Z7f6iks5ckMcZY0+tnj9VLgyT5ae45P
I5ATikbp2Ab/9CAavVx9aGyXbxv2EtJIK6e+goCGrabw5OwJGgEM7Uw/GnK3
/Iqxahomjh8Nu702Vqs3aDix5cyhofHbUC/up9HN2OoppnHCsagm9wUCPxaX
hEZW5PMtxesIujYVmqJ+pnFdWXYm152gvDqdSUyDX2aTtt+b4HPODxrSgry3
vEHQyeppoPHj75ba1z4k8OX6geCgver82zEEJQw9ObPOmiwvW1ESgX0zKyjB
8Zg1Y6pTBCqGTlUgwdWIyKqUIoJitlz7CIxVh6n4coLEUlYAgrDH/jcGLhII
bNgFCBbC3+G1SQjsuPoTTKgjcj0aCWSiFIYQwes7e647dBDYsLrVElzeA4/5
OwSKIbYjCcadtv56v4+gldWvhcA1Yba/e4BAzFQnuJ3gnlgj0w8TxHM+Ecxk
JlfOTxJYe7JCEUztlh4K0DFjAys8wbWl5SNDFIGU6z+C7rjBEWtCUMj1C0HC
BYz7zBHEcXEIDlRJdfbLBDs4PwnmGr1TBlcJ/vs3zeJfKjpm0Q==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          PointBox[CompressedData["
1:eJwtlAtQVFUcxoFqIyhKIizHYHkIAgWCIgLSN0VGwiDxCoYByg0KGx4+kIQh
y5bnEhEVoBJjCA6mgsQ7xRWEQaZaQCIWxF3ksQ92997DI0aQtO650525c+fM
Pef//77f+c6xE2VEJJsYGRmFci/9LrpEla+priJq7kJ1v7AZg37KxNMa6f/j
HoytV10ezxrA47ETC06eg1jbW9FrbiZDqmbj56VRGY4aXL72PHsHMzlWTUEz
o8hs+KLa6+QYpOe2eCgcx5E+cHnPK7vkCPEpfvND1QSC+2Qt/dJJFHGjEfsp
ZN7JLFYL72FrXJL/dJgCLY1vBz2VoAT/d12JtfOSqpt+9xHRZZOvD7+PyhrP
D97ZPYNjKeVMLmZgY6IQ29nPQkvlhM4i/OnfV4L/nYWX6RWu5BwyrpmZNw7N
YZzKN51HZchYiUP5PNYjqcF5iI6nFOYGqbAyGip6IVaFyf60PdnLKqTz/lTo
cGodHvpODf+2wSzpOTV623bscnbRQMTrU8PG17LTrkOD5iBKQIOKHZLuSD8t
3OLLbq1u10LhKYzb36HFQ76fFm059vp81wX8RBoGQnwWYLMor86rWsBtYfPR
lPIF2FoKDF2PFvCWd+K1/c/qsOEV7VKWoMMb02GlVek6jNdZzaZ26uBHcY7o
4J458d4v5no8J687HGCmx7JM1Nsep4dy/eSn3Zl6OCgCiaxej4Ke32r3dejx
ZdEPie/q9GhcooYNSDJ2vZruZkA0z9eAvOizuvwUAyK5bpZiA1RNSbKhWgMa
uOryOgOWb0vMC+QGOE3RBga8um/+2/lnGOTwG26Amc3hG7a+DB48ooFh4GE8
X3MomUEIHxAGEbXtwqVvGAzyfhmkC8eDZtsZDKxu54gxcA2Jivn4LgMSTgUx
yH5+s3H9Pwz6qfwVrm6esvTmVhaBPB8W8Q87npjyY2EtpgZZFAwIgq1jWFRw
6fBOZNGwKSGk7AgLq1hfbgdZKA9te0kkYfH9LdqQhe31g6sXa1lYvt5SQxpY
ZLlKKnM7WWj448DintrYY9s0i3KKo4dF542+1xyXWPjz/FkE+U07PmlCoOLz
z0J4YPP6+CaCMv6AcLqOb6Q1Cgl8qVxu3t3UK3ur3Aks+P0iiC3Kd6jzJ+ii
8dpCENMtuBQTSeCzkz4EbGZfpUcKwYyj4FRFIMHB66Wq+iMEJdaTQw+4eRfF
4jhxDoE3n3eCE8Pd7YvlBGbc7JJUgrgAY8s/ThO0Udq5BNlnFMPaSwTFegqY
IOPlLOLdTJBIj18pwecJL37l3k6wU0EbErT8lSzdLSUwfd+CEsKva3K58wCB
gus+d4HAtlFwykFGUMjniyBLJmg9MEIQT3Fz6yz+bj7WOEHgSfFy6xbrWn4U
ThEI3Ao5B5yOFEFrqoJgiuKQE4R9JAk4M0PQzF8IBM5pTUKiJsindjQElZ8s
f/bnMueLl0Og8TofM/WYgN5l3G2G/wANyIlz
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7474692036361113`*^9, 
  3.7474692036516867`*^9}},ExpressionUUID->"7334ae3c-bba2-411a-8272-\
e24bbfc69397"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"NormalDistribution", " ", "for", " ", "Distribution", " ", "4"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7208972653471794`*^9, 3.7208972686294875`*^9}, {
  3.720903938777086*^9, 
  3.7209039403441925`*^9}},ExpressionUUID->"5ed6052c-ddef-4c71-a970-\
7cea4ee6cad5"],

Cell[BoxData["plot41"], "Input",
 CellChangeTimes->{{3.7208532072666006`*^9, 3.720853208570527*^9}, {
   3.7208539507909007`*^9, 3.720853950926984*^9}, 
   3.720896348002924*^9},ExpressionUUID->"e333d402-1453-48a9-9030-\
1fdc78011c45"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1: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
4I4avGZpQgXNpyuxtmxM4sOkCnQnvK3E8GKTnv/VVtD8uhIrbBp2BXyrwAbC
30p4cZ8fmsmM05pvV2Jc4jf+zV8VeE94XImTPdL1q40qaf5didXDbXrmDKtE
Z8LnSvSOLNv6YWQlzccrYXIowEhhUYl1hNeVkKj1hf+YebTm55XY+Wn9hl9u
lYgm/K7EmAgPs/M7K2m+XokHARHma05WogPheRVibnUfH+JfSfP3KlxYUTm9
8TIzD8LzKkwJ2ZR/IqeS5vNVmPfpSqZBcSVeE55X4bVGf/Q+RSXN76uwIvLj
1NmaSrR9peuwCjsT23qXfauk+X4VksRP7gT3rsJKwvMqiP9L7FhtUkXz/yq8
zIqINGbGfUl4XoXvfs0jLP6rovVAFeY+9En1sanCH8Jz5tXlQWzg0ipaHzD9
G9hmO5+uwjLC8yrkGEf+CmfarfVCFfaP3/Zk8OUqhBGeVyPD/86JBVeraP1Q
Dc1SzxlmYVX4QXhejTBr1qW1qVW0nqhGz4MBvfXNq7GI8LwaR5TP+g60rqb1
RTVujngy661DNR4TnlejYGjvCc+3VdN6oxolr7LmDXtajWbC82rIOp7p7/is
mtYf1XB5NbDd44RqLCA8r0Z9u6RXn6qqaT1SDbcv0tKPfTkIITyvhu27xjmZ
0zi0PmH+3rLrqM9iDhoJz6vx2zCxYM8yDq1XqpHSv3TsSHcO5hCecxDjVt8w
fh+H1i8cjKvKfFXhyUEw4TkHQeotWQt9OLSe4cD7v3d/VjBtNeE5B1f9SnxP
X+XQ+oYDv/NBY6/d52Am4TkHptNbpKnhHFrvcPC7a/29M685uEV4zvQ3+L59
3w8cWv9wMPlKR+4rDgdywnMO+u6oWeml4NB6iIOni+5WL9dyMJ3wnIOkx0H9
f3/h0PqIef948xcDv3FwnfCcA5Mfx9vbM+3WeqkGXtI//M9rayAmPK9Bjn+6
9fzNNbR+qsHJRd2XZvnXYCrheQ0+nPi8+c79GlpP1SApelThxDc1uEp4XgMP
r4DJmUy7tb6qgWn2bMt1n2rAJzyvwcg9szx7ZNTQeqsGKr3qusC8GkwiPK/B
gIf3rHYU1dD6qwYXy9aWKEXMK+F5Dea/+/Il6XcNrcdqEFo1eP7KLrWoI+Gq
Btt8/LLdDWtpfVaDboNXjL88vBaWhOc1uP5+Tku3EbW0XqtFt8UGt6NH1sKf
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
7RXrZ1WKMZ/wXIxXZc5rOnLEVC8V48HCP5FPa8T4QnguRsj0503hTLtVPxVD
oMd5ea6ReR/huRhxi48/t/ompnoqsw8mW32+/BZjLuG5GDfrbhyR/BNTfVUM
IT8pPLKTBA2E58z61p7fPK6LhOqtYnBnWv+z7S3BPcJzMfjz9eymDpJQ/VWC
r4dfV81h2rMJzyUQqH96S0ZIqB4rQadZSdOGjJZAQ3guwaSJH70fzZFQfVaC
xPlPLN8tleAu4bkEx9ipbuY7JFSvlSBIPXu29y4JZhGeS/A+6dTOtvskVL+V
oO3VkLpD/hKoCM8l2PokSjHghoTquRK4+88Y+SdYgtuE5xL4s4oveN2TUH2X
GffInTu9oiWYQXguQQfFuhFfYiVU75XgglXK6WVpEigIzyWwnyseGJ4hofqv
BPq/5zqdy2fmSXguwfOcqM37iiRUD5Zg7pGW9e/KJPT7qMw4nNMa61oJ1Ycl
WHqyv9XReglkhOcSXPNRTxoglFC9WILxtk45a8QS3CA8l2BiF35lrUJC9WNm
X0yK1/5ukMCO8FyCI+ofX/80SqieLEGBZyeu63cJJITnEozxa7/5xU8J1Zcl
qPYy7lrOtAMJzyV4k353M7u7lOrNzHPTNzTSM5TClvBcio5p7O2VQ6RUf5bC
afZYB80oKUSE51J0eRbKPTtGSvVoKU4oBwUEmUpxjfBciqpzR042mUmpPi1F
YOrt7J8WUkwhPJei4HvIjKHjpFSvlqKi0wqTvxOkEBCeSyF2HrKn5yQp1a+l
CE0N+D2IaV8hPJdCu/NwfL6LlOrZUlwYddBh9zopJhOeSzFU1HLo1BYp1bel
ODIzztTwkBQ8wnMp0mfMFdkxr616txSS7/ILa7ykuER4LoX73hGzfnhLqf4t
hWdcrPNh5vfWhOdShJxz6rz4gpTq4VLUqmPOzL8opd8/lmLF4cbdR5l2qz4u
RcnF5W/cXjHzJDyXorqo9sCFSCnVy6UYV+4y/PNbKSYSnjOfnzJHYxIrpfq5
FDO39t5omMyMQ3guhX1Q7ean6VKqp0vh0t++q0OxFOfIcqVoaIH1iXIp1del
mO46Q3adaU8gPJeiLuMUP5wjpXq7DKNjey0cViMFh/BchufnExaHMf226u8y
bBw/UtFVIcVZwnMZ3AXF5hv+SKkeLwMnZttkV6afcYTnMsS+CjKbx/y+VZ+X
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
wTfmORKea+Fx7oqD9V8t9c8b8D8ic7u8
          "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
              "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
            ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"30", ",", "10"}], "}"}]}], ",", 
            RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7474692056115093`*^9, 
  3.7474692056115093`*^9}},ExpressionUUID->"03a346e1-670c-45d7-82cf-\
8f57f56c4b74"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"PoissonDistribution", " ", "for", " ", "Distribution", " ", "6"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7208973045571814`*^9, 3.7208973150392113`*^9}, {
  3.720903950960698*^9, 
  3.720903952249617*^9}},ExpressionUUID->"78f0b87b-36e5-429f-bd4b-\
6f6468300410"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "plot61", ",", "plot62", ",", " ", "plot63", ",", " ", "plot64", ",", " ", 
   "plot65"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208532096462817`*^9, 3.7208532115196104`*^9}, {
  3.7208539532346153`*^9, 3.7208539793653493`*^9}, {3.720897105495879*^9, 
  3.7208971171651506`*^9}},ExpressionUUID->"4314fa6a-c925-47e6-aa55-\
0e90cb69495c"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQzX+0bHOLUY39n5UfL/kmBdgf+bGzeXHGBPtdnjxM
2u1t9qeN1z27nrfQvifn+e+VHxfZi932vrLjwwb77D0lkyVYttnPK55deFR/
n/2dn3VZe0oO21c3FR8S2nPCfmNRxsS3Neft50n83bBw6yX72P5DXzVirtsv
LD9zQMrhlv3mue+XH/O+b7/gwdRYT92H9g1ZIAOf2J/ffdl2ocxTqHnP7SOv
zJ50ZsILe5v7/r3T817Zx73f2arj99o+nE9309z3r+1TuJmeM7i+tZfRv6vC
1vjWPvbe3sNnut7ZpwhEWG458c5+z+5HzZM939tvAdv33v4Ys2Zv57r39rfP
fQ9+vPS9/Ye59sKX7723v7m4wJbr+nv7DZHJpps+v7dvnurcnfP8vb15pG76
zd/v7XXbxW6e+w5UV9prs+vfe3tGBhD4YA8ABVqsnA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvePTepG8A8ftf9Vl7SmZnGE/q2CX186vF+x3efIw
abe32Wd8X7ncs+eqfbXIOveHVUvsTz04fddzw0374oyJb2vst9rLCEbXP8u5
a98hdvPc9+DD9hwSr3ul0h7YR1puOVG277x9ME/s7uWvH9rzAk0Tu3nN/suS
GG4z78f27I1Tnbtz7ttfWX3bvKrjif2dnyAHPLbPsFxTeGbZU/sux4SnF5Se
2zdc5E83XPnMXhxk/OOX9ltsXmYkTXpuv+KYt3mn4xt765CeI1dSXkDl39o7
SDGlHVB6ab/9898rFS/f2bOorriieu6l/T0VNqCN7+01E4JnXc54Zd/2OnCH
XOt7+5S9XcrZX17Ztxw4tdB123v7rFgmtdSi1/bhfLqb5r5/b38z6ZH3eq83
9gxg8MEeAJxjnCc=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7bM6bcUSiWP2f1Z+vOSbFGDPk9rdVL/6PJRfYJ/R
pf0n1eCK/a+6rD0lkzvspz2cudZD7YZ9hOWWE2X75ttP2hm6t/nAbXuX7pzn
v1dutP9R1eyawH7fPqB3ep5Q8wH7WT39F4wZH9pXvlQz5Fhzxp5h0Y4Eq5hH
UP4V+/Sr+j8fTn9sf9k3SSDC8o79gdtvZzBsf2KfCzTt46WH9hXft87V2vPU
/vBXjZj+Q0/t36e+2LRj5TP70skSLGF8L+3nnGA3P9v43H5DUcbEtzWv7Yv+
RalEur2wP+5t3umY8NZ+/5Kv7Qo/X9jv9uRh0m5/Zx9lkDNx3+yX9tzXFxfY
cr23j37R5bJS/5X9eveHVSLr3tsfut931WTbK/sbIOnr7+0NsmZvn2bw2l6n
Xezmue/v7Usc7z7WZH1jzwAGH+wB5z6leA==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/XDVfrZV4i72f1Z+vOSblGAf/jZf6IVXtn21yDr3
h1Ul9le3F37S+9Zhb3Pfv3d63iT7NslXwnJBC6HyS+yd5mbLtNVutle+/bMu
a88W+7JVh3zfTzhk/yZwh1zr64P2C5STHf4+PGdfaMt1fXHBWfvfPS+fyn6/
Zr9/vpT+XZVr9lnnWdY+UrpvDzJNZN19e0PZvhUb+h/bbyjKmPi25rH9iv+9
Nxhkntu3i9089z34ub16/R/ey/9f2tubxu3y5Hllr+O6NoZP5429FljBa3vN
/G8Lkja8tZdgCePT3fTWXmFj5srste/sHy+dfURhwzt758SPIf/c39tzrJGJ
SrF+b88Uvl757oL3UPvf299Q+nRZ7iJQXBtk4Hv7yarelz++fG/fONW5O+f5
e3sLYetm4W/v7cHS39/bs1z79WfH7/f2DGDwwR4AmEyrsg==
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.6, 0.4, 0.2], 
           Dashing[{0, Small}]], 
          
          LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
           0.9999999795918367, 0.9999999795918367}}]}}, {{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.6, 0.4, 0.2]], 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPXUmzwz/YjX7X3VZe0omV9irqRhMFZycar9TrvV1
4I4+e8YFSlzFnn32t3+CFCy231B4wT13/gr7y75JAhGWW+xZ98xzP1q3x97m
vn/v9LxD9jlJ8cFtFqfsc5//Xvnx0ll7zTPz3n9qumIft8uTh0n7uv1Hn/9z
sxvu2O8Am3/PPvxpi3mz4iN7tsapzt05j+0/fYp5fXL6U3ug4naxm8/sJS5u
lK6tfGEPlASa+NK+e9nu5I97Xtk3gJQ/f20vOTvolk/eG/vZRxQ2FGW8tRf4
MzGUaymQBjruRNk7e5uA/zIPqt/Z31UB2fDePqza8PEe7vf2LGF8upvmvrc/
VSN2ITXzvf31xQW2XNff26/6/G3G3SXv7UG2n/v+3n7qn0kNJ0++t2cAgw/2
AOBQmWs=
           "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {{}, 
        StyleBox[
         LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
          0.9999999795918367, 0.9999999795918367}}], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], StripOnInput -> False]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          
          TemplateBox[{"\"NormalDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"ExponentialDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GeometricDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"PoissonDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 1, 0], Editable -> False, Selectable -> False],
                   "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"GammaDistribution\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {30, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                   False], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    Opacity[1], 
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    AbsolutePointSize[5], 
                    PointBox[{0, 0}]}], ",", "Automatic"}], "}"}], "}"}]}], 
                ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"30", ",", "10"}], "}"}]}], ",", 
                RowBox[{"\"Dividers\"", "\[Rule]", "False"}]}], "]"}]& ), 
           Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7474692073308716`*^9, 
  3.747469207346509*^9}},ExpressionUUID->"c6778327-f949-4079-8109-\
2145f0e63214"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uppgift 5", "Subsection",
 CellChangeTimes->{{3.7208626731460896`*^9, 3.7208626807246017`*^9}, {
  3.7208677844389896`*^9, 3.7208677853830123`*^9}, {3.720898229024102*^9, 
  3.720898233515281*^9}},ExpressionUUID->"398c8d7c-3db5-4298-8a5c-\
1dcd5f40fe6e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.720898267239463*^9, 3.72089830917212*^9}, {
  3.720898428411684*^9, 
  3.720898510736493*^9}},ExpressionUUID->"a76a08bd-693e-4a50-ac1c-\
5d4a66dd07bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]12", ",", "gammaD"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208994482820015`*^9, 3.7208994842659254`*^9}, 
   3.7208999573372016`*^9},ExpressionUUID->"d013a9ab-b5b5-4a58-aa13-\
f6f49c1184f8"],

Cell[BoxData[
 RowBox[{"GammaDistribution", "[", 
  RowBox[{"0.9702942883021447`", ",", "0.21625860771800573`"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7208991140718937`*^9, {3.7208994798403096`*^9, 3.7208994846972246`*^9}, 
   3.720900003827488*^9},ExpressionUUID->"9ebec714-83b7-4de0-b548-\
48443943d40e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7208983177371826`*^9, 3.7208983178632545`*^9}, {
  3.7208984200102887`*^9, 3.7208984202844825`*^9}, {3.7208985229831543`*^9, 
  3.7208985233774295`*^9}},ExpressionUUID->"8c038c7e-ddc2-4f25-ad7b-\
2db2eeb8b726"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]24", ",", "geoD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985678071065`*^9}, {3.7208991189351377`*^9, 
  3.7208991707394037`*^9}},ExpressionUUID->"014d18ff-9b96-4f37-b244-\
595b34c46a14"],

Cell[BoxData[
 RowBox[{"GeometricDistribution", "[", "0.0690512360171247`", "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.720899171276777*^9, 
   3.7209000087659793`*^9},ExpressionUUID->"3e397ea5-cacd-421f-ad21-\
ce1985fd0167"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "4"}], "*)"}]], "Input",
 CellChangeTimes->{{3.72089832901013*^9, 
  3.7208983291512284`*^9}},ExpressionUUID->"23d9c830-f0a9-4519-a512-\
bc1c025084ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]41", ",", "normalD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985983661547`*^9}, {3.72089864631793*^9, 
  3.720898646779247*^9}, {3.7208992291036587`*^9, 
  3.7208992352550063`*^9}},ExpressionUUID->"70ced42a-dc52-449e-82ae-\
afcf9f2dd4c4"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"2.9827343709816203`", ",", "5.154983546721329`"}], "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.7208986039150763`*^9, 3.720898651662706*^9, 3.720899235572235*^9, 
   3.720900012054307*^9},ExpressionUUID->"39b502b5-6f0a-44c7-978b-\
b37ae781bd58"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Distribution", " ", "6"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7208983339686356`*^9, 
  3.720898334144759*^9}},ExpressionUUID->"7ec6bc13-b607-4dd4-9a37-\
4b3b71091af5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"\[DoubleStruckX]64", ",", "poissonD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720898350137895*^9, 3.720898406449716*^9}, {
  3.7208985569393945`*^9, 3.7208985983661547`*^9}, {3.720898701661976*^9, 
  3.720898746405463*^9}, {3.7208992784879785`*^9, 
  3.7208993116333933`*^9}},ExpressionUUID->"14722957-56f2-498f-a7ed-\
c13698a85f0d"],

Cell[BoxData[
 RowBox[{"PoissonDistribution", "[", "9.758`", "]"}]], "Output",
 CellChangeTimes->{{3.7208985619229183`*^9, 3.7208985726284866`*^9}, 
   3.7208986039150763`*^9, 3.7208987087129555`*^9, 3.7208987507875476`*^9, 
   3.7208993120066557`*^9, 
   3.720900018244691*^9},ExpressionUUID->"67e4e107-afd2-46f7-983a-\
ace00489ed64"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uppgift 6", "Subsection",
 CellChangeTimes->{{3.720867507347829*^9, 3.7208675165312414`*^9}, 
   3.7209076460925527`*^9},ExpressionUUID->"0d50fabe-c01b-441a-82aa-\
d7f94ed433c3"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input",Expressio\
nUUID->"3fecbee0-f0ed-4920-8429-0904932bc104"],

Cell["\<\
En metod som tar ut konfidensintervall f\[ODoubleDot]r en parameter som inte \
\[ADoubleDot]r l\[ADoubleDot]ngre \[ADoubleDot]n 10% av dess medelv\
\[ADoubleDot]rde \
\>", "Text",
 CellChangeTimes->{{3.7209092674066505`*^9, 3.720909321063146*^9}, {
  3.7209093566623116`*^9, 3.7209094023356075`*^9}, {3.747469231134078*^9, 
  3.747469240657565*^9}},ExpressionUUID->"7793f8ae-8df0-466f-b604-\
2a07b461f2c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"clt\[Alpha]", "[", 
   RowBox[{"d_", ",", " ", "m_", ",", "a_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], " ", ",", 
      RowBox[{"n", "=", "2"}], ",", "\[DoubleStruckX]", ",", " ", 
      "\[DoubleStruckA]", ",", " ", "find\[Alpha]", ",", " ", "ci\[Alpha]1", 
      ",", " ", "ci\[Alpha]2", ",", " ", "m\[DoubleStruckA]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"find\[Alpha]", "[", "data_", "]"}], ":=", 
      RowBox[{"List", "@@", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"data", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[DoubleStruckX]", "=", 
         RowBox[{"randomNumber", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[DoubleStruckA]", "}"}], " ", "=", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"find\[Alpha]", "/@", "\[DoubleStruckX]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m\[DoubleStruckA]", " ", "=", " ", 
         RowBox[{"Mean", "[", "\[DoubleStruckA]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}], "=", 
         RowBox[{"MeanCI", "[", 
          RowBox[{"\[DoubleStruckA]", ",", " ", 
           RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ci\[Alpha]1", " ", "\[GreaterEqual]", 
            RowBox[{"m\[DoubleStruckA]", "*", "0.95"}]}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"m\[DoubleStruckA]", " ", "*", " ", "1.05"}], " ", 
            "\[GreaterEqual]", " ", "ci\[Alpha]1"}]}], ",", " ", 
          RowBox[{"i", "=", "0"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"n", "++"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",ExpressionUUID->"eebbd698-8a9f-\
420a-af6b-3a00cb8e01f4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7208993631241684`*^9, 3.7208994175162525`*^9}, {
   3.720899673952916*^9, 3.7208997363392315`*^9}, {3.720899864391904*^9, 
   3.7208998714178824`*^9}, 3.720899924351883*^9, 
   3.7474692829718113`*^9},ExpressionUUID->"bf225ba5-4aeb-4b52-885d-\
874a079bb789"],

Cell["\<\
En metod som tar ut konfidensintervall f\[ODoubleDot]r tv\[ARing] paramterar \
som inte \[ADoubleDot]r l\[ADoubleDot]ngre \[ADoubleDot]n 10% av dess medelv\
\[ADoubleDot]rden. \
\>", "Text",
 CellChangeTimes->{{3.7209093307089653`*^9, 3.7209093349859867`*^9}, {
  3.7209094107535505`*^9, 3.720909414167976*^9}, {3.7474692511787453`*^9, 
  3.7474692650040092`*^9}, {3.7474693043888016`*^9, 
  3.747469325342495*^9}},ExpressionUUID->"99a4e5a5-9e64-4662-9f3c-\
6c71ce153976"],

Cell[BoxData[
 RowBox[{
  RowBox[{"clt\[Alpha]\[Beta]", "[", 
   RowBox[{"d_", ",", " ", "m_", ",", "a_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], " ", ",", " ", 
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"n", "=", "2"}], ",", "\[DoubleStruckX]", ",", " ", 
      "\[DoubleStruckA]", ",", "\[DoubleStruckB]", ",", " ", 
      "find\[Alpha]\[Beta]", ",", " ", "ci\[Alpha]1", ",", " ", "ci\[Alpha]2",
       ",", " ", "ci\[Beta]1", ",", " ", "ci\[Beta]2", ",", " ", 
      "m\[DoubleStruckA]", ",", "m\[DoubleStruckB]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"find\[Alpha]\[Beta]", "[", "data_", "]"}], ":=", 
      RowBox[{"List", "@@", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"data", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"j", " ", "\[Equal]", " ", "1"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[DoubleStruckX]", "=", 
         RowBox[{"randomNumber", "[", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[DoubleStruckA]", ",", "\[DoubleStruckB]"}], "}"}], " ", 
         "=", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"find\[Alpha]\[Beta]", "/@", "\[DoubleStruckX]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"m\[DoubleStruckA]", " ", "=", " ", 
         RowBox[{"Mean", "[", "\[DoubleStruckA]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m\[DoubleStruckB]", " ", "=", " ", 
         RowBox[{"Mean", "[", "\[DoubleStruckB]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", " ", "\[NotEqual]", " ", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}], "=", 
            RowBox[{"MeanCI", "[", 
             RowBox[{"\[DoubleStruckA]", ",", " ", 
              RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", " ", "0"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", " ", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ci\[Beta]1", ",", " ", "ci\[Beta]2"}], "}"}], "=", 
            RowBox[{"MeanCI", "[", 
             RowBox[{"\[DoubleStruckB]", ",", " ", 
              RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ci\[Alpha]1", " ", "\[GreaterEqual]", 
            RowBox[{"m\[DoubleStruckA]", "*", "0.95"}]}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"m\[DoubleStruckA]", " ", "*", " ", "1.05"}], " ", 
            "\[GreaterEqual]", " ", "ci\[Alpha]1"}]}], ",", " ", 
          RowBox[{"i", "=", "0"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ci\[Beta]1", " ", "\[GreaterEqual]", " ", 
            RowBox[{"m\[DoubleStruckB]", " ", "*", "0.95"}]}], "&&", " ", 
           RowBox[{
            RowBox[{"m\[DoubleStruckB]", " ", "*", "1.05"}], " ", 
            "\[GreaterEqual]", " ", "ci\[Beta]2"}]}], ",", "  ", 
          RowBox[{"j", "=", "0"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"n", "++"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ci\[Alpha]1", ",", " ", "ci\[Alpha]2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"ci\[Beta]1", ",", " ", "ci\[Beta]2"}], "}"}]}], " ", 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",ExpressionUUID->\
"f31155f8-e8b8-498c-afda-7cd3e102723d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.720897389220222*^9, {3.7208974934394054`*^9, 3.7208974959742002`*^9}, 
   3.7474692757728825`*^9},ExpressionUUID->"5f702081-c13c-4bf3-8794-\
34b97c7cc57b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]\[Beta]", "[", 
  RowBox[{"1", ",", " ", "n", ",", " ", "gammaD"}], "]"}]], "Input",
 CellChangeTimes->{{3.720866702480817*^9, 3.7208667030242224`*^9}, {
  3.7208694448367586`*^9, 3.7208694449748507`*^9}, {3.7208974167615795`*^9, 
  3.7208974721473703`*^9}, {3.7208994357791915`*^9, 3.7208994371001263`*^9}, {
  3.720899493784665*^9, 3.7208994994916716`*^9}, {3.7208997626818233`*^9, 
  3.7208997642719584`*^9}, {3.720899930373141*^9, 
  3.7208999328268766`*^9}},ExpressionUUID->"0d4fcf84-fcea-4919-b8ed-\
05024957e257"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9649016163217382`", ",", "1.0195560936565222`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21312891600238856`", ",", "0.2314114898046231`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7208694789672933`*^9, 3.720869603254593*^9, 3.720869662461767*^9, 
   3.720870006602928*^9, 3.7208718794452543`*^9, 3.7208754499534035`*^9, 
   3.720876283518487*^9, 3.7208974195865602`*^9, 3.7208974817491407`*^9, {
   3.7208997609195766`*^9, 3.7208997966741405`*^9}, 3.7208998425199156`*^9, 
   3.720899898650133*^9, 
   3.720899933650467*^9},ExpressionUUID->"e202ed28-3579-411c-aa32-\
6792931fc420"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]", "[", 
  RowBox[{"2", ",", " ", "n", ",", " ", "geoD"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.720866502758896*^9, 3.7208665476027403`*^9}, {
   3.7208694476347437`*^9, 3.7208694477578173`*^9}, 3.7208974246831636`*^9, {
   3.7208974873611097`*^9, 
   3.7208974881736927`*^9}},ExpressionUUID->"e50a5be7-cff6-4b41-9556-\
c4d1bd1c7323"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06311766572234834`", ",", "0.06545716823035524`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.720866855387924*^9, 3.720869478985288*^9, 3.720869603312626*^9, 
   3.7208696624877863`*^9, 3.7208700066779814`*^9, 3.7208718794592648`*^9, 
   3.720875449976431*^9, 3.7208762835385017`*^9, {3.720897488595981*^9, 
   3.7208974993075542`*^9}, 
   3.720899901197926*^9},ExpressionUUID->"2f068a24-0572-45f6-8be3-\
6c48be4bd06b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]\[Beta]", "[", 
  RowBox[{"4", ",", " ", "n", ",", " ", "normalD"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208667637681327`*^9, 3.720866775632383*^9}, {
  3.720869455955613*^9, 3.7208694560626884`*^9}, {3.7208975237938633`*^9, 
  3.720897525250908*^9}},ExpressionUUID->"c0ce9f15-156d-49b3-9831-\
7699d77edd57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.966745926337509`", ",", "3.1546749359285955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.922598928281953`", ",", "5.263783108363482`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.720866855440961*^9, 3.7208694790243344`*^9, 
  3.7208696033916807`*^9, 3.720869662658889*^9, 3.7208700067690444`*^9, 
  3.7208718795143027`*^9, 3.7208754500674963`*^9, 3.72087628361756*^9, 
  3.720897525989436*^9},ExpressionUUID->"cfe11e6f-1dcc-4acc-8899-\
d45df0ca5467"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clt\[Alpha]", "[", 
  RowBox[{"6", ",", " ", "n", ",", " ", "poissonD"}], "]"}]], "Input",
 CellChangeTimes->{{3.7208668351154337`*^9, 3.72086686463845*^9}, {
  3.7208694624602213`*^9, 3.7208694625722904`*^9}, {3.7208975710878124`*^9, 
  3.7208975718893623`*^9}},ExpressionUUID->"7dec0912-8796-4588-81b3-\
fc5ab0f7e680"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.547351468115098`", ",", "10.051315198551569`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7208668697250557`*^9, 3.720866872858261*^9}, {
   3.7208694632447653`*^9, 3.720869479125387*^9}, 3.720869603479743*^9, 
   3.7208696628039913`*^9, 3.720870006809073*^9, 3.7208718795463247`*^9, 
   3.720875450170573*^9, 3.7208762836585894`*^9, {3.720897572735961*^9, 
   3.7208975792015314`*^9}},ExpressionUUID->"b6996b60-fd23-4595-9cdd-\
6f4e86ddac66"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Kommunikationssystem"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False,
"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.3199999999999, 841.92}},
TrackCellChangeTimes->True,
Magnification:>0.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 286, 5, 73, "Title",ExpressionUUID->"ee64aa5e-899f-4dcf-a137-b3c9d5eb6fb7"],
Cell[869, 29, 381, 9, 48, "Text",ExpressionUUID->"7150fad8-fb33-4c90-863a-604a1a5d7ee2"],
Cell[1253, 40, 350, 7, 48, "Text",ExpressionUUID->"88b18865-8627-443e-84b5-0d4359eb9469"],
Cell[CellGroupData[{
Cell[1628, 51, 285, 4, 54, "Subchapter",ExpressionUUID->"0a5119bd-70da-47b1-99b2-3b454c673d51"],
Cell[CellGroupData[{
Cell[1938, 59, 210, 4, 54, "Section",ExpressionUUID->"73423096-2919-4b20-82ea-b2644532926e"],
Cell[CellGroupData[{
Cell[2173, 67, 157, 3, 37, "Subsection",ExpressionUUID->"cd665067-5522-4615-a06e-835ff2a7dc7d"],
Cell[2333, 72, 242, 4, 29, "Text",ExpressionUUID->"f441a524-5ccf-42c0-9097-b598e4c07770"],
Cell[CellGroupData[{
Cell[2600, 80, 382, 5, 28, "Item",ExpressionUUID->"9a851a11-4453-4520-8b89-f743ec6e0399"],
Cell[2985, 87, 407, 8, 28, "Item",ExpressionUUID->"6031bad0-40a8-47f1-afb4-068f75ed2200"],
Cell[3395, 97, 371, 11, 28, "ItemNumbered",ExpressionUUID->"0c1a27e5-66e7-4186-a4af-7e7ce3df656e"],
Cell[3769, 110, 352, 10, 28, "ItemNumbered",ExpressionUUID->"e5fca679-8788-46e7-accf-cf475b564c1c"],
Cell[4124, 122, 410, 12, 28, "ItemNumbered",ExpressionUUID->"fba67ea8-de9f-4892-99b2-8bcd97bafade"],
Cell[4537, 136, 501, 9, 28, "Item",ExpressionUUID->"67bc725f-57f5-40b1-9c41-2d5c02f563e6"]
}, Open  ]],
Cell[5053, 148, 315, 5, 29, "Text",ExpressionUUID->"4172e431-5c14-418a-b203-80a01b55ae21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5405, 158, 181, 3, 37, "Subsection",ExpressionUUID->"6467dae8-3faf-42a7-bd93-7a8076d81ace"],
Cell[CellGroupData[{
Cell[5611, 165, 389, 6, 27, "Subsubsection",ExpressionUUID->"ea146864-0e5e-48ec-9543-c8926a1a7a01"],
Cell[6003, 173, 2430, 63, 222, "Text",ExpressionUUID->"f602c6f6-221c-4cf8-bb7f-0313590dc4f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8470, 241, 278, 4, 27, "Subsubsection",ExpressionUUID->"297ac78e-12dc-4ef8-92c9-6d02a1569b46"],
Cell[8751, 247, 56492, 1006, 851, "Text",ExpressionUUID->"163409c9-7fad-4aa4-8e49-3571ca0dbb0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65280, 1258, 269, 5, 27, "Subsubsection",ExpressionUUID->"2f930b85-b437-4052-868c-c216df6ffdc9"],
Cell[65552, 1265, 1880, 35, 216, "Text",ExpressionUUID->"03bcb37d-20cc-401c-b3e5-bcfb7f08ee1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67493, 1307, 147, 3, 54, "Section",ExpressionUUID->"95680a21-109c-4e8d-953c-0ce9d7d38baf"],
Cell[67643, 1312, 518, 12, 63, "Input",ExpressionUUID->"89a95ce5-bfdc-4c96-bdec-035d179310b9"],
Cell[CellGroupData[{
Cell[68186, 1328, 475, 13, 27, "Subsubsection",ExpressionUUID->"31dd2a80-60f8-4bc8-bf17-812e81d87d20"],
Cell[68664, 1343, 646, 13, 45, "Input",ExpressionUUID->"e6da2176-1da6-42e6-a3ee-2ede01599ec0"],
Cell[CellGroupData[{
Cell[69335, 1360, 382, 9, 26, "Input",ExpressionUUID->"86118183-68aa-4d85-8677-7d1e9878c682"],
Cell[69720, 1371, 730, 11, 30, "Output",ExpressionUUID->"98b0b125-a7e9-451f-82ba-46d5a503309f"]
}, Open  ]],
Cell[70465, 1385, 364, 9, 26, "Input",ExpressionUUID->"128ad7d7-e5b1-46f6-a11a-1e55cbd71b39"],
Cell[CellGroupData[{
Cell[70854, 1398, 527, 15, 26, "Input",ExpressionUUID->"1adbc8c8-0fcd-4bcf-aee1-6acf6eebf16d"],
Cell[71384, 1415, 760, 12, 63, "Output",ExpressionUUID->"b1102933-30cb-4c90-9470-fad73325f0cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72181, 1432, 279, 5, 45, "Input",ExpressionUUID->"3860a9ff-9922-42bb-981f-a4d2e3cf1363"],
Cell[72463, 1439, 726, 13, 30, "Output",ExpressionUUID->"cd019ac0-8668-412c-bc22-fc020ab5c378"],
Cell[73192, 1454, 741, 13, 30, "Output",ExpressionUUID->"1293dc23-5677-4f71-8ba9-6df3c65aedfd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73982, 1473, 232, 4, 27, "Subsubsection",ExpressionUUID->"c8e275c2-d9b7-4e53-b3f0-3ab05673f30a"],
Cell[74217, 1479, 1903, 46, 153, "Input",ExpressionUUID->"69775ec8-9f6f-4937-87d3-041cfc8db761"],
Cell[CellGroupData[{
Cell[76145, 1529, 1875, 52, 99, "Input",ExpressionUUID->"d2969d3f-4dc8-4f8b-932f-8ca7aa0a0d64"],
Cell[78023, 1583, 222, 5, 53, "Output",ExpressionUUID->"26366df1-ad70-44c5-b66e-9ff2aa1f7e1b"],
Cell[78248, 1590, 220, 4, 30, "Output",ExpressionUUID->"4353f9b4-32dc-4c0a-9520-e8a5fff01122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78505, 1599, 999, 27, 45, "Input",ExpressionUUID->"b3eaebea-7e51-47b3-b8fd-d6b56b976135"],
Cell[79507, 1628, 679, 11, 30, "Output",ExpressionUUID->"58372901-e5bd-4b4e-9d2d-8f67743e8726"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80223, 1644, 2098, 56, 99, "Input",ExpressionUUID->"233b4c58-58ad-4573-8bb2-dc63d67887f1"],
Cell[82324, 1702, 810, 13, 53, "Output",ExpressionUUID->"28ea1772-baa5-47e5-a900-6a8c21d922d8"],
Cell[83137, 1717, 808, 12, 30, "Output",ExpressionUUID->"c9dc41a8-dc26-4d91-935a-a6042f55c396"]
}, Open  ]],
Cell[83960, 1732, 239, 5, 26, "Input",ExpressionUUID->"3841475d-bc8b-4e2b-9591-eaddaf4758a3"],
Cell[CellGroupData[{
Cell[84224, 1741, 1909, 52, 81, "Input",ExpressionUUID->"0872fc31-efaf-46d9-845f-b8dcc16c697b"],
Cell[86136, 1795, 530, 14, 57, "Output",ExpressionUUID->"d71b4f61-f609-4ce4-a20e-ac38307b930c"],
Cell[86669, 1811, 619, 17, 56, "Output",ExpressionUUID->"e74a515c-22b4-4fb8-9ac2-e91710ff927b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87325, 1833, 993, 24, 26, "Input",ExpressionUUID->"d04086a5-5a77-4148-b8f0-c3476ac923a5"],
Cell[88321, 1859, 1001, 27, 93, "Output",ExpressionUUID->"80852f04-f114-402d-bb63-a4026f352695"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89359, 1891, 791, 15, 26, "Input",ExpressionUUID->"5826c547-33c7-4684-bfa7-e27e3ebcd615"],
Cell[90153, 1908, 377, 10, 30, "Output",ExpressionUUID->"614755c6-fe23-4cef-b6cd-0ad8daf4dbad"]
}, Open  ]],
Cell[90545, 1921, 233, 4, 26, "Input",ExpressionUUID->"cfb92555-abfb-4c22-b186-6e6d92929db2"],
Cell[CellGroupData[{
Cell[90803, 1929, 731, 23, 45, "Input",ExpressionUUID->"6ff4916c-3ad3-4ea9-940a-4bc702767c32"],
Cell[91537, 1954, 17774, 311, 224, "Output",ExpressionUUID->"572ca79d-3ccb-49fd-a839-22684837d293"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109348, 2270, 1160, 27, 26, "Input",ExpressionUUID->"b57fbf61-7611-49e1-a8e5-4e4052f99044"],
Cell[110511, 2299, 401, 11, 55, "Output",ExpressionUUID->"783baca1-08a3-4ce1-8ac8-f5398c0314e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110949, 2315, 821, 22, 26, "Input",ExpressionUUID->"a483af02-aaf6-406c-a865-a0f0b552bdb2"],
Cell[111773, 2339, 1030, 21, 55, "Output",ExpressionUUID->"fd52df67-ac4c-433d-90a8-62a682daafb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112840, 2365, 278, 6, 26, "Input",ExpressionUUID->"8a5077c1-d931-4508-a92b-832ae26cd523"],
Cell[113121, 2373, 970, 20, 57, "Output",ExpressionUUID->"c86f620c-087a-4d6c-ac8f-963c52aac465"]
}, Open  ]],
Cell[114106, 2396, 584, 15, 26, "Input",ExpressionUUID->"ef049bc9-4f99-4049-b35c-6458dce61489"],
Cell[CellGroupData[{
Cell[114715, 2415, 181, 3, 26, "Input",ExpressionUUID->"5927c506-246a-40dd-bf07-b6cc8e52c6b3"],
Cell[114899, 2420, 430, 12, 57, "Output",ExpressionUUID->"5d9ac52a-5a1a-4662-b487-582e179d4e75"]
}, Open  ]],
Cell[115344, 2435, 987, 23, 26, "Input",ExpressionUUID->"e2d8e63b-dd2f-4923-878c-5418deb3bc49"],
Cell[CellGroupData[{
Cell[116356, 2462, 556, 11, 26, "Input",ExpressionUUID->"c31be174-e61a-4fa7-9ca8-dff47f542c35"],
Cell[116915, 2475, 808, 20, 70, "Output",ExpressionUUID->"25b678f6-93a9-42df-92a6-210926bcf764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117760, 2500, 730, 21, 45, "Input",ExpressionUUID->"4b62812b-29d2-477b-bf47-971c11fb6678"],
Cell[118493, 2523, 18276, 319, 224, "Output",ExpressionUUID->"fdf81ef0-5b01-401f-8ee9-c3190590bca4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136818, 2848, 239, 4, 27, "Subsubsection",ExpressionUUID->"a0ccf128-c8ae-4f60-8c3d-fe64015f6881"],
Cell[137060, 2854, 898, 20, 63, "Input",ExpressionUUID->"2ebd2b30-6790-4f2d-9963-51e30d303b5b"],
Cell[CellGroupData[{
Cell[137983, 2878, 583, 11, 26, "Input",ExpressionUUID->"26fd0e36-9fbf-41bf-a82f-2cc7502e43c3"],
Cell[138569, 2891, 496, 11, 22, "Message",ExpressionUUID->"dbe736e7-ad59-4436-b45d-68daea09832a"],
Cell[139068, 2904, 743, 11, 30, "Output",ExpressionUUID->"2f8b2885-606b-4ae7-9f85-1592a3aeeba3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139848, 2920, 1128, 32, 45, "Input",ExpressionUUID->"d396db4f-2c2b-4c23-81dc-96b801d69614"],
Cell[140979, 2954, 729, 13, 30, "Output",ExpressionUUID->"e46e494b-641b-4305-83fe-bdf59542c3b1"],
Cell[141711, 2969, 724, 12, 30, "Output",ExpressionUUID->"e625d745-65c2-49e6-8465-d0bf665062bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142472, 2986, 424, 10, 26, "Input",ExpressionUUID->"3b7c4281-714b-4090-ab55-1c76a4edf399"],
Cell[142899, 2998, 605, 9, 30, "Output",ExpressionUUID->"f6097d88-c94a-421a-ba66-612dcff84982"],
Cell[143507, 3009, 605, 9, 24, "Output",ExpressionUUID->"dc706f54-bef2-4799-85ed-657ae5023642"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144149, 3023, 594, 14, 59, "Input",ExpressionUUID->"bd614522-b944-46cd-9553-042783241e74"],
Cell[144746, 3039, 160, 3, 24, "Output",ExpressionUUID->"bdb2cad5-c423-4c36-8af1-8d77d61cba58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144943, 3047, 447, 11, 42, "Input",ExpressionUUID->"6791a2e2-b5af-4791-8ebf-abf55c971070"],
Cell[145393, 3060, 451, 7, 24, "Output",ExpressionUUID->"b096224c-95db-4316-8d41-4699aa28a572"]
}, Open  ]],
Cell[145859, 3070, 699, 15, 36, "Input",ExpressionUUID->"58a7ba21-58fe-41ee-bdac-2f9abe8fb3db"],
Cell[146561, 3087, 331, 8, 21, "Input",ExpressionUUID->"88d3d5c8-06a8-4700-95c5-065f5f194cb2"],
Cell[146895, 3097, 255, 7, 21, "Input",ExpressionUUID->"561c5080-7948-4eb4-af8f-90dace47a38e"],
Cell[CellGroupData[{
Cell[147175, 3108, 534, 10, 21, "Input",ExpressionUUID->"7d09b4cf-cb73-43a6-adac-91c0c154e2f6"],
Cell[147712, 3120, 940, 22, 47, "Output",ExpressionUUID->"ad66cbd9-6a8a-4ecb-a8d2-34dab43fc18f"]
}, Open  ]],
Cell[148667, 3145, 463, 10, 36, "Input",ExpressionUUID->"3dd325ef-0fbf-409f-92ef-b30aea1c8209"],
Cell[CellGroupData[{
Cell[149155, 3159, 683, 18, 21, "Input",ExpressionUUID->"04fb670b-9288-429e-a0ac-4fdfaf9fa000"],
Cell[149841, 3179, 411, 9, 24, "Output",ExpressionUUID->"8d3f4735-8159-43e1-9204-518a270766c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150289, 3193, 739, 18, 21, "Input",ExpressionUUID->"59dd27f4-d095-40ad-80ae-8b779c9fa183"],
Cell[151031, 3213, 506, 9, 24, "Output",ExpressionUUID->"36473c1d-6ca2-4242-bbee-7c8c2358acb2"]
}, Open  ]],
Cell[151552, 3225, 393, 8, 21, "Input",ExpressionUUID->"cb528321-8779-4ac0-b417-22b05d5ac8de"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152006, 3240, 332, 5, 43, "Subchapter",ExpressionUUID->"f14f02a7-0158-4e48-adeb-d2954efdc20e"],
Cell[CellGroupData[{
Cell[152363, 3249, 364, 6, 43, "Section",ExpressionUUID->"c47fff70-e266-4498-97b6-71e3684815af"],
Cell[152730, 3257, 674, 16, 38, "Text",ExpressionUUID->"416957a0-c650-4e90-b1e0-22aef694925b"],
Cell[CellGroupData[{
Cell[153429, 3277, 553, 11, 22, "Item",ExpressionUUID->"2dc2eef8-5136-4f82-9d18-34dd63229c60"],
Cell[153985, 3290, 297, 6, 22, "Item",ExpressionUUID->"409bd9dc-2f13-4dd6-8dea-b997e0022e2a"],
Cell[154285, 3298, 619, 11, 35, "Item",ExpressionUUID->"0116234b-448b-4189-9f40-88d1aa400932"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154941, 3314, 181, 3, 29, "Subsection",ExpressionUUID->"32e81a9f-4e7f-4876-b94d-b6fc9f59fd15"],
Cell[CellGroupData[{
Cell[155147, 3321, 582, 8, 21, "Subsubsection",ExpressionUUID->"bcf69dd8-9a72-45de-8272-7ca7a68e2570"],
Cell[155732, 3331, 198278, 3840, 461, "Text",ExpressionUUID->"2a6baae6-6f41-444c-b36c-7030a9252fd1"]
}, Closed]],
Cell[CellGroupData[{
Cell[354047, 7176, 355, 5, 17, "Subsubsection",ExpressionUUID->"f4b7598b-007d-4311-84b4-d960db6ebc9e"],
Cell[354405, 7183, 3277, 71, 220, "Text",ExpressionUUID->"808e49a6-9a64-44be-a654-635636de2e4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357719, 7259, 296, 5, 21, "Subsubsection",ExpressionUUID->"c439f0d7-35c0-4559-8cae-d1efccb0ec49"],
Cell[358018, 7266, 4005, 93, 288, "Text",ExpressionUUID->"57a82bc7-f071-4acd-8e38-3b5588a6a6b8"],
Cell[362026, 7361, 376, 8, 38, "Text",ExpressionUUID->"07dd5404-b02c-4af7-8df5-98d02e3464b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362463, 7376, 267, 4, 43, "Section",ExpressionUUID->"3d490705-987d-436d-b36f-12691b0b03fd"],
Cell[CellGroupData[{
Cell[362755, 7384, 582, 8, 21, "Subsubsection",ExpressionUUID->"f44243e8-c84f-4819-a70b-3906fe05745c"],
Cell[363340, 7394, 199565, 3854, 1037, "Text",ExpressionUUID->"b4b90f77-da26-4c45-b2de-70de2113dc54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562942, 11253, 350, 6, 10, "Subsubsection",ExpressionUUID->"f3db26c3-6e18-48ca-9b2e-15cdd9e227a5"],
Cell[563295, 11261, 1868, 38, 60, "Text",ExpressionUUID->"4ab286f7-ea36-4a1f-afd7-859117063b6e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[565212, 11305, 152, 3, 21, "Section",ExpressionUUID->"59468890-170f-4afd-8c55-90fad536edec"],
Cell[CellGroupData[{
Cell[565389, 11312, 260, 4, 14, "Subsection",ExpressionUUID->"e1b7dd9b-bb35-48d9-a96e-310371049f87"],
Cell[565652, 11318, 1648, 38, 72, "Input",ExpressionUUID->"ee231c1d-f37d-4ce0-8785-4679383a33f1"],
Cell[567303, 11358, 208, 5, 10, "Input",ExpressionUUID->"c5ff8cdb-2bf7-46ab-8d34-253348f642d8"],
Cell[567514, 11365, 1272, 33, 57, "Input",ExpressionUUID->"daef4b07-9c8d-4449-92da-cf77f547b445"],
Cell[568789, 11400, 142, 3, 10, "Input",ExpressionUUID->"b0a601bc-ee6c-4c35-89be-be9d20688ff9"],
Cell[568934, 11405, 2441, 50, 34, "Input",ExpressionUUID->"c05bd390-a88a-429a-81d3-0ee8380d5188"],
Cell[571378, 11457, 213, 5, 10, "Input",ExpressionUUID->"97da71dd-d4c7-4e97-894a-f339edcf5b90"],
Cell[571594, 11464, 1594, 39, 34, "Input",ExpressionUUID->"45b18a3a-0413-48fa-aaf4-103c4e63b0fb"],
Cell[573191, 11505, 207, 4, 10, "Input",ExpressionUUID->"b4329fbe-0f08-40e1-b5e6-a1984dd99ddb"],
Cell[573401, 11511, 213, 5, 10, "Input",ExpressionUUID->"461730d3-5290-4cdc-92fc-6605d75fa449"],
Cell[573617, 11518, 529, 12, 10, "Input",ExpressionUUID->"2ac470a8-0f43-4c48-96dd-7e29367bcaae"],
Cell[574149, 11532, 179, 3, 10, "Input",ExpressionUUID->"914b5ceb-08cb-468e-a073-5fb488769d3e"],
Cell[574331, 11537, 213, 5, 10, "Input",ExpressionUUID->"9a44f295-5424-4abf-b1db-73aa8f86e811"],
Cell[574547, 11544, 1722, 44, 41, "Input",ExpressionUUID->"6d2e5d97-0214-4d96-8a20-4ce68eeed802"],
Cell[576272, 11590, 203, 4, 10, "Input",ExpressionUUID->"a27310a1-3d0e-493c-81dd-16a99b839094"],
Cell[576478, 11596, 307, 7, 10, "Input",ExpressionUUID->"2d80f39d-720f-481b-8778-11e9bd1ec7bd"],
Cell[576788, 11605, 557, 10, 10, "Input",ExpressionUUID->"bd22e143-d602-494f-9c6c-6d29fefe45e4"],
Cell[577348, 11617, 94270, 1713, 113, "Input",ExpressionUUID->"026c4c54-04ed-41c1-8d7d-f496d9ea7c83"],
Cell[671621, 13332, 310, 8, 10, "Input",ExpressionUUID->"16e80010-9dd8-4086-9797-6423f8ba9f3c"],
Cell[671934, 13342, 410, 8, 10, "Input",ExpressionUUID->"363439bd-2c0a-43ed-808f-193564bd6364"],
Cell[672347, 13352, 36136, 759, 113, "Input",ExpressionUUID->"7334ae3c-bba2-411a-8272-e24bbfc69397"],
Cell[708486, 14113, 308, 7, 10, "Input",ExpressionUUID->"5ed6052c-ddef-4c71-a970-7cea4ee6cad5"],
Cell[708797, 14122, 235, 4, 10, "Input",ExpressionUUID->"e333d402-1453-48a9-9030-1fdc78011c45"],
Cell[709035, 14128, 25267, 471, 109, "Input",ExpressionUUID->"03a346e1-670c-45d7-82cf-8f57f56c4b74"],
Cell[734305, 14601, 307, 7, 10, "Input",ExpressionUUID->"78f0b87b-36e5-429f-bd4b-6f6468300410"],
Cell[734615, 14610, 388, 8, 10, "Input",ExpressionUUID->"4314fa6a-c925-47e6-aa55-0e90cb69495c"],
Cell[735006, 14620, 39976, 858, 107, "Input",ExpressionUUID->"c6778327-f949-4079-8109-2145f0e63214"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775019, 15483, 260, 4, 14, "Subsection",ExpressionUUID->"398c8d7c-3db5-4298-8a5c-1dcd5f40fe6e"],
Cell[775282, 15489, 259, 6, 10, "Input",ExpressionUUID->"a76a08bd-693e-4a50-ac1c-5d4a66dd07bf"],
Cell[CellGroupData[{
Cell[775566, 15499, 274, 5, 10, "Input",ExpressionUUID->"d013a9ab-b5b5-4a58-aa13-f6f49c1184f8"],
Cell[775843, 15506, 314, 7, 12, "Output",ExpressionUUID->"9ebec714-83b7-4de0-b548-48443943d40e"]
}, Open  ]],
Cell[776172, 15516, 318, 6, 10, "Input",ExpressionUUID->"8c038c7e-ddc2-4f25-ad7b-2db2eeb8b726"],
Cell[CellGroupData[{
Cell[776515, 15526, 346, 6, 10, "Input",ExpressionUUID->"014d18ff-9b96-4f37-b244-595b34c46a14"],
Cell[776864, 15534, 274, 5, 12, "Output",ExpressionUUID->"3e397ea5-cacd-421f-ad21-ce1985fd0167"]
}, Open  ]],
Cell[777153, 15542, 212, 5, 10, "Input",ExpressionUUID->"23d9c830-f0a9-4519-a512-bc1c025084ec"],
Cell[CellGroupData[{
Cell[777390, 15551, 397, 7, 10, "Input",ExpressionUUID->"70ced42a-dc52-449e-82ae-afcf9f2dd4c4"],
Cell[777790, 15560, 355, 6, 12, "Output",ExpressionUUID->"39b502b5-6f0a-44c7-978b-b37ae781bd58"]
}, Open  ]],
Cell[778160, 15569, 213, 5, 10, "Input",ExpressionUUID->"7ec6bc13-b607-4dd4-9a37-4b3b71091af5"],
Cell[CellGroupData[{
Cell[778398, 15578, 399, 7, 10, "Input",ExpressionUUID->"14722957-56f2-498f-a7ed-c13698a85f0d"],
Cell[778800, 15587, 335, 6, 12, "Output",ExpressionUUID->"67e4e107-afd2-46f7-983a-ace00489ed64"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[779184, 15599, 184, 3, 14, "Subsection",ExpressionUUID->"0d50fabe-c01b-441a-82aa-d7f94ed433c3"],
Cell[779371, 15604, 140, 2, 10, "Input",ExpressionUUID->"3fecbee0-f0ed-4920-8429-0904932bc104"],
Cell[779514, 15608, 416, 8, 11, "Text",ExpressionUUID->"7793f8ae-8df0-466f-b604-2a07b461f2c0"],
Cell[779933, 15618, 2489, 58, 96, "Input",ExpressionUUID->"eebbd698-8a9f-420a-af6b-3a00cb8e01f4"],
Cell[782425, 15678, 307, 5, 10, "Input",ExpressionUUID->"bf225ba5-4aeb-4b52-885d-874a079bb789"],
Cell[782735, 15685, 482, 9, 11, "Text",ExpressionUUID->"99a4e5a5-9e64-4662-9f3c-6c71ce153976"],
Cell[783220, 15696, 4303, 99, 150, "Input",ExpressionUUID->"f31155f8-e8b8-498c-afda-7cd3e102723d"],
Cell[787526, 15797, 206, 4, 10, "Input",ExpressionUUID->"5f702081-c13c-4bf3-8794-34b97c7cc57b"],
Cell[CellGroupData[{
Cell[787757, 15805, 555, 9, 10, "Input",ExpressionUUID->"0d4fcf84-fcea-4919-b8ed-05024957e257"],
Cell[788315, 15816, 673, 15, 12, "Output",ExpressionUUID->"e202ed28-3579-411c-aa32-6792931fc420"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789025, 15836, 376, 7, 10, "Input",ExpressionUUID->"e50a5be7-cff6-4b41-9556-c4d1bd1c7323"],
Cell[789404, 15845, 464, 10, 12, "Output",ExpressionUUID->"2f068a24-0572-45f6-8be3-6c48be4bd06b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789905, 15860, 347, 6, 10, "Input",ExpressionUUID->"c0ce9f15-156d-49b3-9831-7699d77edd57"],
Cell[790255, 15868, 536, 12, 12, "Output",ExpressionUUID->"cfe11e6f-1dcc-4acc-8899-d45df0ca5467"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790828, 15885, 344, 6, 10, "Input",ExpressionUUID->"7dec0912-8796-4588-81b3-fc5ab0f7e680"],
Cell[791175, 15893, 483, 8, 12, "Output",ExpressionUUID->"b6996b60-fd23-4595-9cdd-6f4e86ddac66"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

